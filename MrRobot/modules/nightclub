local T, S = require('translations'), require('shared')
local Globals = require('script_globals')
local Masks = require('masks')

pluto_class Nightclub
    nightclub_setups = {
        15534,
        22106,
        18161,
        22068,
        22080,
        22174,
        22067,
        22081,
    }

    function __construct(root)
        self.root = root:list(T'Nightclub', {T'rnightclub'}, '')

        self:CreateSafe()
        self:CreateNC()
    end

    function CreateSafe()
        self.nightclub = self.root:list(T'Nightclub Safe', {}, T'Nightclub Safe related options')
        self.root:divider('')
        self.trigger_production = self.nightclub:action(T'Trigger Production', {}, T'Trigger production for nightclub safe', function()
            self:TriggerNCSafeProduction()
        end)

        self.nightclub:action(T'Collect', {T'rncsafe'}, T'Collect money from the safe remotely without having to open it or even be near it', function()
            self:CollectSafeMoney()
        end)

        self.nightclub:divider('')

        self.afk_loop = self.nightclub:toggle_loop(T'AFK Loop', {}, T'AFK Loop you only need to be in your nightclub for this', function()
            self.trigger_production:trigger()
            repeat
                util.yield_once()
            until memory.read_int(memory.script_global(Globals.NightclubSafeValue)) ~= 0
            self:CollectSafeMoney()
            repeat
                util.yield_once()
            until memory.read_int(memory.script_global(Globals.NightclubSafeValue)) == 0
        end)

        self.auto_collect = self.nightclub:toggle_loop(T'Auto Collect', {}, T'Auto collect money from the safe when entering your nightclub', function()
            if memory.read_int(memory.script_global(Globals.NightclubSafeValue)) ~= 0 then
                self:CollectSafeMoney()
                util.yield(1000)
            end
        end)

        self.display_money = self.nightclub:toggle_loop(T'Safe Value', {}, T'Shows how much money you have in your safe', function()
            local money = memory.read_int(memory.script_global(Globals.NightclubSafeValue))
            util.draw_debug_text($'Nightclub Safe: ${money}')
        end)
    end

    function CreateNC()
        self.root:toggle(T'Clear Nightclub', {}, 'Empty your nightclub', function(state)
            if SCRIPT_CAN_CONTINUE then
                self:ClearNightclub(state)
            end
        end, self:IsNightclubCleared())

        self.root:toggle(T'Turn Off Office Lights', {}, 'Turn off the lights in your office', function(state)
            if SCRIPT_CAN_CONTINUE then
                self:DisableNightclubOfficeLights(state)
            end
        end, self:AreNightclubOfficeLightsDisabled())

        self.root:toggle(T'Dry Ice', {}, 'Enable dry ice in your nightclub', function(state)
            if SCRIPT_CAN_CONTINUE then
                self:UnlockNightclubDryIce(state)
            end
        end, self:IsNightclubDryIceUnlocked())

        self.root:action(T'Upgrade Everything', {}, 'Unlock all upgrades in your nightclub', function()
            if SCRIPT_CAN_CONTINUE then
                self:UnlockNightclubUpgrades()
            end
        end)

        self.root:action(T'Bypass Setup', {}, 'Bypass setup missions in your nightclub', function()
            if SCRIPT_CAN_CONTINUE then
                --self:BypassNightclubSetup() seems to be a weird bug where the function is nil but defined
                local char_slot = util.get_char_slot()
                for self.nightclub_setups as setup do stats.set_packed_stat_bool_code(setup, true, char_slot) end
                S:NewSessionMsg()
            end
        end)

        self.root:action(T'Spawn Troublemaker', {}, 'Spawn a troublemaker in your nightclub', function()
            if SCRIPT_CAN_CONTINUE then
                self:SpawnTroublemaker()
            end
        end)

        self.root:action(T'Yeet Troublemaker', {}, 'Yeet the troublemaker out of your nightclub', function()
            if SCRIPT_CAN_CONTINUE then
                self:YeetTroubleMaker()
            end
        end)
    end

    function TriggerNCSafeProduction()
        local char_slot = util.get_char_slot()
        for i = Globals.NCSafeIncomeStart, Globals.NCSafeIncomeEnd do
            memory.write_int(memory.script_global(262145 + i), 300000)
        end
        memory.write_int(memory.script_global(Globals.NCSafeCapacity), 300000)
        stats.stat_set_int(($'MP{char_slot}_CLUB_PAY_TIME_LEFT'):joaat(), 1, true)
    end

    function CollectSafeMoney()
        if not S:IsScriptRunning('am_mp_nightclub') then
            util.toast('You need to be in your nightclub to collect money from the safe')
        else
            local trigger = memory.script_local(Globals.NCScript, Globals.TriggerNCSafeCollection)
        
            if trigger ~= 0 then
                memory.write_byte(trigger, 1)
                util.yield(500)
                memory.write_byte(trigger, 0)
            end
        end
    end

    function ClearNightclub(state)
        local clear = memory.script_global(Globals.NightclubStatsBase + 2)
        memory.write_byte(clear, memory.bits:setbool(memory.read_byte(clear), Masks.NightclubCleared, state))
    end

    function IsNightclubCleared()
        local clear = memory.script_global(Globals.NightclubStatsBase + 2)
        return memory.bits:check(memory.read_byte(clear), Masks.NightclubCleared)
    end

    function DisableNightclubOfficeLights(state)
        local lights = memory.script_global(Globals.NightclubStatsBase + 2)
        memory.write_int(lights, memory.bits:setbool(memory.read_int(lights), Masks.NightclubOfficeLights, state))
    end

    function AreNightclubOfficeLightsDisabled()
        local lights = memory.script_global(Globals.NightclubStatsBase + 2)
        return memory.bits:check(memory.read_int(lights), Masks.NightclubOfficeLights)
    end

    function UnlockNightclubDryIce(state)
        local ice = memory.script_global(Globals.NightclubStatsBase + 2)
        memory.write_int(ice, memory.bits:setbool(memory.read_int(ice), Masks.NightclubDryIce, state))
    end

    function IsNightclubDryIceUnlocked()
        local ice = memory.script_global(Globals.NightclubStatsBase + 2)
        return memory.bits:check(memory.read_int(ice), Masks.NightclubDryIce)
    end

    function UnlockNightclubUpgrades()
        local upgrades = memory.script_global(Globals.NightclubStatsBase + 1)
        memory.write_int(upgrades, Masks.NightclubMaxUpgrades)
        self:UnlockNightclubDryIce(true)
    end

    function BypassNightClubSetup()
        local char_slot = util.get_char_slot()
        for self.nightclub_setups as setup do stats.set_packed_stat_bool_code(setup, true, char_slot) end
        S:NewSessionMsg()
    end

    function SpawnTroublemaker()
        util.spoof_script(Globals.NCScript, function()
            memory.write_int(memory.script_global(Globals.NCTroubleMakerScenario), 2)
            memory.write_int(memory.script_local(Globals.NCScript, Globals.NCTriggerTrobleMaker), 0)
        end)
    end

    function YeetTroubleMaker()
        util.spoof_script(Globals.NCScript, function()
            memory.write_int(memory.script_local(Globals.NCScript, Globals.NCTriggerYeetTroubleMaker), 0)
        end)
    end
end

return Nightclub