local T, S = require('translations'), require('shared')
local Globals = require('script_globals')

local SettingsBits = S.SettingsBits

pluto_class Settings
    ScriptGlobal = S.ScriptGlobal
    WriteByte = memory.write_byte

    function __construct(root, version)
        self.root = root:list(T'Settings', {T'rsettings'}, T'Settings')
        self.root:divider('v' .. version)
        
        self.remove_transaction_error = self.root:toggle(T'Remove Transaction Errors', {}, T'Removes transaction error notifications so that they do not disturb your gameplay', function()
            util.create_tick_handler(function()
                if self.remove_transaction_error.value == false then
                    return false
                end
                self.WriteByte(self.ScriptGlobal(Globals.TransactionErrorNotification), 0)
            end)
        end)

        self.show_alerts = self.root:toggle(T'Show Alerts', {}, T'Should alerts be shown', function(state)
            if state then
                S.Settings:Set(SettingsBits.ShowAlerts)
            else
                S.Settings:Clear(SettingsBits.ShowAlerts)
            end
        end, S.Settings:IsSet(SettingsBits.ShowAlerts))

        self.remove_transaction_error.value = S.Settings:IsSet(SettingsBits.RemoveTransactionError)
    end
end

return Settings