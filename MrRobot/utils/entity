pluto_class Entity
    function __construct(entity)
        self.entity = entity
        self.ptr = entities.handle_to_pointer(self.entity)
    end

    function __index(key)
        if key:startswith('__') then
            return rawget(Entity, key)
        else
            if not key:match('^[A-Z_]+_[A-Z_]+_[A-Z_]+$') then
                local snake_case_pattern = '^[a-z_]+'

                if key:match(snake_case_pattern) then
                    key = key:upper()
                end
            end

            local func = ENTITY[key] or PED[key] or WEAPON[key] or FIRE[key] or TASK[key] or NETWORK[key] or nil
            local func_type = type(func)

            if func ~= nil and func_type == 'function' then
                if self.entity ~= 0 then
                    return function(...)
                        local args = {...}
                        table.remove(args, 1)

                        if #args > 0 then
                            return func(self.entity, table.unpack(args))
                        else
                            return func(self.entity)
                        end
                    end
                end
            else
                return function(...) end
            end
        end
    end

    function __gc()
        self.entity = nil
        self.ptr = nil
    end
end

return Entity