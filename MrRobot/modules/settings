local T, S = require('translations'), require('shared')
local Globals = require('script_globals')

local SettingsBits = S.SettingsBits

pluto_class Settings
    function __construct(root, version)
        self.root = root:list(T'Settings', {T'rsettings'}, '')
        self.root:divider($'v{version}')

        self.remove_transaction_errors = self.root:toggle_loop(T'Remove Transaction Errors', {}, T'Removes annoying transaction error notifications', || -> memory.write_byte(memory.script_global(Globals.TransactionErrorNotification), 0))

        self.show_alerts = self.root:toggle(T'Show Alerts', {}, T'Should alerts be shown? (enabling this will force alerts to be sent to console instead of displaying)', function(state)
            S.Settings:SetBool(SettingsBits.ShowAlerts, state)
        end, S.Settings:IsSet(SettingsBits.ShowAlerts))

        self.root:toggle(T'Suppress Request Control Failures', {}, T'Should the failed to request control message be displayed?', function(state)
            S.Settings:SetBool(SettingsBits.SuppressRequestControlFailures, state)
        end, S.Settings:IsSet(SettingsBits.SuppressRequestControlFailures))

        self.remove_transaction_errors.value = S.Settings:IsSet(SettingsBits.RemoveTransactionError)
        root:divider('')
    end
end

return Settings