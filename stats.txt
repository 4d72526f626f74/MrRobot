// https://www.unknowncheats.me/forum/grand-theft-auto-v/275597-gtahax-1-50-external.html

(packed)MP_PSTAT_BOOL0 // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)MP_PSTAT_BOOL1 // Stat with Packed booleans index 1. Takes up to 64 booleans.
(packed)MP_PSTAT_BOOL2 // Stat with Packed booleans index 2. Takes up to 64 booleans.
(packed)PSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)PSTAT_BOOL1 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 1. Takes up to 64 booleans.
(packed)PSTAT_BOOL2 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 2. Takes up to 64 booleans.
(packed)MP_PSTAT_INT0 // Stat with Packed integers index 0. Takes up to 8 integers.
(packed)MP_PSTAT_INT1 // Stat with Packed integers index 1. Takes up to 8 integers
(packed)MP_PSTAT_INT2 // Stat with Packed integers index 2. Takes up to 8 integers
(packed)PSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 0. Takes up to 8 integers.
(packed)PSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 1. Takes up to 8 integers
(packed)PSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 2. Takes up to 8 integers
(packed)PSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 3. Takes up to 8 integers
(packed)PSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)PSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)PSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)PSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)PSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(int)SUCCESSFUL_COUNTERS // Add MP0_ or MP1_ // Number of melee counter counter
(int)FIRES_EXTINGUISHED // Add MP0_ or MP1_ // Number of fires extinguished
(int)FIRES_STARTED // Add MP0_ or MP1_ // Number of fires started
(int)TIMES_CHEATED // Add MP0_ or MP1_ // Number of times cheated
(label)MISSION_NAME // Add MP0_ or MP1_ // Current Mission name
(u64)TOTAL_PLAYING_TIME // Add MP0_ or MP1_ // Total Playing time in milliseconds.
(u32)LONGEST_PLAYING_TIME // Add MP0_ or MP1_ // Longest Playing time since last death.
(u32)LONGEST_CAM_TIME_DRIVING // Add MP0_ or MP1_ // Longest time spent driving in cinematic camera in milliseconds.
(int)MPPLY_LEAST_FAVORITE_STATION // Least favorite radio station
(int)MPPLY_MOST_FAVORITE_STATION // Most favorite radio station
(int)DIED_IN_DROWNING // Add MP0_ or MP1_ // Number of times player died by drowning
(int)DIED_IN_DROWNINGINVEHICLE // Add MP0_ or MP1_ // Number of times player died by drowning in vehicle
(int)DIED_IN_EXPLOSION // Add MP0_ or MP1_ // Number of times player died by explosion
(int)DIED_IN_FALL // Add MP0_ or MP1_ // Number of times player died by fall 
(int)DIED_IN_FIRE // Add MP0_ or MP1_ // Number of times player died by fire
(int)DIED_IN_ROAD // Add MP0_ or MP1_ // Number of times player died in a road accident
(int)BUSTED // Add MP0_ or MP1_ // Number of times the player was arrested
(int)MANUAL_SAVED // Add MP0_ or MP1_ // Number of times saved the game manually
(int)AUTO_SAVED // Add MP0_ or MP1_ // Number of times saved the game automatically
(int)PLAYER_KILLS_ON_SPREE // Add MP0_ or MP1_ // Number Players killed done on spree.
(int)COPS_KILLS_ON_SPREE // Add MP0_ or MP1_ // Number Cops killed done on spree.
(int)PEDS_KILLS_ON_SPREE // Add MP0_ or MP1_ // Number Peds killed done on spree.
(u32)LONGEST_KILLING_SPREE // Add MP0_ or MP1_ // Longest killing count in spree.
(u32)LONGEST_KILLING_SPREE_TIME // Add MP0_ or MP1_ // Longest killing time count in spree.
(int)KILLS_PLAYERS // Add MP0_ or MP1_ // Number of players killed
(int)KILLS_STEALTH // Add MP0_ or MP1_ // Number of stealth kills
(int)KILLS_INNOCENTS // Add MP0_ or MP1_ // Number of ped's killed
(int)KILLS_COP // Add MP0_ or MP1_ // Number of Cops killed
(int)KILLS_SWAT // Add MP0_ or MP1_ // Number of Swat killed
(int)KILLS_ENEMY_GANG_MEMBERS // Add MP0_ or MP1_ // Enemy Gang members killed
(int)KILLS_FRIENDLY_GANG_MEMBERS // Add MP0_ or MP1_ // Friendly Gang members killed
(int)KILLS_BY_OTHERS // Add MP0_ or MP1_ // Peds killed by other players
(int)LARGE_ACCIDENTS // Add MP0_ or MP1_ // Number of large accidents.
(float)LONGEST_DRIVE_NOCRASH // Add MP0_ or MP1_ // Longest Drive Without a crash
(float)DIST_CAR // Add MP0_ or MP1_ // Total Distance in a car
(float)DIST_DRIVING_CAR // Add MP0_ or MP1_ // Total Distance driving a car
(u64)TIME_DRIVING_CAR // Add MP0_ or MP1_ // Total time driving a car
(float)DIST_PLANE // Add MP0_ or MP1_ // Total Distance driving a plane
(float)DIST_DRIVING_PLANE // Add MP0_ or MP1_ // Total time driving a plane
(u64)TIME_DRIVING_PLANE // Add MP0_ or MP1_ // Total time driving a plane
(float)DIST_QUADBIKE // Add MP0_ or MP1_ // Total Distance driving a quadbike
(float)DIST_DRIVING_QUADBIKE // Add MP0_ or MP1_ // Total time driving a quadbike
(u64)TIME_DRIVING_QUADBIKE // Add MP0_ or MP1_ // Total time driving a quadbike
(float)DIST_HELI // Add MP0_ or MP1_ // Total Distance driving a heli
(float)DIST_DRIVING_HELI // Add MP0_ or MP1_ // Total time driving a heli
(u64)TIME_DRIVING_HELI // Add MP0_ or MP1_ // Total time driving a heli
(float)DIST_BIKE // Add MP0_ or MP1_ // Total Distance driving a bike
(float)DIST_DRIVING_BIKE // Add MP0_ or MP1_ // Total time driving a bike
(u64)TIME_DRIVING_BIKE // Add MP0_ or MP1_ // Total time driving a bike
(float)DIST_BICYCLE // Add MP0_ or MP1_ // Total Distance driving a bicycle
(float)DIST_DRIVING_BICYCLE // Add MP0_ or MP1_ // Total time driving a bicycle
(u64)TIME_DRIVING_BICYCLE // Add MP0_ or MP1_ // Total time driving a bicycle
(float)DIST_BOAT // Add MP0_ or MP1_ // Total Distance driving a boat
(float)DIST_DRIVING_BOAT // Add MP0_ or MP1_ // Total time driving a boat
(u64)TIME_DRIVING_BOAT // Add MP0_ or MP1_ // Total time driving a boat
(float)DIST_SUBMARINE // Add MP0_ or MP1_ // Total Distance driving a submarine
(float)DIST_DRIVING_SUBMARINE // Add MP0_ or MP1_ // Total time driving a submarine
(u64)TIME_DRIVING_SUBMARINE // Add MP0_ or MP1_ // Total time driving a submarine
(float)DIST_SWIMMING // Add MP0_ or MP1_ // Total Distance driving a swimming
(u64)TIME_SWIMMING // Add MP0_ or MP1_ // Total time driving a swimming
(float)DIST_WALKING // Add MP0_ or MP1_ // Total Distance driving a walking
(u64)TIME_WALKING // Add MP0_ or MP1_ // Total time spent walking
(float)DIST_WALK_ST // Add MP0_ or MP1_ // Total Distance walking in Stealth mode
(float)DIST_RUNNING // Add MP0_ or MP1_ // Total Distance running
(u64)TIME_UNDERWATER // Add MP0_ or MP1_ // Total time underwater.
(u64)TIME_IN_WATER // Add MP0_ or MP1_ // Total time in water.
(u64)TIME_IN_COVER // Add MP0_ or MP1_ // Total time spent in cover
(int)ENTERED_COVER // Add MP0_ or MP1_ // Number of times the player has entered cover
(int)ENTERED_COVER_AND_SHOT // Add MP0_ or MP1_ // Number of times the player has entered cover and fired a shot or shots
(float)AVERAGE_SPEED // Add MP0_ or MP1_ // Average speed when driving a car or a bike
(float)FLIGHT_TIME // Add MP0_ or MP1_ // Average speed when driving a car or a bike
(float)LONGEST_CHASE_TIME // Add MP0_ or MP1_ // Duration of the longest cop chase.
(u32)TOTAL_CHASE_TIME // Add MP0_ or MP1_ // Total time spent losing cops.
(float)LAST_CHASE_TIME // Add MP0_ or MP1_ // Duration of the last cop chase.
(float)TOTAL_TIME_MAX_STARS // Add MP0_ or MP1_ // Total time under maximun wanted stars
(int)STARS_ATTAINED // Add MP0_ or MP1_ // Total Number of wanted stars the player has been awarded
(int)STARS_EVADED // Add MP0_ or MP1_ // Total Number of wanted stars the player has evaded
(int)NO_TIMES_WANTED_LEVEL // Add MP0_ or MP1_ // The number of times character obtains a wanted level
(int)PLANE_LANDINGS // Add MP0_ or MP1_ // Number of good plane landings

<!-- Player stats... -->
(int)NUMBER_OF_ORANGE_BOUGHT // Add MP0_ or MP1_ // Money picked up in the street.
(int)NUMBER_OF_BOURGE_BOUGHT // Add MP0_ or MP1_ // Money picked up in the street.

<!-- Player stats... -->
(bool)DEFAULT_STATS_SET // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SPECIAL_ABILITY // Add MP0_ or MP1_ // Special ability
(int)STAMINA // Add MP0_ or MP1_ // Stamina
(int)STRENGTH // Add MP0_ or MP1_ // Strength
(int)LUNG_CAPACITY // Add MP0_ or MP1_ // Lung capacity modifier
(int)WHEELIE_ABILITY // Add MP0_ or MP1_ // Bike skill modifier
(int)FLYING_ABILITY // Add MP0_ or MP1_ // Flying modifier
(int)SHOOTING_ABILITY // Add MP0_ or MP1_ // Shooting modifier
(int)STEALTH_ABILITY // Add MP0_ or MP1_ // Stealth modifier

(int)SCRIPT_INCREASE_STAM // Add MP0_ or MP1_ // Stat increase - Stamina
(int)SCRIPT_INCREASE_STRN // Add MP0_ or MP1_ // Stat increase - Strength
(int)SCRIPT_INCREASE_LUNG // Add MP0_ or MP1_ // Stat increase - Lung capacity
(int)SCRIPT_INCREASE_DRIV // Add MP0_ or MP1_ // Stat increase - Driving
(int)SCRIPT_INCREASE_FLY // Add MP0_ or MP1_ // Stat increase - Flying
(int)SCRIPT_INCREASE_SHO // Add MP0_ or MP1_ // Stat increase - Shooting
(int)SCRIPT_INCREASE_STL // Add MP0_ or MP1_ // Stat increase - Stealth
(int)SCRIPT_INCREASE_MECH // Add MP0_ or MP1_ // Stat increase - Mechanic

<!-- CASH -->
(s64)PVC_WALLET_BALANCE // Add MP0_ or MP1_ // Per-Character Cash that has been PAID for with real money.
(s64)EVC_WALLET_BALANCE // Add MP0_ or MP1_ // Per-Character Cash that has been EARN in game.
(s64)PVC_BANK_BALANCE // Banked Cash that the player has PAID for with real money.
(s64)EVC_BANK_BALANCE // Banked Cash that the player has EARN, either in game or via other mechanism.
(s64)PVC_BALANCE // Banked Cash that the player has PAID for with real money.
(s64)EVC_BALANCE // Banked Cash that the player has EARN, either in game or via other mechanism.

(s64)EVC_WALLET_BALANCE_CLEARED // Add MP0_ or MP1_ // Total last Cleared amount for each character stat EVC_WALLET_BALANCE.
(s64)EVC_BANK_BALANCE_CLEARED // Total last Cleared amount for stat EVC_BANK_BALANCE.
(bool)MPPLY_IS_HIGH_EARNER // Flag Player as a HIGH EARNER.
(bool)MPPLY_IS_CHEATER // Flag saved with current cheater.
(u64)MPPLY_IS_CHEATER_TIME // Posix Time last time the flag changed value.

<!-- Store Stats -->
(float)MPPLY_STORE_MONEY_SPENT // MPPLAYER - Real money player has spent in store
(s64)MPPLY_STORE_MONEY_BOUGHT // MPPLAYER - Game Money player has bought in the store
(s64)MPPLY_STORE_TOTAL_MONEY_BOUGHT // MPPLAYER - Total game money player has bought in store
(u64)MPPLY_STORE_PURCHASE_POSIX_TIME // MPPLAYER - Last purchase posix time.
(s64)MPPLY_STORE_CHECKOUTS_CANCELLED // MPPLAYER - The number of times a user has cancelled a purchase after going to plaform checkout

<!-- SPEND MONEY -->
(short)MONEY_SPENT_WEAPON_ARMOR // Add MP0_ or MP1_ // Money Spent in weapons and armor
(short)MONEY_SPENT_VEH_MAINTENANCE // Add MP0_ or MP1_ // Money Spent in Vehicles and Maintenance
(short)MONEY_SPENT_STYLE_ENT // Add MP0_ or MP1_ // Money Spent in Style and Entertainment 
(short)MONEY_SPENT_PROPERTY_UTIL // Add MP0_ or MP1_ // Money Spent in Property and Utilities 
(short)MONEY_SPENT_JOB_ACTIVITY // Add MP0_ or MP1_ // Money Spent in Job and Activity Entry Fees
(short)MONEY_SPENT_BETTING // Add MP0_ or MP1_ // Money Spent in Betting
(short)MONEY_SPENT_CONTACT_SERVICE // Add MP0_ or MP1_ // Money Spent in Contact Services
(short)MONEY_SPENT_DROPPED_STOLEN // Add MP0_ or MP1_ // Money Spent in Dropped or Stolen
(short)MONEY_SPENT_SHARED // Add MP0_ or MP1_ // Money Spent in Shared cash
(short)MONEY_SPENT_JOBSHARED // Add MP0_ or MP1_ // Money Spent in Job Shared cash
(short)MONEY_SPENT_HEALTHCARE // Add MP0_ or MP1_ // Money Spent in Healthcare
(short)MONEY_SPENT_EXEC_PA // Add MP0_ or MP1_ // Money Spent on PA services
(short)MONEY_SPENT_BUY_CONTRABAND // Add MP0_ or MP1_ // Money Spent on contraband
<!-- EARN MONEY -->   
(short)MONEY_EARN_JOBS // Add MP0_ or MP1_ // Money Earn in Jobs
(short)MONEY_EARN_SELLING_VEH // Add MP0_ or MP1_ // Money Earn in Selling Vehicles
(short)MONEY_EARN_BETTING // Add MP0_ or MP1_ // Money Earn in Betting 
(short)MONEY_EARN_GOOD_SPORT // Add MP0_ or MP1_ // Money Earn in Good Sport Reward
(short)MONEY_EARN_PICKED_UP // Add MP0_ or MP1_ // Money Earn in Picked Up
(short)MONEY_EARN_SHARED // Add MP0_ or MP1_ // Money Earn in Shared Cash
(short)MONEY_EARN_JOBSHARED // Add MP0_ or MP1_ // Money Earn in Shared Cash
(short)MONEY_EARN_ROCKSTAR_AWARD // Add MP0_ or MP1_ // Money Earn in Rockstar Award
(short)MONEY_EARN_SELL_CONTRABAND // Add MP0_ or MP1_ // Money Earnt from selling contraband
(short)MONEY_EARN_VEHICLE_EXPORT // Add MP0_ or MP1_ // Money Earn in Selling Vehicle export
(short)MONEY_SPENT_VEHICLE_EXPORT // Add MP0_ or MP1_ // Money Earn in Selling Vehicle export
(short)MONEY_EARN_PROPERTY_TRADE // Add MP0_ or MP1_ // Money Earn in Selling Vehicle export
(short)MONEY_EARN_FREIGHT_SMUGGLER // Add MP0_ or MP1_ // Money Earn in Selling Vehicle export
(short)MONEY_EARN_SELL_NC_GOODS // Add MP0_ or MP1_ // Money Earn in Selling Vehicle export
(short)MONEY_EARN_SELL_NC_BONUS // Add MP0_ or MP1_ // Money Earn in Selling Vehicle export
(short)MONEY_EARN_CLUB_DANCING // Add MP0_ or MP1_ // Money Earn in Selling Vehicle export

<!--VEHICLES -->
(int)NUMBER_NEAR_MISS // Add MP0_ or MP1_ // Number of vehicles near misses.
(int)NEAR_MISS_PRECISE // Add MP0_ or MP1_ // Number of vehicles near misses. Precise.
(int)NUMBER_NEAR_MISS_NOCRASH // Add MP0_ or MP1_ // Maximum number of vehicles near misses without crashing.
(int)COPCARS_ENTERED_AS_CROOK // Add MP0_ or MP1_ // Number of times entered a cop car as a crook.
(int)BAILED_FROM_VEHICLE // Add MP0_ or MP1_ // Number of times jumped out of a moving vehicle.
(int)THROWNTHROUGH_WINDSCREEN // Add MP0_ or MP1_ // Number of times thrown through a windscreen
(float)TOTAL_DAMAGE_CARS // Add MP0_ or MP1_ // Total damage done in Cars
(float)TOTAL_DAMAGE_BIKES // Add MP0_ or MP1_ // Total damage done in Bikes
(float)TOTAL_DAMAGE_QUADBIKES // Add MP0_ or MP1_ // Total damage done in Quadbikes
(int)NUMBER_CRASHES_CARS // Add MP0_ or MP1_ // Number of crashes done in Cars
(int)NUMBER_CRASHES_BIKES // Add MP0_ or MP1_ // Number of crashes done in Bikes
(int)NUMBER_CRASHES_QUADBIKES // Add MP0_ or MP1_ // Number of crashes done in Quadbikes
(int)NUMBER_STOLEN_COP_VEHICLE // Add MP0_ or MP1_ // Number of cars stolen
(int)NUMBER_STOLEN_CARS // Add MP0_ or MP1_ // Number of cars stolen
(int)NUMBER_STOLEN_BIKES // Add MP0_ or MP1_ // Number of bikes stolen
(int)NUMBER_STOLEN_BOATS // Add MP0_ or MP1_ // Number of boats stolen
(int)NUMBER_STOLEN_HELIS // Add MP0_ or MP1_ // Number of helis stolen
(int)NUMBER_STOLEN_PLANES // Add MP0_ or MP1_ // Number of planes stolen
(int)NUMBER_STOLEN_QUADBIKES // Add MP0_ or MP1_ // Number of quad bikes stolen
(int)NUMBER_STOLEN_BICYCLES // Add MP0_ or MP1_ // Number of bicycles stolen
(int)TIRES_POPPED_BY_GUNSHOT // Add MP0_ or MP1_ // Number of tires popped by gunshot
(int)VEHICLES_DESTROYED_ON_SPREE // Add MP0_ or MP1_ // Number of vehicles destroyed on spree
(int)COP_VEHI_DESTROYED_ON_SPREE // Add MP0_ or MP1_ // Number of COP vehicles destroyed on spree
(int)TANKS_DESTROYED_ON_SPREE // Add MP0_ or MP1_ // Number of TANK vehicles destroyed on spree
(int)CARS_EXPLODED // Add MP0_ or MP1_ // Number of cars exploded
(int)CARS_COPS_EXPLODED // Add MP0_ or MP1_ // Number of cop cars exploded
(int)BIKES_EXPLODED // Add MP0_ or MP1_ // Number of bikes exploded
(int)BOATS_EXPLODED // Add MP0_ or MP1_ // Number of boats exploded
(int)HELIS_EXPLODED // Add MP0_ or MP1_ // Number of helis exploded
(int)PLANES_EXPLODED // Add MP0_ or MP1_ // Number of planes exploded
(int)QUADBIKE_EXPLODED // Add MP0_ or MP1_ // Number of quadbike exploded
(int)BICYCLE_EXPLODED // Add MP0_ or MP1_ // Number of bicycle exploded
(int)SUBMARINE_EXPLODED // Add MP0_ or MP1_ // Number of submarine exploded
(int)TRAIN_EXPLODED // Add MP0_ or MP1_ // Number of train exploded
(float)FASTEST_SPEED // Add MP0_ or MP1_ // Fastest speed recorded in a vehicle in meters/h
(u32)TOP_SPEED_CAR // Add MP0_ or MP1_ // Model Index of the fastest speed car
(float)LONGEST_2WHEEL_DIST // Add MP0_ or MP1_ // Longest 2 wheel distance in a vehicle
(u32)LONGEST_2WHEEL_TIME // Add MP0_ or MP1_ // Longest 2 wheel time in a vehicle
(float)LONGEST_STOPPIE_DIST // Add MP0_ or MP1_ // Longest stoppie distance in a bike
(u32)LONGEST_STOPPIE_TIME // Add MP0_ or MP1_ // Longest stoppie time in a bike
(float)LONGEST_WHEELIE_DIST // Add MP0_ or MP1_ // Longest wheelie time in a bike
(u32)LONGEST_WHEELIE_TIME // Add MP0_ or MP1_ // Longest wheelie time in a bike
(u64)TOTAL_WHEELIE_TIME // Add MP0_ or MP1_ // Total wheelie time in a bike
(float)LONGEST_SURVIVED_FREEFALL // Add MP0_ or MP1_ // Longest Survived free fall in meters.
(int)HIGHEST_SKITTLES // Add MP0_ or MP1_ // Number of Peds Run down
(int)MOST_FLIPS_IN_ONE_JUMP // Add MP0_ or MP1_ // Number of flips in one vehicle jump
(int)MOST_SPINS_IN_ONE_JUMP // Add MP0_ or MP1_ // Number of spins in one vehicle jump

   (int)USJS_FOUND // Add MP0_ or MP1_ // Number of stunt jumps tried
(u64)USJS_FOUND_MASK // Add MP0_ or MP1_ // Mask of all stunt jumps tried
(int)USJS_COMPLETED // Add MP0_ or MP1_ // Number of stunt jumps completed
(int)USJS_TOTAL_COMPLETED // Add MP0_ or MP1_ // Total number of stunt jumps completed (count also the same jump many times)
(u64)USJS_COMPLETED_MASK // Add MP0_ or MP1_ // Mask of all stunt jumps completed

  (float)FARTHEST_JUMP_DIST // Add MP0_ or MP1_ // Longest jump distance
(float)HIGHEST_JUMP_REACHED // Add MP0_ or MP1_ // Highest jump distance
(int)AIR_LAUNCHES_OVER_5S // Add MP0_ or MP1_ // Number of air launches over 5 seconds
(int)AIR_LAUNCHES_OVER_5M // Add MP0_ or MP1_ // Number of air launches over 5 meters
(int)AIR_LAUNCHES_OVER_40M // Add MP0_ or MP1_ // Number of air launches over 40 meters
(int)NUMBER_OF_AIR_LAUNCHES // Add MP0_ or MP1_ // Number of air launches
(int)NUMBER_TURBO_STARTS_IN_RACE // Add MP0_ or MP1_ // Number of turbo starts at start of race
(int)NUMBER_SLIPSTREAMS_IN_RACE // Add MP0_ or MP1_ // Number of turbo starts at start of race


<!--WEAPONS -->
(int)EXPLOSIVE_DAMAGE_HITS // Add MP0_ or MP1_ // Number of explosive damage weapons hits.
(int)EXPLOSIVE_DAMAGE_HITS_ANY // Add MP0_ or MP1_ // Number of explosive damage weapons hits on any object.
(int)EXPLOSIVE_DAMAGE_SHOTS // Add MP0_ or MP1_ // Number of explosive damage weapons shots.
(int)KILLS_ARMED // Add MP0_ or MP1_ // Number of Armed kills
(float)KILLS_IN_FREE_AIM // Add MP0_ or MP1_ // number of kills in free aim
(int)KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed
(int)DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 died
(int)DEATHS_PLAYER // Add MP0_ or MP1_ // Number of deaths caused by other players
(int)SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired
(float)WEAPON_ACCURACY // Add MP0_ or MP1_ // Weapon accuracy
(int)HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit
(int)HITS_PEDS_VEHICLES // Add MP0_ or MP1_ // Number of times mp char 0 hit
(int)HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot
(int)PLAYER_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot done by other players
(u32)DB_SHOTTIME // Add MP0_ or MP1_ // Total time shoting a drive by weapon
(int)DB_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed
(int)DB_PLAYER_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed
(int)DB_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired
(int)DB_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit
(int)DB_HITS_PEDS_VEHICLES // Add MP0_ or MP1_ // Number of times mp char 0 hit
(int)DB_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot
(u32)PASS_DB_SHOTTIME // Add MP0_ or MP1_ // Total time shoting a drive by weapon
(int)PASS_DB_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed
(int)PASS_DB_PLAYER_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed
(int)PASS_DB_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired
(int)PASS_DB_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit
(int)PASS_DB_HITS_PEDS_VEHICLES // Add MP0_ or MP1_ // Number of times mp char 0 hit
(int)PASS_DB_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot
(int)EXPLOSIVES_USED // Add MP0_ or MP1_ // Number of Explosives used
<!--Melee -->
(int)UNARMED_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)UNARMED_ENEMY_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)UNARMED_DEATHS // Add MP0_ or MP1_ // Number of times Michael killed by weapon
(int)UNARMED_HITS // Add MP0_ or MP1_ // Number of times Michael hit with weapon
(int)KNIFE_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)KNIFE_ENEMY_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)KNIFE_DEATHS // Add MP0_ or MP1_ // Number of times Michael killed by weapon
(int)KNIFE_HITS // Add MP0_ or MP1_ // Number of times Michael hit with weapon
(u32)KNIFE_HELDTIME // Add MP0_ or MP1_ // Time Michael held weapon (MS)
(int)KNIFE_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)KNIFE_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)KNIFE_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)KNIFE_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)KNIFE_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory
   

(int)NIGHTSTICK_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)NIGHTSTICK_ENEMY_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)NIGHTSTICK_DEATHS // Add MP0_ or MP1_ // Number of times Michael killed by weapon
(int)NIGHTSTICK_HITS // Add MP0_ or MP1_ // Number of times Michael hit with weapon
(u32)NIGHTSTICK_HELDTIME // Add MP0_ or MP1_ // Time Michael held weapon (MS)
(int)NIGHTSTICK_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)NIGHTSTICK_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)NIGHTSTICK_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)NIGHTSTICK_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory
  

(int)CROWBAR_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)CROWBAR_ENEMY_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)CROWBAR_DEATHS // Add MP0_ or MP1_ // Number of times Michael killed by weapon
(int)CROWBAR_HITS // Add MP0_ or MP1_ // Number of times Michael hit with weapon
(u32)CROWBAR_HELDTIME // Add MP0_ or MP1_ // Time Michael held weapon (MS)
(int)CROWBAR_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CROWBAR_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)CROWBAR_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)CROWBAR_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory


(int)SHOVEL_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)SHOVEL_ENEMY_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)SHOVEL_DEATHS // Add MP0_ or MP1_ // Number of times Michael killed by weapon
(int)SHOVEL_HITS // Add MP0_ or MP1_ // Number of times Michael hit with weapon
(u32)SHOVEL_HELDTIME // Add MP0_ or MP1_ // Time Michael held weapon (MS)
(int)SHOVEL_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SHOVEL_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)SHOVEL_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)SHOVEL_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)WRENCH_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)WRENCH_ENEMY_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)WRENCH_DEATHS // Add MP0_ or MP1_ // Number of times Michael killed by weapon
(int)WRENCH_HITS // Add MP0_ or MP1_ // Number of times Michael hit with weapon
(u32)WRENCH_HELDTIME // Add MP0_ or MP1_ // Time Michael held weapon (MS)
(int)WRENCH_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)WRENCH_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)WRENCH_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)WRENCH_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)HAMMER_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)HAMMER_ENEMY_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)HAMMER_DEATHS // Add MP0_ or MP1_ // Number of times Michael killed by weapon
(int)HAMMER_HITS // Add MP0_ or MP1_ // Number of times Michael hit with weapon
(u32)HAMMER_HELDTIME // Add MP0_ or MP1_ // Time Michael held weapon (MS)
(int)HAMMER_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HAMMER_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)HAMMER_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)HAMMER_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory




(int)BAT_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)BAT_ENEMY_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)BAT_DEATHS // Add MP0_ or MP1_ // Number of times Michael killed by weapon
(int)BAT_HITS // Add MP0_ or MP1_ // Number of times Michael hit with weapon
(u32)BAT_HELDTIME // Add MP0_ or MP1_ // Time Michael held weapon (MS)
(int)BAT_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)BAT_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)BAT_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)BAT_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory


(int)GCLUB_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)GCLUB_ENEMY_KILLS // Add MP0_ or MP1_ // Number of times Michael killed with weapon
(int)GCLUB_DEATHS // Add MP0_ or MP1_ // Number of times Michael killed by weapon
(int)GCLUB_HITS // Add MP0_ or MP1_ // Number of times Michael hit with weapon
(u32)GCLUB_HELDTIME // Add MP0_ or MP1_ // Time Michael held weapon (MS)
(int)GCLUB_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)GCLUB_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)GCLUB_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)GCLUB_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory
 

 <!-- Guns -->
(int)PISTOL_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)PISTOL_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)PISTOL_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)PISTOL_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)PISTOL_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)PISTOL_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)PISTOL_DB_HELDTIME // Add MP0_ or MP1_ // Time char0 held driveby weapon (MS)
(int)PISTOL_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOL_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOL_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)PISTOL_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)PISTOL_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory


(int)CMBTPISTOL_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)CMBTPISTOL_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)CMBTPISTOL_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)CMBTPISTOL_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)CMBTPISTOL_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)CMBTPISTOL_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)CMBTPISTOL_DB_HELDTIME // Add MP0_ or MP1_ // Time char0 held driveby weapon (MS)
(int)CMBTPISTOL_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTPISTOL_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTPISTOL_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)CMBTPISTOL_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)CMBTPISTOL_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory



(int)PISTOL50_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)PISTOL50_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)PISTOL50_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)PISTOL50_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)PISTOL50_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)PISTOL50_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)PISTOL50_DB_HELDTIME // Add MP0_ or MP1_ // Time char0 held driveby weapon (MS)
(int)PISTOL50_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOL50_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOL50_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)PISTOL50_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)PISTOL50_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory
  


(int)APPISTOL_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)APPISTOL_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)APPISTOL_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)APPISTOL_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)APPISTOL_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)APPISTOL_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)APPISTOL_DB_HELDTIME // Add MP0_ or MP1_ // Time char0 held driveby weapon (MS)
(int)APPISTOL_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)APPISTOL_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)APPISTOL_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)APPISTOL_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)APPISTOL_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory


(int)MICROSMG_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)MICROSMG_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)MICROSMG_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)MICROSMG_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)MICROSMG_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)MICROSMG_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)MICROSMG_DB_HELDTIME // Add MP0_ or MP1_ // Time char0 held driveby weapon (MS)
(int)MICROSMG_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)MICROSMG_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)MICROSMG_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)MICROSMG_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)MICROSMG_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory



(int)SMG_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)SMG_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)SMG_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)SMG_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)SMG_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)SMG_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)SMG_DB_HELDTIME // Add MP0_ or MP1_ // Time char0 held driveby weapon (MS)
(int)SMG_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMG_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMG_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)SMG_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)SMG_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory




(int)ASLTSMG_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)ASLTSMG_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)ASLTSMG_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)ASLTSMG_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)ASLTSMG_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)ASLTSMG_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)ASLTSMG_DB_HELDTIME // Add MP0_ or MP1_ // Time char0 held driveby weapon (MS)
(int)ASLTSMG_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTSMG_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTSMG_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)ASLTSMG_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)ASLTSMG_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory



(int)ASLTRIFLE_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)ASLTRIFLE_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)ASLTRIFLE_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)ASLTRIFLE_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)ASLTRIFLE_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)ASLTRIFLE_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)ASLTRIFLE_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTRIFLE_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTRIFLE_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)ASLTRIFLE_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)ASLTRIFLE_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory




(int)CRBNRIFLE_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)CRBNRIFLE_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)CRBNRIFLE_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)CRBNRIFLE_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)CRBNRIFLE_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)CRBNRIFLE_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)CRBNRIFLE_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CRBNRIFLE_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CRBNRIFLE_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)CRBNRIFLE_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)CRBNRIFLE_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory



(int)ADVRIFLE_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)ADVRIFLE_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)ADVRIFLE_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)ADVRIFLE_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)ADVRIFLE_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)ADVRIFLE_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)ADVRIFLE_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ADVRIFLE_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ADVRIFLE_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)ADVRIFLE_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)ADVRIFLE_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)MG_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)MG_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)MG_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)MG_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)MG_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)MG_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)MG_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)MG_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)MG_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)MG_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)MG_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory



(int)CMBTMG_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)CMBTMG_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)CMBTMG_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)CMBTMG_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)CMBTMG_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)CMBTMG_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)CMBTMG_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTMG_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTMG_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)CMBTMG_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)CMBTMG_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)ASLTMG_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)ASLTMG_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)ASLTMG_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)ASLTMG_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)ASLTMG_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)ASLTMG_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)ASLTMG_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTMG_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTMG_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)ASLTMG_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)ASLTMG_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory
 

(int)PUMP_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)PUMP_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)PUMP_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)PUMP_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)PUMP_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)PUMP_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)PUMP_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PUMP_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PUMP_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)PUMP_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)PUMP_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)SAWNOFF_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)SAWNOFF_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)SAWNOFF_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)SAWNOFF_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)SAWNOFF_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)SAWNOFF_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)SAWNOFF_DB_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)SAWNOFF_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SAWNOFF_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SAWNOFF_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)SAWNOFF_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)SAWNOFF_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)BULLPUP_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)BULLPUP_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)BULLPUP_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)BULLPUP_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)BULLPUP_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)BULLPUP_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)BULLPUP_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)BULLPUP_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)BULLPUP_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)BULLPUP_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)BULLPUP_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)ASLTSHTGN_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)ASLTSHTGN_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)ASLTSHTGN_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)ASLTSHTGN_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)ASLTSHTGN_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)ASLTSHTGN_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)ASLTSHTGN_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTSHTGN_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTSHTGN_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)ASLTSHTGN_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)ASLTSHTGN_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory


(int)STUNGUN_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)STUNGUN_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)STUNGUN_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)STUNGUN_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)STUNGUN_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)STUNGUN_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)STUNGUN_DB_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)STUNGUN_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)STUNGUN_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)STUNGUN_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)STUNGUN_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)STUNGUN_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)SNIPERRFL_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)SNIPERRFL_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)SNIPERRFL_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)SNIPERRFL_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)SNIPERRFL_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)SNIPERRFL_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)SNIPERRFL_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SNIPERRFL_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SNIPERRFL_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)SNIPERRFL_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)SNIPERRFL_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)HVYSNIPER_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)HVYSNIPER_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)HVYSNIPER_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)HVYSNIPER_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)HVYSNIPER_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)HVYSNIPER_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)HVYSNIPER_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HVYSNIPER_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HVYSNIPER_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)HVYSNIPER_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)HVYSNIPER_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)ASLTSNIP_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTSNIP_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)ASLTSNIP_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)ASLTSNIP_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory


(int)GRNLAUNCH_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)GRNLAUNCH_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)GRNLAUNCH_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(u32)GRNLAUNCH_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)GRNLAUNCH_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)GRNLAUNCH_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)GRNLAUNCH_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)GRNLAUNCH_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)GRNLAUNCH_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)RPG_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)RPG_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)RPG_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(u32)RPG_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)RPG_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)RPG_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)RPG_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)RPG_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)RPG_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)MINIGUNS_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)MINIGUNS_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)MINIGUNS_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)MINIGUNS_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)MINIGUNS_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)MINIGUNS_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)MINIGUNS_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)MINIGUNS_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)MINIGUNS_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)MINIGUNS_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)MINIGUNS_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory


(int)GRENADE_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)GRENADE_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)GRENADE_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(u32)GRENADE_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)GRENADE_DB_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)GRENADE_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)GRENADE_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)GRENADE_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)GRENADE_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)GRENADE_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory



(int)SMKGRENADE_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)SMKGRENADE_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)SMKGRENADE_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)SMKGRENADE_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(u32)SMKGRENADE_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)SMKGRENADE_DB_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)SMKGRENADE_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMKGRENADE_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMKGRENADE_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)SMKGRENADE_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)SMKGRENADE_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory



(int)STKYBMB_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)STKYBMB_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)STKYBMB_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(u32)STKYBMB_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)STKYBMB_DB_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)STKYBMB_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)STKYBMB_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)STKYBMB_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)STKYBMB_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)STKYBMB_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory


(int)MOLOTOV_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)MOLOTOV_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)MOLOTOV_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)MOLOTOV_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(u32)MOLOTOV_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)MOLOTOV_DB_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(int)MOLOTOV_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)MOLOTOV_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)MOLOTOV_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)MOLOTOV_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)MOLOTOV_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory


(u32)EXTINGUISHER_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)

(int)VEHICLE_ROCKET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)VEHICLE_ROCKET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)VEHICLE_ROCKET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)VEHICLE_ROCKET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(u32)VEHICLE_ROCKET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)VEHICLE_ROCKET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)

(int)RHINO_ROCKET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)RHINO_ROCKET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)RHINO_ROCKET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)RHINO_ROCKET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(u32)RHINO_ROCKET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)RHINO_ROCKET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)PASS_ROCKET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)PASS_ROCKET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)PASS_ROCKET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)PASS_ROCKET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(u32)PASS_ROCKET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)PASS_ROCKET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)AIRSTRIKE_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)AIRSTRIKE_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)AIRSTRIKE_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)AIRSTRIKE_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(u32)AIRSTRIKE_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)AIRSTRIKE_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)VEH_ROCKET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)VEH_ROCKET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)VEH_ROCKET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)VEH_ROCKET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(u32)VEH_ROCKET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)VEH_ROCKET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)BUZZARD_BULLET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)BUZZARD_BULLET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)BUZZARD_BULLET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)BUZZARD_BULLET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(int)BUZZARD_BULLET_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 1 killed by headshot with weapon
(u32)BUZZARD_BULLET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)BUZZARD_BULLET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)BUZZARD_ROCKET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)BUZZARD_ROCKET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)BUZZARD_ROCKET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)BUZZARD_ROCKET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(u32)BUZZARD_ROCKET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)BUZZARD_ROCKET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)ANNIHL_BULLET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)ANNIHL_BULLET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)ANNIHL_BULLET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)ANNIHL_BULLET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(int)ANNIHL_BULLET_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 1 killed by headshot with weapon
(u32)ANNIHL_BULLET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)ANNIHL_BULLET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)HUNTER_BULLET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)HUNTER_BULLET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)HUNTER_BULLET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)HUNTER_BULLET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(int)HUNTER_BULLET_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 1 killed by headshot with weapon
(u32)HUNTER_BULLET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)HUNTER_BULLET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)HUNTER_ROCKET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)HUNTER_ROCKET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)HUNTER_ROCKET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)HUNTER_ROCKET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(u32)HUNTER_ROCKET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)HUNTER_ROCKET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)LAZER_BULLET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)LAZER_BULLET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)LAZER_BULLET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)LAZER_BULLET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(int)LAZER_BULLET_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 1 killed by headshot with weapon
(u32)LAZER_BULLET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)LAZER_BULLET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)LAZER_ROCKET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)LAZER_ROCKET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)LAZER_ROCKET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)LAZER_ROCKET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(u32)LAZER_ROCKET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)LAZER_ROCKET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)SPPLAYER_LASER_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)SPPLAYER_LASER_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)SPPLAYER_LASER_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)SPPLAYER_LASER_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(u32)SPPLAYER_LASER_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)SPPLAYER_LASER_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)
(int)WATER_CANNON_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)WATER_CANNON_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)PARACHUTE_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PARACHUTE_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)PARACHUTE_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(int)PARACHUTE_CURRENT_TINT // Add MP0_ or MP1_ // Is weapon in inventory

(int)PETROLCAN_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PETROLCAN_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(bool)PETROLCAN_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)PETROLCAN_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)HELMET_CURRENT_COLOR // Add MP0_ or MP1_ // Is weapon in inventory

<!-- SCAR DATA -->
<!--MP CHARS -->
(int)DAMAGE_SCAR_NUMBER // Add MP0_ or MP1_ // Damage Scar Data - Number of Scars
<!-- Scar index 0 -->
(int)DAMAGE_SCAR_ZONE_0 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_0 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_0 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_0 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_0 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_0 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_0 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 1  -->
(int)DAMAGE_SCAR_ZONE_1 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_1 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_1 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_1 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_1 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_1 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_1 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 2 -->
(int)DAMAGE_SCAR_ZONE_2 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_2 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_2 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_2 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_2 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_2 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_2 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 3  -->
(int)DAMAGE_SCAR_ZONE_3 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_3 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_3 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_3 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_3 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_3 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_3 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 4  -->
(int)DAMAGE_SCAR_ZONE_4 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_4 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_4 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_4 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_4 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_4 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_4 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 5  -->
(int)DAMAGE_SCAR_ZONE_5 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_5 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_5 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_5 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_5 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_5 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_5 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 6  -->
(int)DAMAGE_SCAR_ZONE_6 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_6 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_6 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_6 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_6 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_6 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_6 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 7  -->
(int)DAMAGE_SCAR_ZONE_7 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_7 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_7 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_7 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_7 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_7 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_7 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 8  -->
(int)DAMAGE_SCAR_ZONE_8 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_8 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_8 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_8 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_8 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_8 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_8 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 9  -->
(int)DAMAGE_SCAR_ZONE_9 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_9 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_9 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_9 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_9 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_9 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_9 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 10  -->
(int)DAMAGE_SCAR_ZONE_10 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_10 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_10 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_10 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_10 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_10 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_10 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 11  -->
(int)DAMAGE_SCAR_ZONE_11 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_11 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_11 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_11 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_11 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_11 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_11 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 12  -->
(int)DAMAGE_SCAR_ZONE_12 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_12 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_12 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_12 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_12 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_12 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_12 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 13  -->
(int)DAMAGE_SCAR_ZONE_13 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_13 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_13 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_13 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_13 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_13 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_13 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 14  -->
(int)DAMAGE_SCAR_ZONE_14 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_14 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_14 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_14 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_14 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_14 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_14 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 15  -->
(int)DAMAGE_SCAR_ZONE_15 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_15 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_15 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_15 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_15 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_15 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_15 // Add MP0_ or MP1_ // Damage Scar Data - Age

<!-- STATS TRACKED IN SCRIPT -->
<!--MP CHARS -->

(u64)CHAR_PREFERRED_CREW // Add MP0_ or MP1_ // preferred crew
(bool)CHAR_ISACTIVE // Add MP0_ or MP1_ // MP Char 0 - Is this slot being used?
(short)CHAR_XP_FM // Add MP0_ or MP1_ // MP Char 0 - XP Value
(short)CHAR_RANK_FM // Add MP0_ or MP1_ // MP Char 0 - XP Value

(short)NEXT_RANKXP_FM // Add MP0_ or MP1_ // MP Char 0 - XP Value
(short)PREV_RANKXP_FM // Add MP0_ or MP1_ // MP Char 0 - XP Value

(string)CHAR_NAME // Add MP0_ or MP1_ // MP Char 0 - XP Value
(int)CHAR_WEAPON1 // Add MP0_ or MP1_ // MP Char 0 - Weapon 1
(int)CHAR_WEAPON2 // Add MP0_ or MP1_ // MP Char 0 - Weapon 2
(int)CHAR_EQUIPPED_ADDONS // Add MP0_ or MP1_ // MP Char 0 - Equipped addons
(int)CHAR_WEAP_UNLOCKED // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset
(int)CHAR_WEAP_UNLOCKED2 // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset 2
(int)CHAR_WEAP_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset
(int)CHAR_WEAP_VIEWED2 // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset 2
(int)CHAR_WEAP_ADDON_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 1
(int)CHAR_WEAP_ADDON_2_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 2
(int)CHAR_WEAP_ADDON_3_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 3
(int)CHAR_WEAP_ADDON_4_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 4
(int)CHAR_WEAP_ADDON_1_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 1
(int)CHAR_WEAP_ADDON_2_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 2
(int)CHAR_WEAP_ADDON_3_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 3
(int)CHAR_WEAP_ADDON_4_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 4
(int)CHAR_WEAP_EQUIPPED // Add MP0_ or MP1_ // MP Char 0 - Equipped weapons bitset
(int)CHAR_WEAP_EQUIPPED2 // Add MP0_ or MP1_ // MP Char 0 - Equipped weapons bitset 2
(int)CHAR_WEAP_ADDON_1_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 1
(int)CHAR_WEAP_ADDON_2_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 2
(int)CHAR_WEAP_ADDON_3_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 3
(int)CHAR_WEAP_ADDON_4_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 4
(int)CHAR_WEAP_FREE // Add MP0_ or MP1_ // MP Char 0 - Cost Free weapons bitset
(int)CHAR_WEAP_FREE2 // Add MP0_ or MP1_ // MP Char 0 - Cost Free weapons bitset 2
(int)CHAR_ABILITY_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 1
(int)CHAR_ABILITY_2_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2
(int)CHAR_ABILITY_3_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2

(int)CHAR_FM_PACKAGE_1_COLLECT // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 1
(int)CHAR_FM_PACKAGE_2_COLLECT // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2
(int)CHAR_FM_PACKAGE_3_COLLECT // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2
(int)CHAR_FM_PACKAGE_4_COLLECT // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 1
(int)CHAR_FM_PACKAGE_5_COLLECT // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2
(int)CHAR_FM_PACKAGE_6_COLLECT // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2
(int)CHAR_FM_PACKAGE_7_COLLECT // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 1
(int)CHAR_FM_PACKAGE_8_COLLECT // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2
(int)CHAR_FM_PACKAGE_9_COLLECT // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2
(int)CHAR_NO_FM_PACKAGES_COL // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2
(int)CHAR_FM_WEAP_UNLOCKED // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset
(int)CHAR_FM_WEAP_UNLOCKED2 // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset 2
(int)CHAR_FM_WEAP_ADDON_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 1
(int)CHAR_FM_WEAP_ADDON_2_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 2
(int)CHAR_FM_WEAP_ADDON_3_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 3
(int)CHAR_FM_WEAP_ADDON_4_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 4
(int)CHAR_FM_WEAP_EQUIPPED // Add MP0_ or MP1_ // MP Char 0 - Equipped weapons bitset
(int)CHAR_FM_WEAP_EQUIPPED2 // Add MP0_ or MP1_ // MP Char 0 - Equipped weapons bitset 2
(int)CHAR_FM_WEAP_ADDON_1_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 1
(int)CHAR_FM_WEAP_ADDON_2_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 2
(int)CHAR_FM_WEAP_ADDON_3_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 3
(int)CHAR_FM_WEAP_ADDON_4_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 4
   (int)CHAR_FM_WEAP_FREE // Add MP0_ or MP1_ // MP Char 0 - Cost Free weapons bitset
(int)CHAR_FM_WEAP_FREE2 // Add MP0_ or MP1_ // MP Char 0 - Cost Free weapons bitset 2
(int)CHAR_FM_ABILITY_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 1
(int)CHAR_FM_ABILITY_2_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2
(int)CHAR_FM_ABILITY_3_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Ability Unlocked bitset 2

(int)CHAR_KIT_1_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
(int)CHAR_KIT_2_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 2
(int)CHAR_KIT_3_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
(int)CHAR_KIT_4_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 2
(int)CHAR_KIT_5_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
(int)CHAR_KIT_6_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 2
(int)CHAR_KIT_7_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 2
(int)CHAR_KIT_8_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
(int)CHAR_KIT_9_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 2
(int)CHAR_KIT_1_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 1
(int)CHAR_KIT_2_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 2
(int)CHAR_KIT_3_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 3
(int)CHAR_KIT_4_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 4
(int)CHAR_KIT_5_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 5
(int)CHAR_KIT_6_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 6
(int)CHAR_KIT_7_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 7
(int)CHAR_KIT_8_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 8
(int)CHAR_KIT_9_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 9
(int)CHAR_KIT_1_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
 (int)CHAR_KIT_2_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 2
(int)CHAR_KIT_3_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
 (int)CHAR_KIT_4_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 2
(int)CHAR_KIT_5_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
 (int)CHAR_KIT_6_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 2
(int)CHAR_KIT_7_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 2
(int)CHAR_KIT_8_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
 (int)CHAR_KIT_9_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 2
(int)CHAR_HEIST_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3

(int)CHAR_CREWUNLOCK_1_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 9
(int)CHAR_CREWUNLOCK_2_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 9

(int)CHAR_CREWUNLOCK_3_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 9

(int)CHAR_CREWUNLOCK_4_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 9

(int)CHAR_CREWUNLOCK_5_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 9




(int)CHAR_FM_CARMOD_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player CarMod Unlocked bitset 1
(int)CHAR_FM_CARMOD_2_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player CarMod Unlocked bitset 2
(int)CHAR_FM_CARMOD_3_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player CarMod Unlocked bitset 2
(int)CHAR_FM_CARMOD_4_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player CarMod Unlocked bitset 2
(int)CHAR_FM_CARMOD_5_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player CarMod Unlocked bitset 2
(int)CHAR_FM_CARMOD_6_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player CarMod Unlocked bitset 2
(int)CHAR_FM_CARMOD_7_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player CarMod Unlocked bitset 2


(int)CHAR_FM_HEALTH_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Health Unlocked bitset 1
(int)CHAR_FM_HEALTH_2_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Health Unlocked bitset 2
(int)CHAR_FM_VEHICLE_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Vehicle Unlocked bitset 1
(int)CHAR_FM_VEHICLE_2_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Vehicle Unlocked bitset 2
(int)CHAR_FM_CLOTHES_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 1
(int)CHAR_FM_CLOTHES_2_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 2
(int)CHAR_FM_CLOTHES_3_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3
(int)CHAR_FM_CLOTHES_4_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3
(int)CHAR_FM_CLOTHES_5_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3
(int)CHAR_FM_CLOTHES_6_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3
(int)CHAR_FM_CLOTHES_7_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3
(int)CHAR_FM_CLOTHES_8_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3
(int)CHAR_FM_CLOTHES_9_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3
(int)CHAR_FM_CLOTHES_10_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3
(int)CHAR_FM_CLOTHES_11_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3

(int)CHAR_FM_HAIRCUT_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Unlocked bitset 3

(int)CHAR_FM_STORED_HAIRDO // Add MP0_ or MP1_ // MP Char 0 - Stored player hairdo
(int)CHAR_FM_FORCED_HAIR_ITEM // Add MP0_ or MP1_ // MP Char 0 - Item that force removed players hair
(int)CHAR_FM_FORCED_HAIR_TYPE // Add MP0_ or MP1_ // MP Char 0 - Type that force removed players hair

(int)CHAR_FM_PLAT_AWARD_COUNT // Add MP0_ or MP1_ // MP Char 0 - Number Of Platinum Awards a Player has

(int)CHAR_ACH45_TRACKER // Add MP0_ or MP1_ // MP Char 0 - Bitfield for tracking ACH45 - Enjoy your stay

<!-- AWARDS -->
(int)PLATINUM_INTCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)PLATINUM_INTCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)PLATINUM_INTCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)PLATINUM_INTCHAR_3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)PLATINUM_FLOATCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)PLATINUM_FLOATCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)PLATINUM_FLOATCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)PLATINUM_BOOLCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)PLATINUM_BOOLCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)PLATINUM_BOOLCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_INTCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_INTCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_INTCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_INTCHAR_3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_FLOATCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_FLOATCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_FLOATCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_BOOLCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_BOOLCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_BOOLCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_INTCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_INTCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_INTCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_INTCHAR_3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_FLOATCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_FLOATCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_FLOATCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_BOOLCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_BOOLCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_BOOLCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_INTCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_INTCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_INTCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_INTCHAR_3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_FLOATCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_FLOATCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_FLOATCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_BOOLCHAR_0 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_BOOLCHAR_1 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_BOOLCHAR_2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_WEAP_PURCHASED // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_PURCHASED2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_FM_PURCHASE // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_FM_PURCHASE2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_FM_PURCHASE // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_FM_PURCHASE2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_FM_PURCHASE3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_FM_PURCHASE4 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_FM_PURCHASE5 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_FM_PURCHASE6 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_FM_PURCHASE7 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_FM_PURCHASE8 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_FM_PURCHASE9 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)WEAP_FM_ADDON_PURCH // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)WEAP_FM_ADDON_PURCH2 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)WEAP_FM_ADDON_PURCH3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)WEAP_FM_ADDON_PURCH4 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(date)CHAR_DATE_CREATED // Add MP0_ or MP1_ // MP Char 0 - The Date the player created this character
 (date)CHAR_DATE_RANKUP // Add MP0_ or MP1_ // MP Char 0 - The Date the player last ranked up

(u32)CHAR_TOTAL_TIME_MISSION // Add MP0_ or MP1_ // MP Char 0 - MISSIONS  -Average time spent on missions (time on missions/number of missions completed)

(int)CHAR_CURRENT_HEALTH // Add MP0_ or MP1_ // MP Char 0 - Players current health

(int)CHAR_CURRENT_ARMOUR // Add MP0_ or MP1_ // MP Char 0 - Players current health
(int)CHAR_CURRENT_WANTED // Add MP0_ or MP1_ // MP Char 0 - Players current health
(date)CHAR_LAST_PLAY_TIME // Add MP0_ or MP1_ // MP Char 0 - Players current health

<!-- Player vehicle -->

(float)RACES_WON_PC // Add MP0_ or MP1_ // MP Char 0 - Vehicles- Percentage of Races won
(int)RACES_WON // Add MP0_ or MP1_ // MP Char 0 - Vehicles- no of Races won
(int)RACES_LOST // Add MP0_ or MP1_ // MP Char 0 - Vehicles- no of Races LOST
(int)NO_CARS_REPAIR // Add MP0_ or MP1_ // MP Char 0 - Vehicles- No. Cars Repaired
(int)AVERAGE_NO_PASSENGERS // Add MP0_ or MP1_ // MP Char 0 - Vehicles- Average number of passengers
(u64)TIME_DRIVING_PASSENGER // Add MP0_ or MP1_ // MP Char 0 - Vehicles- Time driving passengers
(int)TOTAL_ACCUM_PASSENGER // Add MP0_ or MP1_ // MP Char 0 - Vehicles- Time driving passengers
(int)VEHICLES_SPRAYED // Add MP0_ or MP1_ // MP Char 0 - Vehicles- No of vehicles resprayed

(int)NO_STOLEN_VEH_SCRIPT // Add MP0_ or MP1_ // MP Char 0 - No cars stolen in script

<!--Shop data -->
(bool)SHOPFM_DEFAULT_INFO_SET // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_TYPES_VISITED // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_HAIRDO_01_BH // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_HAIRDO_02_SC // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_HAIRDO_03_V // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_HAIRDO_04_SS // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_HAIRDO_05_MP // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_HAIRDO_06_HW // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_HAIRDO_07_PB // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_L_01_SC // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_L_02_GS // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_L_03_DT // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_L_04_CS // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_L_05_GSD // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_L_06_VC // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_L_07_PB // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_M_01_SM // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_M_02_PB // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_M_03_H // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_M_04_HW // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_M_05_GOH // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_H_01_BH // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_H_02_B // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_H_03_MW // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CLOTHES_A_01_VB // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_TATTOO_01_HW // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_TATTOO_02_SS // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_TATTOO_03_PB // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_TATTOO_04_VC // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_TATTOO_05_ELS // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_TATTOO_06_GOH // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_01_DT // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_02_SS // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_03_HW // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_04_ELS // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_05_PB // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_06_LS // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_07_MW // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_08_CS // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_09_GOH // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_10_VWH // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_GUN_11_ID1 // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CARMOD_01_AP // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CARMOD_02_ID // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CARMOD_03_HW // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CARMOD_04_DT // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CARMOD_05_ID2 // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CARMOD_06_BT1 // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CARMOD_07_CS1 // Add MP0_ or MP1_ // MP Char 0 - Shop Data
(int)SHOPFM_CARMOD_08_CS6 // Add MP0_ or MP1_ // MP Char 0 - Shop Data

<!--Clothes data -->
<!--AVAILABLE-->
(int)CLTHS_AVAILABLE_HAIR // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_HAIR_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_HAIR_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_HAIR_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_HAIR_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_HAIR_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_HAIR_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_HAIR_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available

(int)CLTHS_AVAILABLE_JBIB // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_JBIB_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_JBIB_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_JBIB_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_JBIB_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_JBIB_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_JBIB_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_JBIB_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available

(int)CLTHS_AVAILABLE_LEGS // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_LEGS_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_LEGS_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_LEGS_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_LEGS_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_LEGS_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_LEGS_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_LEGS_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
 
(int)CLTHS_AVAILABLE_FEET // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_FEET_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_FEET_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_FEET_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_FEET_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_FEET_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_FEET_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_FEET_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available

(int)CLTHS_AVAILABLE_BERD // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_BERD_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_BERD_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_BERD_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_BERD_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_BERD_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_BERD_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_BERD_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available

(int)CLTHS_AVAILABLE_PROPS // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_PROPS_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_PROPS_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_PROPS_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_PROPS_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_PROPS_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_PROPS_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_PROPS_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_PROPS_8 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_PROPS_9 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_PROPS_10 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available

(int)CLTHS_AVAILABLE_OUTFIT // Add MP0_ or MP1_ // MP Char 0 - Clothes Available

<!--ACQUIRED-->
(int)CLTHS_ACQUIRED_HAIR // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_HAIR_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_HAIR_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_HAIR_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED
(int)CLTHS_ACQUIRED_HAIR_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED
(int)CLTHS_ACQUIRED_HAIR_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED
(int)CLTHS_ACQUIRED_HAIR_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED
(int)CLTHS_ACQUIRED_HAIR_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED

(int)CLTHS_ACQUIRED_JBIB // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_JBIB_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_JBIB_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_JBIB_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_JBIB_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_JBIB_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_JBIB_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_JBIB_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
 
(int)CLTHS_ACQUIRED_LEGS // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_LEGS_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_LEGS_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_LEGS_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_LEGS_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_LEGS_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_LEGS_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_LEGS_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
 
(int)CLTHS_ACQUIRED_FEET // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_FEET_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_FEET_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_FEET_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_FEET_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_FEET_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_FEET_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_FEET_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired

(int)CLTHS_ACQUIRED_BERD // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_BERD_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED
(int)CLTHS_ACQUIRED_BERD_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED
(int)CLTHS_ACQUIRED_BERD_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED
(int)CLTHS_ACQUIRED_BERD_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED
(int)CLTHS_ACQUIRED_BERD_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED
(int)CLTHS_ACQUIRED_BERD_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED
(int)CLTHS_ACQUIRED_BERD_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED

(int)CLTHS_ACQUIRED_PROPS // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_PROPS_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_PROPS_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_PROPS_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_PROPS_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_PROPS_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_PROPS_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_PROPS_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_PROPS_8 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_PROPS_9 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_PROPS_10 // Add MP0_ or MP1_ // MP Char 0 - Clothes ACQUIRED

(int)CLTHS_ACQUIRED_OUTFIT // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired

<!--NEW-->
(int)CLTHS_USED_HAIR // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_HAIR_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_HAIR_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_HAIR_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED
(int)CLTHS_USED_HAIR_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED
(int)CLTHS_USED_HAIR_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED
(int)CLTHS_USED_HAIR_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED
(int)CLTHS_USED_HAIR_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED

(int)CLTHS_USED_JBIB // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_JBIB_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_JBIB_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_JBIB_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_JBIB_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_JBIB_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_JBIB_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_JBIB_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used

(int)CLTHS_USED_LEGS // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_LEGS_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_LEGS_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_LEGS_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_LEGS_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_LEGS_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_LEGS_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_LEGS_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used

(int)CLTHS_USED_FEET // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_FEET_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_FEET_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_FEET_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_FEET_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_FEET_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_FEET_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_FEET_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used

(int)CLTHS_USED_BERD // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_BERD_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED
(int)CLTHS_USED_BERD_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED
(int)CLTHS_USED_BERD_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED
(int)CLTHS_USED_BERD_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED
(int)CLTHS_USED_BERD_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED
(int)CLTHS_USED_BERD_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED
(int)CLTHS_USED_BERD_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED

(int)CLTHS_USED_PROPS // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_PROPS_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_PROPS_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_PROPS_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_PROPS_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_PROPS_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_PROPS_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_PROPS_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_PROPS_8 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_PROPS_9 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_PROPS_10 // Add MP0_ or MP1_ // MP Char 0 - Clothes USED

(int)CLTHS_USED_OUTFIT // Add MP0_ or MP1_ // MP Char 0 - Clothes Used

<!--Clothes Storage for each char -->
(float)HEADBLEND_OVER_BLEMISH_PC // Add MP0_ or MP1_ // MP Char 0 - Head Blend Overlay Texture
(float)HEADBLEND_OVERLAY_BEARD_PC // Add MP0_ or MP1_ // MP Char 0 - Head Blend Overlay Texture
(float)HEADBLEND_OVERLAY_EYEBRW_PC // Add MP0_ or MP1_ // MP Char 0 - Head Blend Overlay Texture
(float)HEADBLEND_OVERLAY_WETHR_PC // Add MP0_ or MP1_ // MP Char 0 - Head Blend Overlay Texture
(float)HEADBLEND_OVERLAY_MAKEUP_PC // Add MP0_ or MP1_ // MP Char 0 - Head Blend Overlay Texture
(float)HEADBLEND_OVERLAY_DAMAGE_PC // Add MP0_ or MP1_ // MP Char 0 - Head Blend Overlay Texture
(float)HEADBLEND_OVERLAY_BASE_PC // Add MP0_ or MP1_ // MP Char 0 - Head Blend Overlay Texture
(float)HEADBLEND_GEOM_BLEND // Add MP0_ or MP1_ // MP Char 0 - Head Blend Geometry Blend
(float)HEADBLEND_TEX_BLEND // Add MP0_ or MP1_ // MP Char 0 - Head Blend Texture Blend
(float)HEADBLEND_VAR_BLEND // Add MP0_ or MP1_ // MP Char 0 - Head Blend Variation Blend
(float)HEADBLEND_DOM // Add MP0_ or MP1_ // MP Char 0 - Head Blend Parent Dominance

(int)CHAR_CREATOR_SLEEP // Add MP0_ or MP1_ // MP Char 0 - Head Blend Sleep Value
(int)CHAR_CREATOR_FAMILY // Add MP0_ or MP1_ // MP Char 0 - Head Blend Family Value
(int)CHAR_CREATOR_SPORT // Add MP0_ or MP1_ // MP Char 0 - Head Blend Sport Value
(int)CHAR_CREATOR_LEGAL // Add MP0_ or MP1_ // MP Char 0 - Head Blend Legal Value
(int)CHAR_CREATOR_TV // Add MP0_ or MP1_ // MP Char 0 - Head Blend TV Value
(int)CHAR_CREATOR_PARTY // Add MP0_ or MP1_ // MP Char 0 - Head Blend Party Value
(int)CHAR_CREATOR_ILLEGAL // Add MP0_ or MP1_ // MP Char 0 - Head Blend Illegal Value

(int)TATTOO_FM_UNLOCKS_0 // Add MP0_ or MP1_ // MP Char 0 - Unlocked Tattoos 0
(int)TATTOO_FM_UNLOCKS_1 // Add MP0_ or MP1_ // MP Char 0 - Unlocked Tattoos 1
(int)TATTOO_FM_UNLOCKS_2 // Add MP0_ or MP1_ // MP Char 0 - Unlocked Tattoos 2
(int)TATTOO_FM_UNLOCKS_3 // Add MP0_ or MP1_ // MP Char 0 - Unlocked Tattoos 3
(int)TATTOO_FM_UNLOCKS_4 // Add MP0_ or MP1_ // MP Char 0 - Unlocked Tattoos 4

(int)TATTOO_FM_VIEWED_0 // Add MP0_ or MP1_ // MP Char 0 - Viewed Tattoos 0
(int)TATTOO_FM_VIEWED_1 // Add MP0_ or MP1_ // MP Char 0 - Viewed Tattoos 1
(int)TATTOO_FM_VIEWED_2 // Add MP0_ or MP1_ // MP Char 0 - Viewed Tattoos 2
(int)TATTOO_FM_VIEWED_3 // Add MP0_ or MP1_ // MP Char 0 - Viewed Tattoos 3
(int)TATTOO_FM_VIEWED_4 // Add MP0_ or MP1_ // MP Char 0 - Viewed Tattoos 4

(int)TATTOO_FM_CURRENT_0 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 0
(int)TATTOO_FM_CURRENT_1 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 1
(int)TATTOO_FM_CURRENT_2 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 2
(int)TATTOO_FM_CURRENT_3 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 3
(int)TATTOO_FM_CURRENT_4 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
(int)TATTOO_FM_CURRENT_5 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4

(int)HEADBLEND_DAD_HAIR // Add MP0_ or MP1_ // MP Char 0 - Head Blend Texture Blend
(int)HEADBLEND_MUM_HAIR // Add MP0_ or MP1_ // MP Char 0 - Head Blend Variation Blend
(int)HEADBLEND_DAD_BEARD // Add MP0_ or MP1_ // MP Char 0 - Head Blend Texture Blend
(int)HEADBLEND_MUM_MAKEUP // Add MP0_ or MP1_ // MP Char 0 - Head Blend Variation Blend
(int)HEADBLEND_DAD_HAIR_TEX // Add MP0_ or MP1_ // MP Char 0 - Head Blend Texture Blend
(int)HEADBLEND_MUM_HAIR_TEX // Add MP0_ or MP1_ // MP Char 0 - Head Blend Variation Blend
(int)HEADBLEND_DAD_BEARD_TEX // Add MP0_ or MP1_ // MP Char 0 - Head Blend Texture Blend
(int)HEADBLEND_MUM_MAKEUP_TEX // Add MP0_ or MP1_ // MP Char 0 - Head Blend Variation Blend
(int)HEADBLEND_DAD_EYEB // Add MP0_ or MP1_ // MP Char 0 - Head Blend Dads Eyebrow
(int)HEADBLEND_MUM_EYEB // Add MP0_ or MP1_ // MP Char 0 - Head Blend Mums Eyebrow

<!--CHAR ammo used-->
(int)AMMO_USED_PISTOLS // Add MP0_ or MP1_ // MP char 0 - Ammo used for weapon group pistols
(int)AMMO_USED_SHOTGUNS // Add MP0_ or MP1_ // MP char 0 - Ammo used for weapon group shotgun
(int)AMMO_USED_SMGS // Add MP0_ or MP1_ // MP char 0 - Ammo used for weapon group SMGS
(int)AMMO_USED_SNIPERS // Add MP0_ or MP1_ // MP char 0 - Ammo used for weapon group Snipers
(int)AMMO_USED_RIFLES // Add MP0_ or MP1_ // MP char 0 - Ammo used for weapon group Rifles
(int)AMMO_USED_THROWN // Add MP0_ or MP1_ // MP char 0 - Ammo used for weapon group Thrown
(int)AMMO_USED_HEAVY // Add MP0_ or MP1_ // MP char 0 - Ammo used for weapon group Heavy
(int)AMMO_PURCHASED_PISTOLS // Add MP0_ or MP1_ // MP char 0 - Ammo bought for weapon group pistols
(int)AMMO_PURCHASED_SHOTGUNS // Add MP0_ or MP1_ // MP char 0 - Ammo bought for weapon group shotgun
(int)AMMO_PURCHASED_SMGS // Add MP0_ or MP1_ // MP char 0 - Ammo bought for weapon group SMGS
(int)AMMO_PURCHASED_SNIPERS // Add MP0_ or MP1_ // MP char 0 - Ammo bought for weapon group Snipers
(int)AMMO_PURCHASED_RIFLES // Add MP0_ or MP1_ // MP char 0 - Ammo bought for weapon group Rifles
(int)AMMO_PURCHASED_THROWN // Add MP0_ or MP1_ // MP char 0 - Ammo bought for weapon group Thrown
(int)AMMO_PURCHASED_HEAVY // Add MP0_ or MP1_ // MP char 0 - Ammo bought for weapon group Heavy
<!--General Tracking -->
(u64)CHAR_WANTED_LEVEL_TIME // Add MP0_ or MP1_ // MP Char 0 - Wanted Level Time
(u64)CHAR_WANTED_LEVEL_TIME5STAR // Add MP0_ or MP1_ // MP Char 0 - Wanted Level Time
(u64)CHAR_FM_RACE_RECORD_TIMES // Add MP0_ or MP1_ // MP Char 0 - Wanted Level Time

(int)HIGHEST_NO_MULTIPLE_KILLS // Add MP0_ or MP1_ // MP Char 0 - COMBAT - Highest number of Miltiple Kills (x kills in x seconds)
(int)TOTAL_NO_DISABLED // Add MP0_ or MP1_ // MP Char 0 - COMBAT - Total number of times disabled

(int)TOTAL_NO_WEAPONS_USED // Add MP0_ or MP1_ // MP Char 0 - COMBAT - Total number of weapons used
(u64)AV_TIME_COMPLETE_MISSIONS // Add MP0_ or MP1_ // MP Char 0 - MISSIONS  -Average time taken to complete mission(Total time on missions/ total time in game)
(int)SUICIDES // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total number of times player commited suicide
 
(int)NO_PHOTOS_TAKEN // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total number of photos taken

(int)NO_OF_OUTFITS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total number of outfits
(int)PROSTITUTES_FREQUENTED // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total number of prostitutes frequented
(int)LAP_DANCED_BOUGHT // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total number of lap dances bought

(int)NO_KILLS_DURING_MISSION // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total Kills during missions
(int)MOST_ARM_WRESTLING_WINS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Record of most arm wrestling wins in one arm wrestling sesson
(int)FASTEST_ARM_WRESTLING_WIN // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Record of fastest arm wrestling win

(int)MOST_REVENGE_KILL_GLOBAL // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(int)MOST_REVENGE_KILL_LOCAL // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(userid)BIGGEST_VICTIM // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(userid)ARCHENEMY // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(string)BIGGEST_VICTIM_NAME // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(string)ARCHENEMY_NAME // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills


(int)BIGGEST_VICTIM_KILLS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(int)ARCHENEMY_KILLS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
   

(int)CIGARETTES_BOUGHT // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills

  <!--FM General Tracking -->

<!--MENU CHECKLIST STATS -->
(bool)CL_RACE_MODDED_CAR // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 0
(bool)CL_DRIVE_RALLY // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 0
(bool)CL_PLAY_GTA_RACE // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 0
(bool)CL_PLAY_BOAT_RACE // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 0
(bool)CL_PLAY_FOOT_RACE // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 0
(bool)CL_PLAY_TEAM_DM // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 0
(bool)CL_PLAY_VEHICLE_DM // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 0
(bool)CL_PLAY_MISSION_CONTACT // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 0
(int)CRHEIST // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_PLAY_A_PLAYLIST // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_PLAY_POINT_TO_POINT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_PLAY_ONE_ON_ONE_DM // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_PLAY_ONE_ON_ONE_RACE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script


(bool)CL_SURV_A_BOUNTY // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script

(bool)CL_SET_WANTED_LVL_ON_PLAY // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_GANG_BACKUP_GANGS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_GANG_BACKUP_LOST // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_GANG_BACKUP_VAGOS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_CALL_MERCENARIES // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_PHONE_MECH_DROP_CAR // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_GONE_OFF_RADAR // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_FILL_TITAN // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_MOD_CAR_USING_APP // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_BUY_APPARTMENT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_BUY_INSURANCE // Add MP0_ or MP1_ // MP - Stores if player has bought insurance
(bool)CL_BUY_GARAGE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_ENTER_FRIENDS_HOUSE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_CALL_STRIPPER_HOUSE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_CALL_FRIEND // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_SEND_FRIEND_REQUEST // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)CL_W_WANTED_PLAYER_TV // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script













<!--Unlocks -->
(int)RANKAP_UNLK_0 // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 0
(int)RANKAP_UNLK_1 // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 1
(int)RANKAP_UNLK_2 // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 2
(int)RANKAP_UNLK_3 // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Unlock bitset 3
(int)RANKAP_EQUIP_0 // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Equipp bitset 0
(int)RANKAP_EQUIP_1 // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Equipp bitset 1
(int)RANKAP_EQUIP_2 // Add MP0_ or MP1_ // MP Char 0 - Rank Apparel Equipp bitset 2
(int)RANKAP_EQUIP_3 // Add MP0_ or MP1_ // MP Char 0 - Rank farel Equipp bitset 3
(int)WEAPON_PICKUP_BITSET // Add MP0_ or MP1_ // MP Char 0 - weapon unlock bitset
(int)WEAPON_PICKUP_BITSET2 // Add MP0_ or MP1_ // MP Char 0 - weapon unlock bitset 2
<!--Mission comp stats -->
(int)CHAR_MISSION_STARTED // Add MP0_ or MP1_ // MP Char 0 - Player missions started
(int)CHAR_MISSION_PASSED // Add MP0_ or MP1_ // MP Char 0 - Player missions passed
(int)CHAR_MISSION_FAILED // Add MP0_ or MP1_ // MP Char 0 - Player missions over
(int)CHAR_MISSION_OVER // Add MP0_ or MP1_ // MP Char 0 - Player missions failed
(int)CHAR_MISSION_QUIT // Add MP0_ or MP1_ // MP Char 0 - Player missions quit

<!--Mission comp stats -->
(int)CHEAT_MISSION_STARTED // Add MP0_ or MP1_ // MP Char 0 - Player missions started for cheat tracking
(int)CHEAT_MISSION_PASSED // Add MP0_ or MP1_ // MP Char 0 - Player missions passed for cheat tracking
(int)CHEAT_MISSION_FAILED // Add MP0_ or MP1_ // MP Char 0 - Player missions over for cheat tracking
(int)CHEAT_MISSION_OVER // Add MP0_ or MP1_ // MP Char 0 - Player missions failed for cheat tracking

<!--Mission comp stats -->
(int)CHAR_MC_STARTED // Add MP0_ or MP1_ // MP Char 0 - Player missions started
(int)CHAR_MC_FAILED // Add MP0_ or MP1_ // MP Char 0 - Player missions failed
(int)CHAR_MC_OVER // Add MP0_ or MP1_ // MP Char 0 - Player missions failed

(bool)CHAR_JOIN_SOCIAL_CLUB_MSG // Add MP0_ or MP1_ // MP Char 0 - Player missions failed




(int)RESPAWN_PICKUP_BITSET0 // Add MP0_ or MP1_ // MP Char 0 - For Neils respawn pickups to see if they are on or off

  
<!--Script mission attempt stats -->
(int)CP_STOLEN_TUT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started CP_STOLEN_TUT script
(int)CP_WELCOMETUT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started CP_WELCOMETUT script
(int)CP_WEA_AMBUSH // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_HOOKER_TUT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_DRUGS_TUT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_RIVAL // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_SELLCARTUT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_HOLDUP_TUT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_TRIGGER_TUT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_WELCOME // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_GUNSHOPTUT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_ARMORYTUT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_HOSTAGE_STEAL // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_STEAL_BIKES // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_AIRPORTTAKE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_PROP_TUT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_RACES // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_SHIPMENTSTEAL // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_SHOWROOM // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_STEALVEHICLE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_VANRESCUE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_BANKHEIST1 // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_COUNTHEIST1 // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)INCR_DEFAULTMISS // Add MP0_ or MP1_ // MP Char 0 - If the game cannot find a mission to increment this one will do
(int)AM_SECURITYVAN // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_GANGATTACK_CITY // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_GANGATTACK_COUNTRY // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_GANGATTACK_LOST // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_GANGATTACK_VAGOS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_DIFFERENT_RACES // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CR_DIFFERENT_DM // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script

<!--General Mission stats -->
(int)HEIST_COMPLETION // Add MP0_ or MP1_ // MP Char 0 - MISSIONS  -Heist Missions completed (%)
(u64)HEIST_TOTAL_TIME // Add MP0_ or MP1_ // MP Char 0 - MISSIONS  -Total time spent on Heist
(u64)AVERAGE_HEIST_TIME_TAKEN // Add MP0_ or MP1_ // MP Char 0 - MISSIONS  -Average time on a Heist Mission
(int)HEISTS_ORGANISED // Add MP0_ or MP1_ // MP Char 0 - MISSIONS  -Number of Heists Organised
(int)AVERAGE_KILL_ON_MISSION // Add MP0_ or MP1_ // MP Char 0 - MISSIONS  -Average number of kills on mission
(float)AVERAGE_RANK_GAIN_PER_HOUR // Add MP0_ or MP1_ // MP Char 0 - MISSIONS  -Average Rank/ Respect gained per hour
(int)AVERAGE_XP_ON_MISSION // Add MP0_ or MP1_ // MP Char 0 - MISSIONS  -Average number of XP gained on mission
(u64)AVERAGE_WANTED_TIME // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Average wanted level time
(int)HIGHEST_WANTD_LEVEL_ESCAPE // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Highest wanted level escaped from
(int)AVERAGE_WANTD_LEVEL_ESCAPE // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Average wanted level escaped from
(int)NUMBER_OF_SESSIONS_FM // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Average wanted level escaped from
(u64)AVERAGE_TIME_PER_SESSON // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Average time spent per session
(short)TOTAL_XP_EARNED // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total XP accumulated (even after Rank 30)
(short)MISS_XP_EARNED // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total XP accumulated (even after Rank 30)
(int)TOTAL_TIMES_ARRESTED // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total number of times arrested
(int)TOTAL_NO_SHOPS_HELD_UP // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total number of shops held up
(u64)TOTAL_TIME_SPENT_ON_PHONE // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total time spent on a phone
(int)JOBS_JOINED_ON_PHONE // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Total number of jobs joined through the phone
(int)DRUG_DEALING_PROFIT_LOSS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Money made or lost as a drug dealer
(int)AVERAGE_EX_GAIN_PER_MINUTE // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Average XP gained per minute
(u64)AVERAGE_RESPONSE_TIME // Add MP0_ or MP1_ // MP Char 0 - COP  -Average response time
(u64)TIME_LAST_WANTED_LEVEL // Add MP0_ or MP1_ // MP Char 0 -The length of time of last wanted level chase
(int)CHEAT_BITSET // Add MP0_ or MP1_ // MP Char 0 - stores if the player cheated with this character
(int)BAD_SPORT_BITSET // Add MP0_ or MP1_ // MP Char 0 - stores if the player cheated with this character
(bool)CHAR_ONMISSION // Add MP0_ or MP1_ // MP Char 0 - Sets to true when the player is on mission
(float)TIME_ON_LOST_BIKE // Add MP0_ or MP1_ // MP Char 0 - time on a lost bike
(int)PARACHUTE_BLACK_DEPLOYED // Add MP0_ or MP1_ // Tracks number of times player deploys coloured smoke while parachuting
(int)PARACHUTE_RED_DEPLOYED // Add MP0_ or MP1_ // Tracks number of times player deploys coloured smoke while parachuting
(int)PARACHUTE_ORANGE_DEPLOYED // Add MP0_ or MP1_ // Tracks number of times player deploys coloured smoke while parachuting
(int)PARACHUTE_YELLOW_DEPLOYED // Add MP0_ or MP1_ // Tracks number of times player deploys coloured smoke while parachuting
(int)PARACHUTE_BLUE_DEPLOYED // Add MP0_ or MP1_ // Tracks number of times player deploys coloured smoke while parachuting

<!--VEHICLE ACCESS-->
(bool)DOES_PLAYER_HAVE_VEH_ACCESS // Add MP0_ or MP1_ // True if the player owns a car.


<!-- drug dealing-->
(float)DDEAL_COKE_QUANTITY // Add MP0_ or MP1_ // Quantity of coke in mp char 0 possession
(float)DDEAL_HEROIN_QUANTITY // Add MP0_ or MP1_ // Quantity of heroin in mp char 0 possession
(float)DDEAL_WEED_QUANTITY // Add MP0_ or MP1_ // Quantity of weed in mp char 0 possession
(float)DDEAL_METH_QUANTITY // Add MP0_ or MP1_ // Quantity of meth in mp char 0 possession
(float)STASHED_COKE_QUANTITY // Add MP0_ or MP1_ // Quantity of coke stashed in mp char 0 personal vehicle
(float)STASHED_HEROIN_QUANTITY // Add MP0_ or MP1_ // Quantity of heroin stashed in mp char 0 personal vehicle
(float)STASHED_WEED_QUANTITY // Add MP0_ or MP1_ // Quantity of weed stashed in mp char 0 personal vehicle
(float)STASHED_METH_QUANTITY // Add MP0_ or MP1_ // Quantity of meth stashed in mp char 0 personal vehicle
 <!-- HOLD UPS -->
(int)HOLDUPS_BITSET // Add MP0_ or MP1_ // MP Char 0 - Which hold ups have been done already
 <!-- AMBIENT BS -->
(int)AMBIENT_MIS_BS // Add MP0_ or MP1_ // BS to store if player has completed ambient events such as picking up hitchiker
<!-- HELP TEXT -->
(int)NON_MISSION_HELP_TEXT // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(int)SPECTATOR_CAM_HELP_TEXT // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(bool)FULLSCREEN_TV_TEXT // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(bool)NEAR_TV_HELP_TEXT // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(bool)TV_SEAT_TEXT // Add MP0_ or MP1_ // Tracks if NMH has been displayed

<!-- Last Unlocked Weapon -->
(int)LAST_UNLOCKED_WEAPON // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(int)LAST_UNLOCKED_FM_WEAPON // Add MP0_ or MP1_ // Tracks if NMH has been displayed

<!-- MISSION CONTACT STATS -->
(string)CONTACT_MISS_0 // Add MP0_ or MP1_ // MP Char 0 - For keith to store Mission contact names
(string)CONTACT_MISS_1 // Add MP0_ or MP1_ // MP Char 0 -  For keith to store Mission contact names
(string)CONTACT_MISS_2 // Add MP0_ or MP1_ // MP Char 0 -  For keith to store Mission contact names
(string)CONTACT_MISS_3 // Add MP0_ or MP1_ // MP Char 0 -  For keith to store Mission contact names
(string)CONTACT_MISS_4 // Add MP0_ or MP1_ // MP Char 0 -  For keith to store Mission contact names
(string)CONTACT_MISS_5 // Add MP0_ or MP1_ // MP Char 0 -  For keith to store Mission contact names
(string)CONTACT_MISS_6 // Add MP0_ or MP1_ // MP Char 0 -  For keith to store Mission contact names
(string)CONTACT_MISS_7 // Add MP0_ or MP1_ // MP Char 0 - For keith to store Mission contact names
(string)CONTACT_MISS_8 // Add MP0_ or MP1_ // MP Char 0 -  For keith to store Mission contact names
(string)CONTACT_MISS_9 // Add MP0_ or MP1_ // MP Char 0 -  For keith to store Mission contact names

(int)CONTACT_MISS_RANK // Add MP0_ or MP1_ // Keith - Contact Mission Rank


(int)DM_COLLECTED_SHARK_TEST // Add MP0_ or MP1_ // Sets the player to spawn in the secondary position (Boss Room or Locker Room)
(int)DM_COLLECTED_POWER_PLAYER // Add MP0_ or MP1_ // Sets the player to spawn in the secondary position (Boss Room or Locker Room)

<!-- Tutorial BitSet -->
(int)TUTORIAL_BITSET // Add MP0_ or MP1_ // Tracks if NMH has been displayed
<!-- Should Use Secondary Tutorial Respawn Position -->
(bool)USE_SECOND_TUT_SPAWN_POS // Add MP0_ or MP1_ // Sets the player to spawn in the secondary position (Boss Room or Locker Room)

<!-- Set when character has watched the Freemode Intro -->
(bool)FM_INTRO_CUT_DONE // Add MP0_ or MP1_ // Set when the character has seen the Freemode Intro


<!-- FM HELP TEXT -->
(int)FM_NON_MISS_HELP_TEXT // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(int)FM_NON_MS_HELP_TEXT2 // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(int)FM_NON_MS_HELP_TEXT3 // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(int)FM_NON_MS_HELP_TEXT4 // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(int)FM_NON_MS_HELP_TEXT5 // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(int)FM_NON_MS_HELP_GTA1 // Add MP0_ or MP1_ // Tracks if GTA help has been displayed
(pos)FM_SPAWN_POSITION // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(bool)FM_SPAWN_FLAG // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(float)FM_SPAWN_HEADING // Add MP0_ or MP1_ // Tracks if NMH has been displayed

(bool)FM_CHAR_STATS1 // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(bool)FM_CHAR_STATS2 // Add MP0_ or MP1_ // Tracks if NMH has been displayed

<!-- CELLPHONE -->
(int)FM_CELLPHONE_VIBRATE // Add MP0_ or MP1_ // Import export stats
(int)FM_CELLPHONE_RINGTONE // Add MP0_ or MP1_ // Import export stats


<!-- FM Import Export -->
(int)FM_IMP_EXP // Add MP0_ or MP1_ // Import export stats
<!-- FM Intro Mission -->
(bool)FM_INTRO_MISS_DONE // Add MP0_ or MP1_ // Set when the character completes the FM intro mission

<!-- FM Activity Phonecall -->
(int)FM_ACT_PHN // Add MP0_ or MP1_ // Freemode activity phonecall
(int)FM_ACT_PH2 // Add MP0_ or MP1_ // Freemode activity phonecall
(int)FM_ACT_PH3 // Add MP0_ or MP1_ // Freemode activity phonecall
(int)FM_ACT_PH4 // Add MP0_ or MP1_ // Freemode activity phonecall
(int)FM_ACT_PH5 // Add MP0_ or MP1_ // Freemode activity phonecall
(int)FM_VEH_TX1 // Add MP0_ or MP1_ // Freemode activity phonecall
(int)FM_ACT_PH6 // Add MP0_ or MP1_ // Freemode activity phonecall


<!-- FM Char Deathmatch Stats -->
(int)DM_START // Add MP0_ or MP1_ //  No of death matchs started
(int)DM_END // Add MP0_ or MP1_ //  No of death matchs ended


<!-- FM Char Race Stats -->
(int)RACE_START // Add MP0_ or MP1_ //  No of races started
(int)RACE_END // Add MP0_ or MP1_ //  No of races ended

<!-- FM Char Race Stats -->
(int)MINIGAME_START // Add MP0_ or MP1_ //  No of races started
(int)MINIGAME_END // Add MP0_ or MP1_ //  No of races ended




<!-- FM trigger Tut -->
(bool)FM_TRIGTUT_DONE // Add MP0_ or MP1_ // Set when the character completes the FM trigger tutorial

<!-- FM Hold Up Tut -->
(bool)FM_HOLDTUT_DONE // Add MP0_ or MP1_ // Set when the character completes the FM Hold Up tutorial

<!-- FM Car Mod Tut -->
(bool)FM_CMODTUT_DONE // Add MP0_ or MP1_ // Set when the character completes the FM Car Mod tutorial

<!-- FM No Tut -->
(bool)FM_NOTUT_DONE // Add MP0_ or MP1_ // Set when the character chooses not to do the tutorials


<!-- FM Race Tut -->
(bool)FM_RACETUT_DONE // Add MP0_ or MP1_ // Set when the character completes the FM race tutorial
(int)FM_RACEPOSITION // Add MP0_ or MP1_ // Set when the character completes the FM race tutorial

<!-- FM garage cut -->
(bool)FM_BUYGAR_DONE // Add MP0_ or MP1_ // Set when the character completes the FM race tutorial

<!--- HELP TEXT STATS -->

(int)HELP_THUMB_VOTE // Add MP0_ or MP1_ //  No of times help has been displayed
(int)HELP_BASEJUMP_TEXT // Add MP0_ or MP1_ //  No of times help has been displayed
(int)HELP_RACES_TEXT // Add MP0_ or MP1_ //  No of times help has been displayed

<!--- FM ask the player to change character once -->
(bool)FM_CHANGECHAR_ASKED // Add MP0_ or MP1_ // Set when the character completes the FM race tutorial

(int)PLAYER_ANIM_TYPE // Add MP0_ or MP1_ // No of times help has been displayed
 
<!--- HELPERS FOR TIMED AWARDS -->

(u64)TIMEINHELI // Add MP0_ or MP1_ // MP Char 0 - Time spent being a passenger in Milliseconds 
(u64)TIMEWITHOUTCRASHING // Add MP0_ or MP1_ // MP Char 0 - Time spent being a passenger in Milliseconds 
(u64)TIME_AS_A_PASSENGER // Add MP0_ or MP1_ // MP Char 0 -  - Vehicles-Time spent as a passenger
(u64)TIME_AS_A_DRIVER // Add MP0_ or MP1_ // MP Char 0  - Vehicles- Time spent as a driver
(u64)TIME_SPENT_FLYING // Add MP0_ or MP1_ // MP Char 0 -Vehicles- Time spent flying an aircraft
(u64)TIME_IN_CAR // Add MP0_ or MP1_ // MP Char 0 -Vehicles- Time spent inside your car

<!-- Character Creator Stats -->
(int)CHAR_CREATOR_STAMINA // Add MP0_ or MP1_ //  Character creator stamina
(int)CHAR_CREATOR_SHOOTING // Add MP0_ or MP1_ //  Character creator shooting
(int)CHAR_CREATOR_STRENGTH // Add MP0_ or MP1_ //  Character creator strength
(int)CHAR_CREATOR_STEALTH // Add MP0_ or MP1_ //  Character creator stealth
(int)CHAR_CREATOR_FLYING // Add MP0_ or MP1_ //  Character creator flying
(int)CHAR_CREATOR_BIKE // Add MP0_ or MP1_ //  Character creator bike
(int)CHAR_CREATOR_LUNG // Add MP0_ or MP1_ //  Character creator lung
(int)CHAR_CREATOR_MECHANIC // Add MP0_ or MP1_ //  Character creator mechanic

<!-- UNLOCKS STATS -->
(int)NO_WEAPONS_UNLOCK // Add MP0_ or MP1_ //  No of items unlocked
(int)NO_WEAPON_MODS_UNLOCK // Add MP0_ or MP1_ // No of items unlocked
(int)NO_WEAPON_CLR_MOD_UNLOCK // Add MP0_ or MP1_ // No of items unlocked

(int)NO_VEHICLE_MODS_UNLOCK // Add MP0_ or MP1_ // No of items unlocked
(int)NO_CLOTHES_UNLOCK // Add MP0_ or MP1_ //  No of items unlocked
(int)NO_HAIR_UNLOCK // Add MP0_ or MP1_ //  No of items unlocked
(int)NO_TATTOOS_UNLOCK // Add MP0_ or MP1_ //  No of items unlocked
(int)NO_PROPERTIES_UNLOCK // Add MP0_ or MP1_ //  No of items unlocked
(int)NO_AWARDS_UNLOCK // Add MP0_ or MP1_ //  No of items unlocked
(int)NO_DRUG_CAPACITY_UNLOCK // Add MP0_ or MP1_ //  No of items unlocked

(int)NO_MASKS_UNLOCK // Add MP0_ or MP1_ //  No of items unlocked
(int)NO_MAKEUP_UNLOCK // Add MP0_ or MP1_ //  No of items unlocked

<!-- AWARDS -->
(u64)AWD_PASSENGERTIME // Add MP0_ or MP1_ // MP Char 0 - Time spent being a passenger in minutes Award
(int)AWD_100_KILLS_PISTOL // Add MP0_ or MP1_ // MP Char 0 - 100 Kills with a pistol - VAGOS - Award  LOST MC - Award COP- N/A 
(int)AWD_100_KILLS_SNIPER // Add MP0_ or MP1_ // MP Char 0 - 100 Kills with a sniper rifle - VAGOS - Award  LOST MC - Award COP- N/A 
(int)AWD_50_KILLS_GRENADES // Add MP0_ or MP1_ // MP Char 0 - 50 Kills with grenades - VAGOS - Award  LOST MC - Award COP- N/A 
(int)AWD_100_KILLS_SHOTGUN // Add MP0_ or MP1_ // MP Char 0 - 100 Kills with a shotgun rifle - VAGOS - Award  LOST MC - Award COP- N/A 
(int)AWD_100_KILLS_SMG // Add MP0_ or MP1_ // MP Char 0 - 100 Kills with an SMG - VAGOS - Award  LOST MC - Award COP- N/A 
(int)AWD_50_KILLS_ROCKETLAUNCH // Add MP0_ or MP1_ // MP Char 0 - 50 Kills with a Rocketlauncher - VAGOS - Award  LOST MC - Award COP- N/A 
(int)AWD_25_KILLS_STICKYBOMBS // Add MP0_ or MP1_ // MP Char 0 - 50 Kills with sticky bombs - VAGOS - Award  LOST MC - Award COP- N/A 
(int)AWD_20_KILLS_MELEE // Add MP0_ or MP1_ // MP Char 0 - 20 Kills with melee weapons -VAGOS - N/A  LOST MC - Award COP- N/A 
(int)AWD_100_HEADSHOTS // Add MP0_ or MP1_ // MP Char 0 - 100 headshot kills - VAGOS - N/A  LOST MC - Award COP- N/A 
(int)AWD_50_VEHICLES_BLOWNUP // Add MP0_ or MP1_ // MP Char 0 - 50 vehicles blownup - VAGOS - N/A  LOST MC - Award COP- N/A 
(int)AWD_VEHICLES_JACKEDR // Add MP0_ or MP1_ // MP Char 0 -  award given reaching 10/25/50/100 vehicles jacked - VAGOS -AWARD  LOST MC - N/A COP- N/A 
(int)AWD_ENEMYDRIVEBYKILLS // Add MP0_ or MP1_ // MP Char 0 -  award given reaching 10 enemy driveby kills - VAGOS -AWARD  LOST MC - AWARD COP- N/A 
(int)AWD_COPS_KILLED // Add MP0_ or MP1_ // MP Char 0 -  award given reaching 10/25/50/100/200 enemy driveby kills - VAGOS -AWARD  LOST MC - AWARD COP- N/A 
(bool)AWD_BUY_EVERY_GUN // Add MP0_ or MP1_ // MP Char 0 -Award when buying every gun - VAGOS -AWARD  LOST MC - AWARD COP- N/A 
(int)AWD_HOLD_UP_SHOPS // Add MP0_ or MP1_ // MP Char 0 -Award for holding up all shops award given reaching 1/6/12/19  - VAGOS -Tattoo  LOST MC - Patch COP- N/A 
(int)AWD_LAPDANCES // Add MP0_ or MP1_ // MP Char 0 -Award for no. Lapdances paid for  - VAGOS -Award  LOST MC - Award COP- NA 
(bool)AWD_DRIVE_ALL_COP_CARS // Add MP0_ or MP1_ // MP Char 0 -Award for driving all cop cars - VAGOS -NA  LOST MC - NA COP- AWARD 
(u64)AWD_TIME_IN_HELICOPTER // Add MP0_ or MP1_ // MP Char 0 -Awards for time spent in helicopter  Denomitators of 10/25/50/- VAGOS -AWARDLOST MC - AWARD COP- AWARD 
(int)AWD_CARS_EXPORTED // Add MP0_ or MP1_ // MP Char 0 -Awards for number of car deliveries at car export Denomitators of 1/5/10/25/50 VAGOS -AWARDLOST MC - AWARD COP- NA
(int)AWD_SECURITY_CARS_ROBBED // Add MP0_ or MP1_ // MP Char 0 -Awards for number of security cars robbed Denomitators of 1/5/10/25/50 VAGOS -AWARDLOST MC - AWARD COP- NA
(int)AWD_5STAR_WANTED_AVOIDANCE // Add MP0_ or MP1_ // MP Char 0 -Awards for number of times avoiding 5 star wanted level Denomitators of 1/5/10/25/50/100 VAGOS -AWARDLOST MC - AWARD COP- NA
(int)AWD_VEHICLE_JUMP_OVER_40M // Add MP0_ or MP1_ // MP Char 0 -Awards for number of times jumping a vehicle over 40 metres  Denomitators of 1/5/10/25/50 VAGOS -AWARDLOST MC - AWARD COP- AWARD
(int)AWD_RACES_WON // Add MP0_ or MP1_ // MP Char 0 -Awards for number of times player wins a race  Denomitators of 1/5/10/25/50/100 VAGOS -TATTOOLOST MC - PATCH COP- MEDAL
(int)AWD_NO_ARMWRESTLING_WINS // Add MP0_ or MP1_ // MP Char 0 -Awards for number of times you killed every member of a gang in one mission of 1/5/10/20 VAGOS -TATTOOLOST MC - PATCH COP- MEDAL
(int)AWD_WIN_AT_DARTS // Add MP0_ or MP1_ // MP Char 1 - Number of dart wins 1 10 25 50VAGOS -TATLOST MC - PATCH COP- NA
(int)AWD_CAR_BOMBS_ENEMY_KILLS // Add MP0_ or MP1_ // MP Char 1 - Number of enemies killed using car bombs 1 5 10 25   VAGOS -TATLOST MC - PATCH COP- NA
(int)AWD_KILLS_ASSAULT_RIFLE // Add MP0_ or MP1_ // MP Char 1 - Award for kills with assualt rifle 10 25 50 100 VAGOS -TATLOST MC - PATCH COP- NA
(int)AWD_KILLS_MACHINEGUN // Add MP0_ or MP1_ // MP Char 1 - Award for machine gun kills 10 25 50 100  VAGOS -TATLOST MC - PATCH COP- NA
(int)AWD_NO_HAIRCUTS // Add MP0_ or MP1_ // MP Char 1 - Number of haircuts 1 5 10 25  VAGOS -TATLOST MC - PATCH COP- MEDAL
(int)AWD_PARACHUTE_JUMPS_50M // Add MP0_ or MP1_ // MP Char 1 - Number of parachute jumps over 50m 1 10 25 50VAGOS -TATLOST MC - PATCH COP- MEDAL
(int)AWD_PARACHUTE_JUMPS_20M // Add MP0_ or MP1_ // MP Char 1 - Number of parachute jumps below 20m

<!--FM AWARDS   -->
(bool)AWD_FM_GOLF_HOLE_IN_1 // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_GOLF_BIRDIES // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_GOLF_WON // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_SHOOTRANG_TG_WON // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_SHOOTRANG_RT_WON // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_SHOOTRANG_CT_WON // Add MP0_ or MP1_ // Game awards
(bool)AWD_FM_SHOOTRANG_GRAN_WON // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_TENNIS_WON // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_TENNIS_ACE // Add MP0_ or MP1_ // Game awards
(bool)AWD_FM_TENNIS_5_SET_WINS // Add MP0_ or MP1_ // Game awards
(bool)AWD_FM_TENNIS_STASETWIN // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_GTA_RACES_WON // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_RACES_FASTEST_LAP // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_RACE_LAST_FIRST // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_DM_WINS // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_TDM_WINS // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_TDM_MVP // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_DM_KILLSTREAK // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_DM_TOTALKILLS // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_DM_3KILLSAMEGUY // Add MP0_ or MP1_ // Game awards
(int)AWD_FM_DM_STOLENKILL // Add MP0_ or MP1_ // Game awards
(bool)AWD_FMATTGANGHQ // Add MP0_ or MP1_ // Clear all gang hideouts in one game day
(int)AWD_FMBASEJMP // Add MP0_ or MP1_ // Land  away from the target centre  times
(int)AWD_FMHORDWAVESSURVIVE // Add MP0_ or MP1_ // Reach wave  without dying.
(int)AWD_FMBBETWIN // Add MP0_ or MP1_ // Earn  amount of cash from betting
(int)AWD_FMCRATEDROPS // Add MP0_ or MP1_ // Game Awards
(bool)AWD_FM6DARTCHKOUT // Add MP0_ or MP1_ // Game Awards
(bool)AWD_FMWINEVERYGAMEMODE // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMPICKUPDLCCRATE1ST // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMWINALLRACEMODES // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMRACEWORLDRECHOLDER // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMRALLYWONDRIVE // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMRALLYWONNAV // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FM25DIFITEMSCLOTHES // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMFULLYMODDEDCAR // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMWINCUSTOMRACE // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FM25DIFFERENTDM // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FM25DIFFERENTRACES // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMMOSTKILLSGANGHIDE // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMMOSTKILLSSURVIVE // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMSHOOTDOWNCOPHELI // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMKILLCHEATER // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMKILL3ANDWINGTARACE // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMTATTOOALLBODYPARTS // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMWINRACETOPOINTS // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMKILLBOUNTY // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMOVERALLKILLS // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMWINSEARACE // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMWINAIRRACE // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMREVENGEKILLSDM // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMKILLSTREAKSDM // Add MP0_ or MP1_ // Get all the services
(u64)AWD_FMTIME5STARWANTED // Add MP0_ or MP1_ // Get all the services
(bool)AWD_FMFURTHESTWHEELIE // Add MP0_ or MP1_ // Get all the services
(u64)AWD_FMDRIVEWITHOUTCRASH // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMMOSTFLIPSINONEVEHICLE // Add MP0_ or MP1_ // Get all the services
(int)AWD_FMMOSTSPINSINONEVEHICLE // Add MP0_ or MP1_ // Get all the services

(int)BOUNTTARG // Add MP0_ or MP1_ // Bounties placed on other players by you

(int)BOUNTSONU // Add MP0_ or MP1_ // Bounties placed on other players by you
(int)BOUNTPLACED // Add MP0_ or MP1_ // Bounties placed on you 
(int)VEHEXPORTED // Add MP0_ or MP1_ // Cars exported
(int)BETAMOUNT // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(int)GHKILLS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(int)HORDELVL // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(int)HORDKILLS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(int)UNIQUECRATES // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(int)BJWINS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(int)HORDEWINS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(int)MCMWINS // Add MP0_ or MP1_ // MIssion created mission Wins
(int)GANGHIDWINS // Add MP0_ or MP1_ // MIssion created mission Wins

(int)CRARMWREST // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CRBASEJUMP // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CRDARTS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CRDM // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CRGANGHIDE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CRGOLF // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CRHORDE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CRMISSION // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CRSHOOTRNG // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CRTENNIS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script

<!--FM XP REWARD TRACKING STATS -->
(date)REW_DAILY_DM // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(date)REW_DAILY_RACE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(date)REW_DAILY_MISS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(date)REW_DAILY_DM_WIN // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(date)REW_DAILY_RACE_WIN // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(date)REW_DAILY_MISS_WIN // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script

(date)REW_DAILY_5_MISS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)REW_DAILY_5_MISS_COUNTER // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script

(int)REW_10_CREATOR_MISS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)REW_RSTAR_VER_COMP_COUNT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)REW_PLAY_OWN_MISS_COUNT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)REW_PLAY_OTHER_MISS_COUNT // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)REW_PLAY_CREATE_1_TYPE // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)REW_BOOL_PLAY_OTHER_MISS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(bool)REW_BOOL_PLAY_RSTAR_MISS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script

<!--FM VEHICLE ACCESS STATS -->
(bool)PLANE_ACCESS // Add MP0_ or MP1_ // Says if the player has access to a Plane for .
(bool)BOAT_ACCESS // Add MP0_ or MP1_ // Says if the player has access to a Boat for .
(bool)HELI_ACCESS // Add MP0_ or MP1_ // Says if the player has access to a Heli for .

<!--FM RACE MOOD FACE -->
(int)CHAR_MOOD_NORMAL // Add MP0_ or MP1_ // Says if the player has access to a Heli for .
(int)CHAR_MOOD_RACES // Add MP0_ or MP1_ // Says if the player has access to a Heli for .
(int)CHAR_MOOD_DM // Add MP0_ or MP1_ // Says if the player has access to a Heli for .

<!--FM SNACKS -->
(int)NO_BOUGHT_YUM_SNACKS // Add MP0_ or MP1_ // Says if the player has access to a Heli for .
(int)NO_BOUGHT_HEALTH_SNACKS // Add MP0_ or MP1_ // Says if the player has access to a Heli for .
(int)NO_BOUGHT_EPIC_SNACKS // Add MP0_ or MP1_ // Says if the player has access to a Heli for .

<!-- Property Stats -->
(int)PROPERTY_HOUSE // Add MP0_ or MP1_ // Stores what house player has purchased

(int)AWD_TEMPAWARDINT // Add MP0_ or MP1_ // Temp awards
(float)AWD_TEMPAWARDFLOAT // Add MP0_ or MP1_ // Temp awards
(bool)AWD_TEMPAWARDBOOL // Add MP0_ or MP1_ // Temp awards


(int)DM_CURRENT_KILLS // Add MP0_ or MP1_ // Deathmatch - Total DM KILLS the player has
(int)DM_CURRENT_ASSISTS // Add MP0_ or MP1_ // Deathmatch - Total DM ASSISTS player has
(int)DM_CURRENT_DEATHS // Add MP0_ or MP1_ // Deathmatch - Total DM DEATHS player has
(int)DM_HIGHEST_KILLSTREAK // Add MP0_ or MP1_ // Deathmatch - HIGHEST DM KILLSTREAK the player has
(short)DM_TOTAL_CASH // Add MP0_ or MP1_ // Deathmatch - Total DM CASH player has
(int)DM_TOTAL_ASSISTS // Add MP0_ or MP1_ // Deathmatch - Total DM ASSISTS player has
(int)FM_PRIM_COLOUR // Add MP0_ or MP1_ // MP Char 0 - Colour the player set the car at
(int)FM_SECO_COLOUR // Add MP0_ or MP1_ // MP Char 0 - Colour the player set the car at
(int)SHOOTINGRANGE_GRID_SCORE // Add MP0_ or MP1_ // MPPLAYER - Best score achieved in the Shooting Range GRID round
(int)SHOOTINGRANGE_RAND_SCORE // Add MP0_ or MP1_ // MPPLAYER - Best score achieved in the Shooting Range RANDOM round
(int)SHOOTINGRANGE_COV_SCORE // Add MP0_ or MP1_ // MPPLAYER - Best score achieved in the Shooting Range COVERED round

<!-- CREW UNLOCKS -->
(int)CHAR_CREWUNLOCK_1_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
(bool)FRONT_END_JIP_UNLOCKED // Add MP0_ or MP1_ // True when the character has gotten through the tutorial

<!--GAME SPECIFIC MISSION STATS   -->
(bool)MPPLY_FM_CINEMA_CORONA_HELP // Help text the first time the player enters a cinema corona in freemode
(bool)MPPLY_FM_DONE_MISS_CORONA_HELP // Help text the first time the player enters a mission corona in freemode
(bool)MPPLY_FM_DONE_ARMW_CORONA_HELP // Help text the first time the player enters an arm wrestling corona in freemode
(bool)MPPLY_FM_DONE_DARTS_CORONA_HELP // Help text the first time the player enters a darts corona in freemode
(bool)MPPLY_FM_DONE_SHOOT_CORONA_HELP // Help text the first time the player enters a shooting range corona in freemode
(bool)MPPLY_FM_DONE_TNS_CORONA_HELP // Help text the first time the player enters a tennis corona in freemode
(bool)MPPLY_FM_DONE_GOLF_CORONA_HELP // Help text the first time the player enters a golf corona in freemode
(bool)MPPLY_FM_DONE_HRD_CORONA_HELP // Help text the first time the player enters a horde corona in freemode
(bool)MPPLY_FM_DONE_RC_CORONA_HELP // Help text the first time the player enters a race corona in freemode
(bool)MPPLY_FM_DONE_DM_CORONA_HELP // Help text the first time the player enters a DM corona in freemode
(bool)MPPLY_DONE_RACE_CREATOR_TUT // MP Char 0 - PERSONAL  -Has player completed the race-creator tutorial
(u64)MPPLY_TOTAL_TIME_SPENT_DEATHMAT // MP Char 0 - PERSONAL  -Total time spent in Deathmatch
(u64)MPPLY_TOTAL_TIME_SPENT_FREEMODE // MP Char 0 - PERSONAL  -Total time spent in Freemode
(u64)MPPLY_TOTAL_TIME_MISSION_CREATO // MP Char 0 - PERSONAL  -Total time spent in Mission Creator
(u64)MPPLY_TOTAL_TIME_SPENT_RACES // MP Char 0 - PERSONAL  -Total time spent in Races
(u64)MPPLY_TOTAL_TIME_SPENT_ON_MISS // MP Char 0 - PERSONAL  -Total time spent on mission
(int)MPPLY_TOTAL_RACES_WON // Total Races won
(int)MPPLY_TOTAL_RACES_LOST // Total Races won
(int)MPPLY_TOTAL_CUSTOM_RACES_WON // Total Races won in a custom vehicle
(int)MPPLY_TOTAL_DEATHMATCH_LOST // Total DM won
(int)MPPLY_TOTAL_DEATHMATCH_WON // Total DM won
(int)MPPLY_TOTAL_TDEATHMATCH_LOST // Total DM won
(int)MPPLY_TOTAL_TDEATHMATCH_WON // Total DM won

(u32)MPPLY_LAST_REPORT_PENALTY // The last time a player took a report strength penalty
(u32)MPPLY_LAST_COMMEND_PENALTY // The last time a player took a commend strength penalty
(u32)MPPLY_LAST_REPORT_RESTORE // The last time a player took a report strength penalty
(u32)MPPLY_LAST_COMMEND_RESTORE // The last time a player took a report strength penalty
(int)MPPLY_REPORT_STRENGTH // The amount to be added to the report stats (default of 16)
(int)MPPLY_COMMEND_STRENGTH // The amount to be added to the commend stats (default of 16)

(int)MPPLY_GRIEFING // Total reports of Griefing
(int)MPPLY_VC_ANNOYINGME // Voice Chat: Annoying Me reports
(int)MPPLY_VC_HATE // Voice Chat: Using Hate reports
(int)MPPLY_TC_ANNOYINGME // Text Chat: Annoying Me reports
(int)MPPLY_TC_HATE // Text Chat: Using Hate reports
  
(int)MPPLY_OFFENSIVE_LANGUAGE // Total reports of Offensive Language
(int)MPPLY_OFFENSIVE_TAGPLATE // Total reports for offensive emblem, crew, or UGC
<!-- Now, some of these profile stats, when over a specific threshold also update a tunable and sends a UGC report to SCAdmin.  On the game side we do NOT report these via STAT_SAVETYPE_EXPLOITS. -->
<!-- "MPPLY_VC_HATE", "MPPLY_GAME_EXPLOITS", "MPPLY_EXPLOITS" -->
   <!-- A bunch get reported via UGC and stats are updated and dealt with on the backend via SCAdmin. On the game side we do NOT report these via STAT_SAVETYPE_EXPLOITS. -->
(int)MPPLY_OFFENSIVE_UGC // Total reports for offensive emblem, crew, or UGC
(int)MPPLY_BAD_CREW_NAME // Total reports of offensive crew name
(int)MPPLY_BAD_CREW_MOTTO // Total reports for offensive crew motto
(int)MPPLY_BAD_CREW_STATUS // Total reports for offensive crew status
(int)MPPLY_BAD_CREW_EMBLEM // Total reports for offensive emblem
(int)MPPLY_GAME_EXPLOITS // Total reports for offensive emblem, crew, or UGC
(int)MPPLY_EXPLOITS // Total reports for use of exploits

(int)MPPLY_PLAYERMADE_TITLE // Total reports for player made titles (missions)
(int)MPPLY_PLAYERMADE_DESC // Total reports for Player made description (missions)
<!--  If we care about commends too we also have -->
(int)MPPLY_FRIENDLY // Total commends for being Friendly
(int)MPPLY_HELPFUL // Total commends for being Helpful

(date)MPPLY_STARTED_MP // Date the player started playing MP
(int)MPPLY_KILLS_PLAYERS_CHEATER // Players Kill for cheater ratio
(int)MPPLY_DEATHS_PLAYERS_CHEATER // Players Deaths for cheater ratio

(date)MPPLY_NON_CHEATER_CASH // Date the player started playing MP

(bool)MPPLY_DONE_DM_CREATOR_TUT // MP Char 0 - PERSONAL  -Has player completed the DM-creator tutorial
(bool)MPPLY_DONE_MISS_CREATOR_TUT // MP Char 0 - PERSONAL  -Has player completed the DM-creator tutorial
(int)MPPLY_FM_ACTIVITY_HELP // Help text for freemode activities
(int)MPPLY_MISSIONS_CREATED // MP Char 0 - PERSONAL  -Has player completed the DM-creator tutorial
(int)MPPLY_FM_NONMISS_HELP // Help text for non-mission freemode activities
(int)MPPLY_FM_RACE_MENU_HELP // Help text for race menu
 
<!--General Player Stats -->
(bool)MPPLY_ISPUNISHED // Sets to true when the player is on mission - used for reliability check
(int)MPPLY_LAST_MP_CHAR // stores the last character the player went in mp
(bool)MPPLY_FM_INTRO_CUT_DONE // Sets to True when the player has watched the Freemode Intro Cutscene
(int)MPPLY_FM_MISSION_LIKES // Sets to True when the player has watched the Freemode Intro Cutscene

<!--FM Race Cars Stats --> 
(int)MPPLY_VEHSUPER // Freemode - Shop Data
(int)MPPLY_VEHSPORTS // Freemode - Shop Data
(int)MPPLY_VEHMUSCLE // Freemode - Shop Data
(int)MPPLY_VEHEXEC // Freemode - Shop Data
(int)MPPLY_VEHCLASS // Freemode - Shop Data
(int)MPPLY_VEHIMPORT // Freemode - Shop Data
(int)MPPLY_VEHIARMO // Freemode - Shop Data
(int)MPPLY_VEHISWAG // Freemode - Shop Data
(int)MPPLY_VEHIOFFRD // Freemode - Shop Data
(int)MPPLY_VEHIVANS // Freemode - Shop Data
(int)MPPLY_VEHIBIKES // Freemode - Shop Data
(int)MPPLY_VEHICYC // Freemode - Shop Data
(int)MPPLY_VEHIPLN // Freemode - Shop Data
(int)MPPLY_VEHIHELI // Freemode - Shop Data
(int)MPPLY_VEHIBOAT // Freemode - Shop Data

<!--Permanent Stats -->
(float)MPPLY_CHAR_DIST_TRAVELLED // MP Char 0 - Total distance travelled. On Foot, car, boat, bike etc
(int)MPPLY_DEATHS_PLAYER // Number of deaths caused by other players
(int)MPPLY_KILLS_PLAYERS // Number of players killed
(int)MPPLY_DM_TOTAL_KILLS // Deathmatch - Total DM KILLS the player has
 (int)MPPLY_DM_TOTAL_DEATHS // Deathmatch - Total DM DEATHS player has

(short)MPPLY_GLOBALXP // Players Globals XP

<!-- Player Cash -->
(bool)MPPLY_CARAPP_DATA_SENT_0 // MPPLAYER - CarApp data has been setup for character slot
(bool)MPPLY_CARAPP_DATA_SENT_1 // MPPLAYER - CarApp data has been setup for character slot
(bool)MPPLY_CARAPP_DATA_SENT_2 // MPPLAYER - CarApp data has been setup for character slot
(bool)MPPLY_CARAPP_DATA_SENT_3 // MPPLAYER - CarApp data has been setup for character slot
(bool)MPPLY_CARAPP_DATA_SENT_4 // MPPLAYER - CarApp data has been setup for character slot

<!-- Player Cash -->
(int)MPPLY_TOTAL_SPENT // Players Globals XP
(int)MPPLY_TOTAL_EARNED // Players Globals XP

<!-- Player Awards -->

(int)MPPLY_AWD_FM_CR_RACES_MADE // Game Awards
(int)MPPLY_AWD_FM_CR_DM_MADE // Game Awards
(int)MPPLY_AWD_FM_CR_PLAYED_BY_PEEP // Game Awards
(int)MPPLY_AWD_FM_CR_MISSION_SCORE // Game Awards

<!-- Player Gun Club Stats -->
(int)MPPLY_SHOOTINGRANGE_WINS // MPPLAYER - Best score achieved in the Shooting Range RANDOM round
(int)MPPLY_SHOOTINGRANGE_LOSSES // MPPLAYER - Best score achieved in the Shooting Range COVERED round
(int)MPPLY_SHOOTINGRANGE_TOTAL_MATCH // MPPLAYER - Total Shooting Games Played
(bool)SHOOTINGRANGE_SEEN_TUT // Add MP0_ or MP1_ // MPPLAYER - Checks that the player has seen the Range Tutorial

<!-- Player Tennis Stats -->
(bool)TENNIS_SEEN_TUTORIAL // Add MP0_ or MP1_ // MPPLAYER - Checks that the player has seen the Tennis Tutorial.
(int)MPPLY_TENNIS_MATCHES_WON // MPPLAYER - Total tennis matches won
(int)MPPLY_TENNIS_MATCHES_LOST // MPPLAYER - Total tennis matches lost

<!-- Player Golf Stats -->
(int)MPPLY_GOLF_WINS // MPPLAYER - Distance of longest putt that went in the cup
(int)MPPLY_GOLF_LOSSES // MPPLAYER - Distance of longest putt that went in the cup

<!-- Player Darts Stats -->
(bool)DARTS_SEEN_TUTORIAL // Add MP0_ or MP1_ // MPPLAYER - Checks that the player has seen the darts Tutorial.
(int)MPPLY_DARTS_TOTAL_WINS // MPPLAYER - Total number of Dart game wins 
(int)MPPLY_DARTS_TOTAL_MATCHES // MPPLAYER - Total number of Dart matches 

<!-- Player Arm Wrestling Stats -->
(bool)ARMWRESTLING_SEEN_TUTORIAL // Add MP0_ or MP1_ // MPPLAYER - Checks that the player has seen the arm wrestling Tutorial.
(int)MPPLY_ARMWRESTLING_TOTAL_WINS // MPPLAYER - Total number of Arm Wrestling wins 
(int)MPPLY_ARMWRESTLING_TOTAL_MATCH // MPPLAYER - Total number of Arm Wrestling matches 

<!-- Crew Challenge Stats -->
(int)MPPLY_CREW_CHALLENGE_WIN // MPPLAYER - Total number of Arm Wrestling matches 
(int)MPPLY_CREW_HEAD2HEAD_WIN // MPPLAYER - Total number of Arm Wrestling matches 


<!-- CREW XP STATS -->
(short)MPPLY_CREW_LOCAL_XP_0 // MPPLAYER 0 - Players local crew xp for team 0
(short)MPPLY_CREW_LOCAL_XP_1 // MPPLAYER 0 - Players local crew xp for team 1
(short)MPPLY_CREW_LOCAL_XP_2 // MPPLAYER 0 - Players local crew xp for team 2
(short)MPPLY_CREW_LOCAL_XP_3 // MPPLAYER 0 - Players local crew xp for team 3
(short)MPPLY_CREW_LOCAL_XP_4 // MPPLAYER 0 - Players local crew xp for team 4
(bool)MPPLY_XP_REWARD_PLAYER_IN_CREW // MPPLAYER 0 - Players local crew xp for team 4

<!-- JOB STATS -->
(int)MPPLY_TIMES_FINISH_RACE_TOP_3 // MPPLAYER - Distance of longest putt that went in the cup
(int)MPPLY_TIMES_FINISH_RACE_LAST // MPPLAYER - Distance of longest putt that went in the cup
(int)MPPLY_TIMES_RACE_BEST_LAP // MPPLAYER - Distance of longest putt that went in the cup
(int)MPPLY_TIMES_FINISH_DM_TOP_3 // MPPLAYER - Distance of longest putt that went in the cup
(int)MPPLY_TIMES_FINISH_DM_LAST // MPPLAYER - Distance of longest putt that went in the cup

(int)MPPLY_CRMISSION // MPPLAYER - Distance of longest putt that went in the cup
(int)MPPLY_MCMWIN // MPPLAYER - Distance of longest putt that went in the cup

(int)MPPLY_CRHORDE // MPPLAYER - Distance of longest putt that went in the cup
(int)MPPLY_HORDEWINS // MPPLAYER - Distance of longest putt that went in the cup

(int)MPPLY_CURRENT_CREW_RANK // Rank in the primary crew.
(int)MPPLY_NEXT_CREW_RANK // The next rank in the primary crew.

(int)MPPLY_VOTED_OUT // The next rank in the primary crew.

(int)MPPLY_VOTED_OUT_DELTA // The next rank in the primary crew.
(int)MPPLY_VOTED_OUT_QUIT // The next rank in the primary crew.

(bool)MPPLY_WAS_I_BAD_SPORT // The next rank in the primary crew.
(bool)MPPLY_WAS_I_CHEATER // The next rank in the primary crew.

(int)MPPLY_NEW_CONTENT // Store the content hash so it can be checked for a difference.

<!--

(int)MPPLY_CREW_GLOBAL_XP_0 // MPPLAYER 0 - Players GLOBAL crew xp for team 0
(int)MPPLY_CREW_GLOBAL_XP_1 // MPPLAYER 0 - Players GLOBAL crew xp for team 1
(int)MPPLY_CREW_GLOBAL_XP_2 // MPPLAYER 0 - Players GLOBAL crew xp for team 2
(int)MPPLY_CREW_GLOBAL_XP_3 // MPPLAYER 0 - Players GLOBAL crew xp for team 3
(int)MPPLY_CREW_GLOBAL_XP_4 // MPPLAYER 0 - Players GLOBAL crew xp for team 4
-->
(int)MPPLY_CREW_0_ID // MPPLAYER 0 - Players GLOBAL crew xp for team 0
(int)MPPLY_CREW_1_ID // MPPLAYER0 - Players GLOBAL crew xp for team 1
(int)MPPLY_CREW_2_ID // MPPLAYER0 - Players GLOBAL crew xp for team 2
(int)MPPLY_CREW_3_ID // MPPLAYER 0 - Players GLOBAL crew xp for team 3
(int)MPPLY_CREW_4_ID // MPPLAYER 0 - Players GLOBAL crew xp for team 4

(u64)MPPLY_CREW_LOCAL_TIME_0 // Time in a crew
(u64)MPPLY_CREW_LOCAL_TIME_1 // Time in a crew
(u64)MPPLY_CREW_LOCAL_TIME_2 // Time in a crew
(u64)MPPLY_CREW_LOCAL_TIME_3 // Time in a crew
(u64)MPPLY_CREW_LOCAL_TIME_4 // Time in a crew

(u64)CREW_LOCAL_TIME_0 // Add MP0_ or MP1_ // Time in a crew
(u64)CREW_LOCAL_TIME_1 // Add MP0_ or MP1_ // Time in a crew
(u64)CREW_LOCAL_TIME_2 // Add MP0_ or MP1_ // Time in a crew
(u64)CREW_LOCAL_TIME_3 // Add MP0_ or MP1_ // Time in a crew
(u64)CREW_LOCAL_TIME_4 // Add MP0_ or MP1_ // Time in a crew

(int)MPPLY_CREW_NO_HEISTS_0 // Time in a crew
(int)MPPLY_CREW_NO_HEISTS_1 // Time in a crew
(int)MPPLY_CREW_NO_HEISTS_2 // Time in a crew
(int)MPPLY_CREW_NO_HEISTS_3 // Time in a crew
(int)MPPLY_CREW_NO_HEISTS_4 // Time in a crew


(short)MPPLY_CREW_HEIST_CASH_0 // Time in a crew
(short)MPPLY_CREW_HEIST_CASH_1 // Time in a crew
(short)MPPLY_CREW_HEIST_CASH_2 // Time in a crew
(short)MPPLY_CREW_HEIST_CASH_3 // Time in a crew
(short)MPPLY_CREW_HEIST_CASH_4 // Time in a crew



(int)SPAWN_LOCATION_SETTING // Add MP0_ or MP1_ // MP setting, players spawn location
(int)PLAYER_TITLE_SETTING // Add MP0_ or MP1_ // MP setting, players title
(int)PLAYER_ANIM_SETTING // Add MP0_ or MP1_ // MP setting, players quick animation
(int)PLAYER_ANIM_VEH_SETTING // Add MP0_ or MP1_ // MP setting, players quick animation
   
(int)LAST_PLAYED_CORONA_ANIM_TY // Add MP0_ or MP1_ // Last type of animation played in corona
(int)LAST_PLAYED_CORONA_ANIM // Add MP0_ or MP1_ // Last animation played in corona

(int)LAST_PLAYED_CORONA_RADIO // Add MP0_ or MP1_ // Last radio station selected in corona


<!-- BASEJUMP Stats -->
(int)MPPLY_BJ_WINS // MPPLAYER - Lowest Score for a Round - Delta vs. Par
(int)MPPLY_BJ_LOST // MPPLAYER - Distance of longest drive that stopped on the fairway

<!-- RACE TO POINT Stats -->
(int)MPPLY_RACE_2_POINT_WINS // MPPLAYER - Lowest Score for a Round - Delta vs. Par
(int)MPPLY_RACE_2_POINT_LOST // MPPLAYER - Distance of longest drive that stopped on the fairway

<!-- Player award -->   
(int)MPPLY_BRONZE_INTPLY_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_BRONZE_INTPLY_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_BRONZE_INTPLY_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_BRONZE_INTPLY_3 // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)MPPLY_BRONZE_FLOATPLY_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_BRONZE_FLOATPLY_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_BRONZE_FLOATPLY_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)MPPLY_SILVER_INTPLY_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_SILVER_INTPLY_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_SILVER_INTPLY_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_SILVER_INTPLY_3 // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)MPPLY_SILVER_FLOATPLY_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_SILVER_FLOATPLY_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_SILVER_FLOATPLY_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)MPPLY_GOLD_INTPLY_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_GOLD_INTPLY_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_GOLD_INTPLY_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_GOLD_INTPLY_3 // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)MPPLY_GOLD_FLOATPLY_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_GOLD_FLOATPLY_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_GOLD_FLOATPLY_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)MPPLY_PLATINUM_INTPLY_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_PLATINUM_INTPLY_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_PLATINUM_INTPLY_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_PLATINUM_INTPLY_3 // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)MPPLY_PLATINUM_FLOATPLY_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_PLATINUM_FLOATPLY_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPPLY_PLATINUM_FLOATPLY_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset


(int)MPPLY_FM_VEH_COLOUR_TYPE // MP Char 0 - The type of colour last picked by player
(int)MPPLY_FM_VEH_COLOUR // MP Char 0 - Colour the player set the car at


(int)MPPLY_DM_CHEAT_START // CHEAT TRACKING No of death matchs started
(int)MPPLY_DM_CHEAT_END // CHEAT TRACKING No of death matchs ended
(int)MPPLY_DM_CHEAT_QUIT // CHEAT TRACKING No of death matchs ended
(int)MPPLY_RACE_CHEAT_START // CHEAT TRACKING No of races started
(int)MPPLY_RACE_CHEAT_END // CHEAT TRACKING No of races ended
(int)MPPLY_RACE_CHEAT_QUIT // CHEAT TRACKING No of races quit
(int)MPPLY_MC_CHEAT_START // CHEAT TRACKING No of missions started
(int)MPPLY_MC_CHEAT_END // CHEAT TRACKING  no of missions ended
(int)MPPLY_MC_CHEAT_QUIT // CHEAT TRACKING  no of missions quit
(int)MPPLY_MGAME_CHEAT_START // No of races started
(int)MPPLY_MGAME_CHEAT_END // No of races ended
(int)MPPLY_MGAME_CHEAT_QUIT // No of races ended

(int)MPPLY_AVERAGE_RTT // Average client RTT with the host.

(float)MPPLY_OVERALL_CHEAT // Number of times cheated
(float)MPPLY_OVERALL_BADSPORT // Number of times cheated
(bool)MPPLY_CHAR_IS_BADSPORT // Track when a player has been flaged as a cheater

(int)MPPLY_BECAME_BADSPORT_NUM // Number of times cheated
(int)MPPLY_BECAME_CHEATER_NUM // Number of times cheated

(date)MPPLY_BECAME_CHEATER_DT // Number of times cheated
(date)MPPLY_BECAME_BADSPORT_DT // Number of times cheated
  
(int)MPPLY_ACTIVITY_STARTED // Number of times cheated
(int)MPPLY_ACTIVITY_ENDED // Number of times cheated
(int)MPPLY_ACTIVITY_QUIT // Number of times cheated
  
(int)MPPLY_OVERALL_SESSION_COUNT // Number of times cheated
  
(int)MPPLY_BADSPORT_MESSAGE // Number of times cheated
  
(int)MPPLY_DESTROYED_PVEHICLES // Number of times cheated


<!-- Multiplayer Settings -->

(int)MPPLY_BETTING_ODDS_SETTING // MP setting, players betting odds format
(bool)MPPLY_CREW_SETTINGS // If settings are set while in a crew


<!-- General award -->  
(int)MPGEN_BRONZE_INTGEN_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_BRONZE_INTGEN_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_BRONZE_INTGEN_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_BRONZE_FLOATGEN_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_BRONZE_FLOATGEN_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_BRONZE_FLOATGEN_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)MPGEN_SILVER_INTGEN_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_SILVER_INTGEN_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_SILVER_INTGEN_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_SILVER_FLOATGEN_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_SILVER_FLOATGEN_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_SILVER_FLOATGEN_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)MPGEN_GOLD_INTGEN_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_GOLD_INTGEN_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_GOLD_INTGEN_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_GOLD_FLOATGEN_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_GOLD_FLOATGEN_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_GOLD_FLOATGEN_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)MPGEN_PLATINUM_INTGEN_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_PLATINUM_INTGEN_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_PLATINUM_INTGEN_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_PLATINUM_FLOATGEN_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_PLATINUM_FLOATGEN_1 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)MPGEN_PLATINUM_FLOATGEN_2 // MP Char 0 - Player Int Char Awards Platinum Level bitset


<!-- Spawn Vectors Stats -->
(pos)MPPLY_SPAWN_POSITION_1 // MPPLAYER - Spawn position
(pos)MPPLY_SPAWN_POSITION_2 // MPPLAYER - Spawn position
(pos)MPPLY_SPAWN_POSITION_3 // MPPLAYER - Spawn position
(pos)MPPLY_SPAWN_POSITION_4 // MPPLAYER - Spawn position
(pos)MPPLY_SPAWN_POSITION_5 // MPPLAYER - Spawn position
(pos)MPPLY_SPAWN_POSITION_6 // MPPLAYER - Spawn position
(pos)MPPLY_SPAWN_POSITION_7 // MPPLAYER - Spawn position
(pos)MPPLY_SPAWN_POSITION_8 // MPPLAYER - Spawn position
(pos)MPPLY_SPAWN_POSITION_9 // MPPLAYER - Spawn position
(pos)MPPLY_SPAWN_POSITION_10 // MPPLAYER - Spawn position

(bool)MPPLY_AUTOMUTE_MESSAGE // MPPLAYER - Real money player has spent in store

(int)MPPLY_INGAMESTORE_MONEYSPENT // MPPLAYER - Real money player has spent in store

(float)MPPLY_KILL_DEATH_RATIO // MP player 0 - COP  -kill death percentage ratio.

(bool)MPPLY_NEED_TO_UPDATE_HEADSHOT // MP player 0 - COP  kill death percentage ratio.

(int)FM_CUT_DONE // Add MP0_ or MP1_ // Track which cutscenes have beend done

<!-- DO NOT DELETE THESE! They are required to test the infulstructure of the the stat system -->
(int)MPPLY_AWD_TEMPAWARD // Temp Stats
(float)MPPLY_AWD_TEMPAWARDFLOAT // Temp Stats
(bool)MPPLY_AWD_TEMPAWARDBOOL // Temp Stats
(date)MPPLY_AWD_TEMPAWARDDATE // Temp Stats

(int)MPGEN_AWD_TEMPAWARDINT // Temp Stats
(float)MPGEN_AWD_TEMPAWARDFLOAT // Temp Stats
(bool)MPGEN_AWD_TEMPAWARDBOOL // Temp Stats
(date)MPGEN_AWD_TEMPAWARDDATE // Temp Stats

(int)MPPLY_TEMPSTATINT // Time mp char 4 weapon in inventory(S)
(float)MPPLY_TEMPSTATFLOAT // Time mp char 4 weapon in inventory(S)
(bool)MPPLY_TEMPSTATBOOL // Time mp char 4 weapon in inventory(S)
(label)MPPLY_TEMPSTATLABEL // Time mp char 4 weapon in inventory(S)
(string)MPPLY_TEMPSTATSTRING // Time mp char 4 weapon in inventory(S)
(pos)MPPLY_TEMPSTATVEC // Time mp char 4 weapon in inventory(S)
(date)MPPLY_TEMPSTATDATE // Time mp char 4 weapon in inventory(S)
 
(int)MPGEN_TEMPSTATINT // Time mp char 4 weapon in inventory(S)
(float)MPGEN_TEMPSTATFLOAT // Time mp char 4 weapon in inventory(S)
(bool)MPGEN_TEMPSTATBOOL // Time mp char 4 weapon in inventory(S)
(label)MPGEN_TEMPSTATLABEL // Time mp char 4 weapon in inventory(S)
(string)MPGEN_TEMPSTATSTRING // Time mp char 4 weapon in inventory(S)
(pos)MPGEN_TEMPSTATVEC // Time mp char 4 weapon in inventory(S)
(date)MPGEN_TEMPSTATDATE // Time mp char 4 weapon in inventory(S)
(pos)TEMPSTATVEC // Add MP0_ or MP1_ // Time mp char 4 weapon in inventory(S)

(u32)PLAYER_MUTED_TALKERS_MET // Nmber of voice talkers met in game sessions
(u32)PLAYER_MUTED // Number of times player has been muted


<!-- Title Update additions -->

(packed)PSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)PSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)PSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)PSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)PSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)PSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers

(packed)MP_TUPSTAT_INT0 // Stat with Packed integers index 0. Takes up to 8 integers.
(packed)MP_TUPSTAT_INT1 // Stat with Packed integers index 1. Takes up to 8 integers
(packed)MP_TUPSTAT_INT2 // Stat with Packed integers index 2. Takes up to 8 integers
(packed)MP_TUPSTAT_INT3 // Stat with Packed integers index 2. Takes up to 8 integers
(packed)TUPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)TUPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)TUPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)TUPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)MP_TUPSTAT_BOOL0 // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.

<!-- NG Update additions -->
(packed)MP_NGPSTAT_INT0 // Stat with Packed integers index 0. Takes up to 8 integers.
(packed)NGPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers


(packed)MP_NGPSTAT_BOOL0 // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGPSTAT_BOOL1 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 1. Takes up to 64 booleans.


<!-- ######################################################################## -->
<!--  -->
<!--   STAT_SAVETYPE_CONTACTS -->
<!--  -->
<!-- ######################################################################## -->
(int)CONTACT_MISS_HASH_0 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_1 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_2 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_3 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_4 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_5 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_6 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_7 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_8 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_9 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_10 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_11 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_12 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_13 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_14 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_15 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_16 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_17 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_18 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_19 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_20 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_21 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_22 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_23 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_24 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_25 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_26 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_27 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_28 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_29 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_30 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_31 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_32 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_33 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_34 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_35 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_36 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_37 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_38 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_39 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_40 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_41 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_42 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_43 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_44 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_45 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_46 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_47 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_48 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash
(int)CONTACT_MISS_HASH_49 // Add MP0_ or MP1_ // Keith - CM Played - COntentID Hash

(bool)MPPLY_PLAYER_BANK_INITIALISED // Number of times player has been muted

<!-- Scar index 16  -->
(int)DAMAGE_SCAR_ZONE_16 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_16 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_16 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_16 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_16 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_16 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_16 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 17  -->
(int)DAMAGE_SCAR_ZONE_17 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_17 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_17 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_17 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_17 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_17 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_17 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 18  -->
(int)DAMAGE_SCAR_ZONE_18 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_18 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_18 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_18 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_18 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_18 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_18 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 19  -->
(int)DAMAGE_SCAR_ZONE_19 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_19 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_19 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_19 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_19 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_19 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_19 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 20  -->
(int)DAMAGE_SCAR_ZONE_20 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_20 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_20 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_20 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_20 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_20 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_20 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 21  -->
(int)DAMAGE_SCAR_ZONE_21 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_21 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_21 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_21 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_21 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_21 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_21 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 22  -->
(int)DAMAGE_SCAR_ZONE_22 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_22 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_22 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_22 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_22 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_22 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_22 // Add MP0_ or MP1_ // Damage Scar Data - Age
<!-- Scar index 23  -->
(int)DAMAGE_SCAR_ZONE_23 // Add MP0_ or MP1_ // Damage Scar Data - ePedDamageZones zone
(int)DAMAGE_SCAR_HASH_VALUE_23 // Add MP0_ or MP1_ // Damage Scar Data - Name hashed
(float)DAMAGE_SCAR_SCALE_23 // Add MP0_ or MP1_ // Damage Scar Data - scale
(float)DAMAGE_SCAR_ROTATION_23 // Add MP0_ or MP1_ // Damage Scar Data - rotation
(pos)DAMAGE_SCAR_UVPOS_23 // Add MP0_ or MP1_ // Damage Scar Data - uv Position
(int)DAMAGE_SCAR_FORCEFRAME_23 // Add MP0_ or MP1_ // Damage Scar Data - force frame
(float)DAMAGE_SCAR_AGE_23 // Add MP0_ or MP1_ // Damage Scar Data - Age


(int)CLTHS_AVAILABLE_TORSO // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_SPECIAL // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_SPECIAL_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_SPECIAL_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_SPECIAL_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_SPECIAL_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_SPECIAL_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_SPECIAL_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_SPECIAL_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_SPECIAL2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_SPECIAL2_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_DECL // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_TEETH // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_TEETH_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available
(int)CLTHS_AVAILABLE_TEETH_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Available

(int)CLTHS_ACQUIRED_TORSO // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_SPECIAL // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_SPECIAL_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_SPECIAL_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_SPECIAL_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_SPECIAL_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_SPECIAL_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_SPECIAL_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_SPECIAL_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_SPECIAL2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_SPECIAL2_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_DECL // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_TEETH // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_TEETH_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired
(int)CLTHS_ACQUIRED_TEETH_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Acquired

(int)CLTHS_USED_TORSO // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_SPECIAL // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_SPECIAL_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_SPECIAL_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_SPECIAL_3 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_SPECIAL_4 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_SPECIAL_5 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_SPECIAL_6 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_SPECIAL_7 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_SPECIAL2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_SPECIAL2_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_DECL // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_TEETH // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_TEETH_1 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used
(int)CLTHS_USED_TEETH_2 // Add MP0_ or MP1_ // MP Char 0 - Clothes Used

(bool)MPPLY_NO_MORE_TUTORIALS // Number of times cheated

(s64)TOTAL_EVC // Add MP0_ or MP1_ // Total Cash Earned over time.
(s64)MPPLY_TOTAL_EVC // Total Cash Earned over time.
(s64)MPPLY_TOTAL_SVC // Total Cash Spent over time.
(long)WALLET_BALANCE // Add MP0_ or MP1_ // Per-Character wallet Cash.
(long)BANK_BALANCE // Banked Cash.
(s64)PVC_BALANCE_MAX // The difference to the max PVC balance.
(float)PVC_USD_PURCH_MAX // Cant spend more than this in $ today.
(float)PVC_TRANSFER_MAX // Cant GIVE more than this much PVC today.
(bool)PVC_CAN_BET // A bool indicating if you can bet pvc.
(double)PVC_USDE // US dollar value of the players PVC. - USDE_DAILY_ADDITIONS
(float)PERSONAL_EXCHANGE_RATE // Personal Exchange Rate for that player (PXR)
(s64)EVC_BALANCE_CLEARED // Total last Cleared amount for stat EVC_BALANCE.
<!-- Daily Transactions Days will be measured from midnight to midnight EST -->
(x64)VC_DAILY_TIMESTAMP // Virtual cash daily posix time - Control daily amount resets.
(long)PVC_DAILY_ADDITIONS // Amount of PVC added (through purchase or PVC gift receipt) by a player in 1 day.
(long)PVC_DAILY_TRANSFERS // Amount of PVC transferred out by a player to other players in 1 day.

(int)PARACHUTE_CURRENT_SMOKE // Add MP0_ or MP1_ // Is weapon in inventory

(int)SING_IN_SHOWER // Add MP0_ or MP1_ // MP Char 0 - weapon unlock bitset 2

(date)REW_WEEKLY_BANK_AWARD // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script

(int)MAINTAIN_XP_WITH_LEADB // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1

(int)MPPLY_DM_CHEAT_TALLY // Number of times cheated
(int)MPPLY_RACE_CHEAT_TALLY // Number of times cheated
(int)MPPLY_MC_CHEAT_TALLY // Number of times cheated
(int)MPPLY_MGAME_CHEAT_TALLY // Number of times cheated

<!-- Multiplayer Players Bookmarked Content -->
(int)MPPLY_BOOKMARKED_CONTENT // Number of times cheated

(u32)NUM_CHECKS_DONE // Number of sessions with some check done
(u32)NUM_CHECKS_MISM_CURR // Number of times mismatched per session
(float)NUM_CHECKS_MISM_PERC // Percentage of fails

(int)PERSONAL_VEHICLE_ACCESS // Add MP0_ or MP1_ // Number of turbo starts at start of race
(int)FM_CHAT_OPTION // Add MP0_ or MP1_ // Number of turbo starts at start of race
   
(u32)NUM_CHECKS_ISSUED_CURR // Number of checks issued in this time window
(u32)NUM_CHECKS_ISSUED // Number of checks issued in previous time window
(u32)NUM_CHECKS_RCVD_CURR // Number of checks received in this time window
(u32)NUM_CHECKS_RCVD // Number of checks received in previous time window

(float)MPPLY_DROPOUTRATE // CHEAT TRACKING No of death matchs ended

(int)CHAR_CARMODWHEELS_VIEWED_0 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Viewed Bitset 0
(int)CHAR_CARMODWHEELS_VIEWED_1 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Viewed Bitset 1
(int)CHAR_CARMODWHEELS_VIEWED_2 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Viewed Bitset 2
(int)CHAR_CARMODWHEELS_VIEWED_3 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Viewed Bitset 3
(int)CHAR_CARMODWHEELS_VIEWED_4 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Viewed Bitset 4
(int)CHAR_CARMODWHEELS_VIEWED_5 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Viewed Bitset 5
(int)CHAR_CARMODWHEELS_VIEWED_6 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Viewed Bitset 6
(int)CHAR_CARMODWHEELS_VIEWED_7 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Viewed Bitset 7

(long)VC_DAILY_TRANSFERS // Amount of VC (non-typed) transferred out by a player to other players in 1 day.
(long)CLIENT_PVC_BALANCE // CLIENT version of Banked Cash that the player has PAID for with real money.
(long)CLIENT_EVC_BALANCE // CLIENT version of Banked Cash that the player has EARN, either in game or via other mechanism.
(double)CLIENT_PERSONAL_EXCHANGE_RATE // CLIENT VERSION OF Personal Exchange Rate for that player (PXR)

(int)MPPLY_CREW_CHALLENGE_ATTEMPTS // MPPLAYER - Total number of challenges attempted 

(int)MONEY_SPENT_ROCKSTAR_AWARD // Add MP0_ or MP1_ // Money Spent in weapons and armor
(int)MONEY_EARN_BANK_INTEREST // Add MP0_ or MP1_ // Money Earn for bank interest

(s64)MONEY_EARN_DAILY_OBJECTIVE // Add MP0_ or MP1_ // Money Earn for bank interest

(int)CHAR_CARMODWHCOL_VIEWED_0 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Color Viewed Bitset 0
(int)CHAR_CARMODWHCOL_VIEWED_1 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Color Viewed Bitset 1

(int)GRNLAUNCH_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)MPPLY_TOTALPLAYTIME_GOODBOY // Number of times cheated

(int)FM_NON_MS_HELP_TEXT6 // Add MP0_ or MP1_ // Tracks if NMH has been displayed

(int)CHAR_CARPAINTPRIME_VIEW_0 // Add MP0_ or MP1_ // MP Char 0 - Primary Car Paints Viewed Bitset 0
(int)CHAR_CARPAINTPRIME_VIEW_1 // Add MP0_ or MP1_ // MP Char 0 - Primary Car Paints Viewed Bitset 1
(int)CHAR_CARPAINTPRIME_VIEW_2 // Add MP0_ or MP1_ // MP Char 0 - Primary Car Paints Viewed Bitset 2
(int)CHAR_CARPAINTPRIME_VIEW_3 // Add MP0_ or MP1_ // MP Char 0 - Primary Car Paints Viewed Bitset 3
(int)CHAR_CARPAINTPRIME_VIEW_4 // Add MP0_ or MP1_ // MP Char 0 - Primary Car Paints Viewed Bitset 4
(int)CHAR_CARPAINTPRIME_VIEW_5 // Add MP0_ or MP1_ // MP Char 0 - Primary Car Paints Viewed Bitset 5
(int)CHAR_CARPAINTPRIME_VIEW_6 // Add MP0_ or MP1_ // MP Char 0 - Primary Car Paints Viewed Bitset 6
(int)CHAR_CARPAINTPRIME_VIEW_7 // Add MP0_ or MP1_ // MP Char 0 - Primary Car Paints Viewed Bitset 7

(int)CHAR_CARPAINTSEC_VIEW_0 // Add MP0_ or MP1_ // MP Char 0 - Secondary Car Paints Viewed Bitset 0
(int)CHAR_CARPAINTSEC_VIEW_1 // Add MP0_ or MP1_ // MP Char 0 - Secondary Car Paints Viewed Bitset 1
(int)CHAR_CARPAINTSEC_VIEW_2 // Add MP0_ or MP1_ // MP Char 0 - Secondary Car Paints Viewed Bitset 2
(int)CHAR_CARPAINTSEC_VIEW_3 // Add MP0_ or MP1_ // MP Char 0 - Secondary Car Paints Viewed Bitset 3
(int)CHAR_CARPAINTSEC_VIEW_4 // Add MP0_ or MP1_ // MP Char 0 - Secondary Car Paints Viewed Bitset 4
(int)CHAR_CARPAINTSEC_VIEW_5 // Add MP0_ or MP1_ // MP Char 0 - Secondary Car Paints Viewed Bitset 5
(int)CHAR_CARPAINTSEC_VIEW_6 // Add MP0_ or MP1_ // MP Char 0 - Secondary Car Paints Viewed Bitset 6
(int)CHAR_CARPAINTSEC_VIEW_7 // Add MP0_ or MP1_ // MP Char 0 - Secondary Car Paints Viewed Bitset 7

(u64)LEADERBOARD_PLAYING_TIME // Total Playing time in multiplayer.

(u64)TOTAL_TIME_UNDERWATER // Add MP0_ or MP1_ // Total time underwater.

(s64)SERVER_LAST_UPDATE // Time we last updated server cash values.
(s64)CLIENT_LAST_UPDATE // Time we last saved client cash values.
(s64)PROFILE_STATS_LAST_FLUSH // Time we last saved client cash values.


(int)PROPERTY_HOUSE_NEW // Add MP0_ or MP1_ // Stores what house player has purchased
(int)PROPERTY_HOUSE_NEW_TIME // Add MP0_ or MP1_ // Stores time a house player has purchased
(int)PROPERTY_HOUSE_NEW_VALUE // Add MP0_ or MP1_ // Stores value of a house player has purchased
(int)PROPERTY_HOUSE_TIME // Add MP0_ or MP1_ // Stores time a house player has purchased

(int)TATTOO_FM_CURRENT_6 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
(int)TATTOO_FM_CURRENT_7 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
(int)TATTOO_FM_CURRENT_8 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
(int)TATTOO_FM_CURRENT_9 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
(int)TATTOO_FM_VIEWED_5 // Add MP0_ or MP1_ // MP Char 0 - Viewed Tattoos 4
(int)TATTOO_FM_VIEWED_6 // Add MP0_ or MP1_ // MP Char 0 - Viewed Tattoos 4
(int)TATTOO_FM_VIEWED_7 // Add MP0_ or MP1_ // MP Char 0 - Viewed Tattoos 4
(int)TATTOO_FM_VIEWED_8 // Add MP0_ or MP1_ // MP Char 0 - Viewed Tattoos 4

(int)CREW_EMBLEMS_PURCHASED // Add MP0_ or MP1_ // MP Char 0 - Viewed Purchased

<!-- FM Timer for the last sold vehicle -->
(int)TIMER_LAST_SOLD_VEHICLE // Add MP0_ or MP1_ //  Timer for last sold vehicle

<!-- GIFT PLAYERS CASH -->
(short)CASH_GIFT // TO GIVE PLAYER THE CASH GIFT THEY LOST
(short)CASH_GIFT_RECEIVED // TO GIVE PLAYER THE CASH GIFT THEY LOST
(int)CASH_GIFT_LABEL // LABEL TO DISPLAY TO GIVE PLAYER THE CASH GIFT THEY LOST
(u64)CASH_GIFT_LABEL_1 // LABEL TO DISPLAY TO GIVE PLAYER THE CASH GIFT THEY LOST
(u64)CASH_GIFT_LABEL_2 // LABEL TO DISPLAY TO GIVE PLAYER THE CASH GIFT THEY LOST

(s64)CASH_GIFT_MIN_BALANCE // Minimum balance left after CASH_GIFT
(bool)CASH_GIFT_LEAVE_REMAINDER // Leave Reminder in cash gift
(s64)CASH_EVC_CORRECTION // Fix Economy
(s64)CASH_PVC_CORRECTION // Fix Economy
(bool)CASH_FIX_PVC_WB_CORRECTION // Fix PVC
(bool)CASH_FIX_EVC_CORRECTION // Fix EVC
(double)CASH_PXR_CORRECTION // Fix PXR
(double)CASH_USDE_CORRECTION // Fix USDE

<!-- GIFT PLAYERS RP -->
(int)RP_GIFT // TO GIVE PLAYER THE RP GIFT THEY LOST
(int)RP_GIFT_RECEIVED // TO GIVE PLAYER THE RP GIFT THEY LOST

<!-- POSIX TIMESTAMP FOR CHARACTER CRETION CLOUD / PROFILE STATS -->
(int)CLOUD_TIME_CHAR_CREATED // Add MP0_ or MP1_ // Posix Timestamp of character creation
(int)PS_TIME_CHAR_CREATED // Add MP0_ or MP1_ // Posix Timestamp of character creation

(bool)PEGASUS_VEHICLE_COLLECTED // Add MP0_ or MP1_ // to signal that the player needs to call again to get their pegasus vehicle back
(bool)NEED_TO_UPDATE_HEADSHOT // Add MP0_ or MP1_ // MP player 0 - COP  kill death percentage ratio.

(int)UNARMED_PED_HITS // Add MP0_ or MP1_ // Number of times we hit a ped.

<!-- CASH PACKS CONSUMED PENDING -->
(s64)CASHPACK_AMOUNT_PENDING // Amount of cash pending to be consumed by the player.
(double)CASHPACK_USDE_PENDING // Amount of USDE cash pending to be consumed by the player.
(int)CLEAN_LAPS // Add MP0_ or MP1_ // MP Char 0 - Number of clean laps
(int)CTF_HELP_COUNTER // Add MP0_ or MP1_ // MP Char 0 - Number of clean laps
(int)TATTOO_FM_UNLOCKS_5 // Add MP0_ or MP1_ // MP Char 0 - Unlocked Tattoos 5
(u32)TOTAL_TIME_CINEMA // Add MP0_ or MP1_ // MP Char 0 - Time spent in the cinema
(int)NO_TIMES_CINEMA // Add MP0_ or MP1_ // MP Char 0 - Time spent in the cinema

(u32)FAVORITE_WEAPON_HELDTIME // Add MP0_ or MP1_ // Time held the favotire weapon.
(u32)FAVORITE_WEAPON // Add MP0_ or MP1_ // The favorite weapon hash.

(bool)TU_CHANGEHEADS1 // Add MP0_ or MP1_ // Number of times cheated
(int)MPPLY_PLAYER_MENTAL_STATE // Track players mental state

<!-- VEHICLE STATS -->
<!-- Packed -->
(packed)TUPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)TUPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 5. Takes up to 8 integers
(packed)TUPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 6. Takes up to 8 integers
(packed)TUPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 7. Takes up to 8 integers
(packed)TUPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 8. Takes up to 8 integers
(packed)TUPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 9. Takes up to 8 integers
(packed)TUPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 10. Takes up to 8 integers
(packed)TUPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 11. Takes up to 8 integers
(packed)TUPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 12. Takes up to 8 integers
(packed)TUPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 13. Takes up to 8 integers
(packed)TUPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 14. Takes up to 8 integers
(packed)TUPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 15. Takes up to 8 integers
(packed)TUPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 16. Takes up to 8 integers
(packed)TUPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 17. Takes up to 8 integers
(packed)TUPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 18. Takes up to 8 integers
(packed)TUPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 19. Takes up to 8 integers
(packed)TUPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 20. Takes up to 8 integers
(packed)TUPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 21. Takes up to 8 integers
(packed)TUPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 22. Takes up to 8 integers
(packed)TUPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 23. Takes up to 8 integers
(packed)TUPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 24. Takes up to 8 integers
(packed)TUPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 25. Takes up to 8 integers
(packed)TUPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 26. Takes up to 8 integers
(packed)TUPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 27. Takes up to 8 integers
(packed)TUPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 28. Takes up to 8 integers
(packed)TUPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 29. Takes up to 8 integers
(packed)TUPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 30. Takes up to 8 integers
(packed)TUPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 31. Takes up to 8 integers
(packed)TUPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)TUPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 33. Takes up to 8 integers
(packed)TUPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 34. Takes up to 8 integers
(packed)TUPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 35. Takes up to 8 integers
(packed)TUPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 36. Takes up to 8 integers
(packed)TUPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 37. Takes up to 8 integers
(packed)TUPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 38. Takes up to 8 integers
(packed)TUPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 39. Takes up to 8 integers
(packed)TUPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 40. Takes up to 8 integers
(packed)TUPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 41. Takes up to 8 integers
(packed)TUPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 42. Takes up to 8 integers
(packed)TUPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 43. Takes up to 8 integers
(packed)TUPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 44. Takes up to 8 integers
(packed)TUPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 45. Takes up to 8 integers
(packed)TUPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 46. Takes up to 8 integers
(packed)TUPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 47. Takes up to 8 integers
(packed)TUPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 48. Takes up to 8 integers
(packed)TUPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 49. Takes up to 8 integers
(packed)TUPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 50. Takes up to 8 integers
(packed)TUPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 51. Takes up to 8 integers
(packed)TUPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 52. Takes up to 8 integers
(packed)TUPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 53. Takes up to 8 integers
(packed)TUPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 54. Takes up to 8 integers
(packed)TUPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 55. Takes up to 8 integers
(packed)TUPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 56. Takes up to 8 integers
(packed)TUPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 57. Takes up to 8 integers
(packed)TUPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 58. Takes up to 8 integers
(packed)TUPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 59. Takes up to 8 integers
(packed)TUPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 60. Takes up to 8 integers
(packed)TUPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 61. Takes up to 8 integers
(packed)TUPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 62. Takes up to 8 integers
(packed)TUPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 63. Takes up to 8 integers
(packed)TUPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 64. Takes up to 8 integers
(packed)TUPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 65. Takes up to 8 integers
(packed)TUPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 66. Takes up to 8 integers
(packed)TUPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 67. Takes up to 8 integers
(packed)TUPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 68. Takes up to 8 integers
(packed)TUPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 69. Takes up to 8 integers
(packed)TUPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 70. Takes up to 8 integers
(packed)TUPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 71. Takes up to 8 integers
(packed)TUPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 72. Takes up to 8 integers
(packed)TUPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 73. Takes up to 8 integers
(packed)TUPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 74. Takes up to 8 integers
(packed)TUPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 75. Takes up to 8 integers
(packed)TUPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 76. Takes up to 8 integers
(packed)TUPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 77. Takes up to 8 integers
(packed)TUPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 78. Takes up to 8 integers
(packed)TUPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 79. Takes up to 8 integers
(packed)TUPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 80. Takes up to 8 integers
(packed)TUPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 81. Takes up to 8 integers
(packed)TUPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 82. Takes up to 8 integers
(packed)TUPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 83. Takes up to 8 integers
(packed)TUPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 84. Takes up to 8 integers
(packed)TUPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 85. Takes up to 8 integers
(packed)TUPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 86. Takes up to 8 integers
(packed)TUPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 87. Takes up to 8 integers
(packed)TUPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 88. Takes up to 8 integers
(packed)TUPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 89. Takes up to 8 integers
(packed)TUPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 90. Takes up to 8 integers
(packed)TUPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 91. Takes up to 8 integers
(packed)TUPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 92. Takes up to 8 integers
(packed)TUPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 93. Takes up to 8 integers
(packed)TUPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 94. Takes up to 8 integers
(packed)TUPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 95. Takes up to 8 integers
(packed)TUPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 96. Takes up to 8 integers
(packed)TUPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 97. Takes up to 8 integers
(packed)TUPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 98. Takes up to 8 integers
(packed)TUPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 99. Takes up to 8 integers
(packed)TUPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 100. Takes up to 8 integers
(packed)TUPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 101. Takes up to 8 integers
(packed)TUPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 102. Takes up to 8 integers
(packed)TUPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 103. Takes up to 8 integers
(packed)TUPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 104. Takes up to 8 integers
(packed)TUPSTAT_INT105 // Add MP0_ or MP1_ // Character Stat with Packed integers index 105. Takes up to 8 integers
(packed)TUPSTAT_INT106 // Add MP0_ or MP1_ // Character Stat with Packed integers index 106. Takes up to 8 integers
(packed)TUPSTAT_INT107 // Add MP0_ or MP1_ // Character Stat with Packed integers index 107. Takes up to 8 integers
(packed)TUPSTAT_INT108 // Add MP0_ or MP1_ // Character Stat with Packed integers index 108. Takes up to 8 integers
(packed)TUPSTAT_INT109 // Add MP0_ or MP1_ // Character Stat with Packed integers index 109. Takes up to 8 integers
(packed)TUPSTAT_INT110 // Add MP0_ or MP1_ // Character Stat with Packed integers index 110. Takes up to 8 integers
(packed)TUPSTAT_INT111 // Add MP0_ or MP1_ // Character Stat with Packed integers index 111. Takes up to 8 integers
(packed)TUPSTAT_INT112 // Add MP0_ or MP1_ // Character Stat with Packed integers index 112. Takes up to 8 integers
(packed)TUPSTAT_INT113 // Add MP0_ or MP1_ // Character Stat with Packed integers index 113. Takes up to 8 integers
(packed)TUPSTAT_INT114 // Add MP0_ or MP1_ // Character Stat with Packed integers index 114. Takes up to 8 integers
(packed)TUPSTAT_INT115 // Add MP0_ or MP1_ // Character Stat with Packed integers index 115. Takes up to 8 integers
(packed)TUPSTAT_INT116 // Add MP0_ or MP1_ // Character Stat with Packed integers index 116. Takes up to 8 integers
(packed)TUPSTAT_INT117 // Add MP0_ or MP1_ // Character Stat with Packed integers index 117. Takes up to 8 integers
(packed)TUPSTAT_INT118 // Add MP0_ or MP1_ // Character Stat with Packed integers index 118. Takes up to 8 integers
(packed)TUPSTAT_INT119 // Add MP0_ or MP1_ // Character Stat with Packed integers index 119. Takes up to 8 integers
(packed)TUPSTAT_INT120 // Add MP0_ or MP1_ // Character Stat with Packed integers index 120. Takes up to 8 integers
(packed)TUPSTAT_INT121 // Add MP0_ or MP1_ // Character Stat with Packed integers index 121. Takes up to 8 integers
(bool)XMAS_NORM_CLOTHES_SAVED // Add MP0_ or MP1_ // CLOTHES saved before xmas

(int)XMAS_NORM_CLOTHES_TOP // Add MP0_ or MP1_ // CLOTHES saved before xmas
(int)XMAS_NORM_CLOTHES_LOWERS // Add MP0_ or MP1_ // CLOTHES saved before xmas
(int)XMAS_NORM_CLOTHES_SPECIALS // Add MP0_ or MP1_ // CLOTHES saved before xmas


(int)MPSV_VEHICLE_TIMESTAMP // Add MP0_ or MP1_ // Vehicle stats timestamp when last modified
<!-- Vehicle_0-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_0 // Add MP0_ or MP1_ // Vehicle_0 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_0 // Add MP0_ or MP1_ // Vehicle_0 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_0 // Add MP0_ or MP1_ // Vehicle_0 premium paid by destroyer of vehicle
(int)MPSV_MODEL_0 // Add MP0_ or MP1_ // Vehicle_0 model enum of vehicle
(int)MPSV_FLAGS_0 // Add MP0_ or MP1_ // Vehicle_0 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_0 // Add MP0_ or MP1_ // Vehicle_0 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_0 // Add MP0_ or MP1_ // Vehicle_0 licence plate part 0
<!-- Vehicle_1-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_1 // Add MP0_ or MP1_ // Vehicle_1 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_1 // Add MP0_ or MP1_ // Vehicle_1 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_1 // Add MP0_ or MP1_ // Vehicle_1 premium paid by destroyer of vehicle
(int)MPSV_MODEL_1 // Add MP0_ or MP1_ // Vehicle_1 model enum of vehicle
(int)MPSV_FLAGS_1 // Add MP0_ or MP1_ // Vehicle_1 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_1 // Add MP0_ or MP1_ // Vehicle_1 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_1 // Add MP0_ or MP1_ // Vehicle_1 licence plate part 0
<!-- Vehicle_2-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_2 // Add MP0_ or MP1_ // Vehicle_2 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_2 // Add MP0_ or MP1_ // Vehicle_2 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_2 // Add MP0_ or MP1_ // Vehicle_2 premium paid by destroyer of vehicle
(int)MPSV_MODEL_2 // Add MP0_ or MP1_ // Vehicle_2 model enum of vehicle
(int)MPSV_FLAGS_2 // Add MP0_ or MP1_ // Vehicle_2 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_2 // Add MP0_ or MP1_ // Vehicle_2 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_2 // Add MP0_ or MP1_ // Vehicle_2 licence plate part 0
<!-- Vehicle_3-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_3 // Add MP0_ or MP1_ // Vehicle_3 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_3 // Add MP0_ or MP1_ // Vehicle_3 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_3 // Add MP0_ or MP1_ // Vehicle_3 premium paid by destroyer of vehicle
(int)MPSV_MODEL_3 // Add MP0_ or MP1_ // Vehicle_3 model enum of vehicle
(int)MPSV_FLAGS_3 // Add MP0_ or MP1_ // Vehicle_3 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_3 // Add MP0_ or MP1_ // Vehicle_3 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_3 // Add MP0_ or MP1_ // Vehicle_3 licence plate part 0
<!-- Vehicle_4-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_4 // Add MP0_ or MP1_ // Vehicle_4 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_4 // Add MP0_ or MP1_ // Vehicle_4 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_4 // Add MP0_ or MP1_ // Vehicle_4 premium paid by destroyer of vehicle
(int)MPSV_MODEL_4 // Add MP0_ or MP1_ // Vehicle_4 model enum of vehicle
(int)MPSV_FLAGS_4 // Add MP0_ or MP1_ // Vehicle_4 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_4 // Add MP0_ or MP1_ // Vehicle_4 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_4 // Add MP0_ or MP1_ // Vehicle_4 licence plate part 0
<!-- Vehicle_5-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_5 // Add MP0_ or MP1_ // Vehicle_5 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_5 // Add MP0_ or MP1_ // Vehicle_5 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_5 // Add MP0_ or MP1_ // Vehicle_5 premium paid by destroyer of vehicle
(int)MPSV_MODEL_5 // Add MP0_ or MP1_ // Vehicle_5 model enum of vehicle
(int)MPSV_FLAGS_5 // Add MP0_ or MP1_ // Vehicle_5 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_5 // Add MP0_ or MP1_ // Vehicle_5 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_5 // Add MP0_ or MP1_ // Vehicle_5 licence plate part 0
<!-- Vehicle_6-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_6 // Add MP0_ or MP1_ // Vehicle_6 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_6 // Add MP0_ or MP1_ // Vehicle_6 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_6 // Add MP0_ or MP1_ // Vehicle_6 premium paid by destroyer of vehicle
(int)MPSV_MODEL_6 // Add MP0_ or MP1_ // Vehicle_6 model enum of vehicle
(int)MPSV_FLAGS_6 // Add MP0_ or MP1_ // Vehicle_6 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_6 // Add MP0_ or MP1_ // Vehicle_6 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_6 // Add MP0_ or MP1_ // Vehicle_6 licence plate part 0
<!-- Vehicle_7-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_7 // Add MP0_ or MP1_ // Vehicle_7 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_7 // Add MP0_ or MP1_ // Vehicle_7 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_7 // Add MP0_ or MP1_ // Vehicle_7 premium paid by destroyer of vehicle
(int)MPSV_MODEL_7 // Add MP0_ or MP1_ // Vehicle_7 model enum of vehicle
(int)MPSV_FLAGS_7 // Add MP0_ or MP1_ // Vehicle_7 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_7 // Add MP0_ or MP1_ // Vehicle_7 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_7 // Add MP0_ or MP1_ // Vehicle_7 licence plate part 0
<!-- Vehicle_8-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_8 // Add MP0_ or MP1_ // Vehicle_8 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_8 // Add MP0_ or MP1_ // Vehicle_8 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_8 // Add MP0_ or MP1_ // Vehicle_8 premium paid by destroyer of vehicle
(int)MPSV_MODEL_8 // Add MP0_ or MP1_ // Vehicle_8 model enum of vehicle
(int)MPSV_FLAGS_8 // Add MP0_ or MP1_ // Vehicle_8 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_8 // Add MP0_ or MP1_ // Vehicle_8 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_8 // Add MP0_ or MP1_ // Vehicle_8 licence plate part 0
<!-- Vehicle_9-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_9 // Add MP0_ or MP1_ // Vehicle_9 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_9 // Add MP0_ or MP1_ // Vehicle_9 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_9 // Add MP0_ or MP1_ // Vehicle_9 premium paid by destroyer of vehicle
(int)MPSV_MODEL_9 // Add MP0_ or MP1_ // Vehicle_9 model enum of vehicle
(int)MPSV_FLAGS_9 // Add MP0_ or MP1_ // Vehicle_9 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_9 // Add MP0_ or MP1_ // Vehicle_9 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_9 // Add MP0_ or MP1_ // Vehicle_9 licence plate part 0
<!-- Vehicle_10 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_10 // Add MP0_ or MP1_ // Vehicle_10 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_10 // Add MP0_ or MP1_ // Vehicle_10 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_10 // Add MP0_ or MP1_ // Vehicle_10 premium paid by destroyer of vehicle
(int)MPSV_MODEL_10 // Add MP0_ or MP1_ // Vehicle_10 model enum of vehicle
(int)MPSV_FLAGS_10 // Add MP0_ or MP1_ // Vehicle_10 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_10 // Add MP0_ or MP1_ // Vehicle_10 cost of vehicle when purchased
<!-- Vehicle_11 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_11 // Add MP0_ or MP1_ // Vehicle_11 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_11 // Add MP0_ or MP1_ // Vehicle_11 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_11 // Add MP0_ or MP1_ // Vehicle_11 premium paid by destroyer of vehicle
(int)MPSV_MODEL_11 // Add MP0_ or MP1_ // Vehicle_11 model enum of vehicle
(int)MPSV_FLAGS_11 // Add MP0_ or MP1_ // Vehicle_11 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_11 // Add MP0_ or MP1_ // Vehicle_11 cost of vehicle when purchased
<!-- Vehicle_12 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_12 // Add MP0_ or MP1_ // Vehicle_12 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_12 // Add MP0_ or MP1_ // Vehicle_12 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_12 // Add MP0_ or MP1_ // Vehicle_12 premium paid by destroyer of vehicle
(int)MPSV_MODEL_12 // Add MP0_ or MP1_ // Vehicle_12 model enum of vehicle
(int)MPSV_FLAGS_12 // Add MP0_ or MP1_ // Vehicle_12 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_12 // Add MP0_ or MP1_ // Vehicle_12 cost of vehicle when purchased
<!-- Vehicle_13-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_13 // Add MP0_ or MP1_ // Vehicle_13 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_13 // Add MP0_ or MP1_ // Vehicle_13 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_13 // Add MP0_ or MP1_ // Vehicle_13 premium paid by destroyer of vehicle
(int)MPSV_MODEL_13 // Add MP0_ or MP1_ // Vehicle_13 model enum of vehicle
(int)MPSV_FLAGS_13 // Add MP0_ or MP1_ // Vehicle_13 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_13 // Add MP0_ or MP1_ // Vehicle_13 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_13 // Add MP0_ or MP1_ // Vehicle_13 licence plate part 0

<!-- BAV STAT -->
(int)MPBAV_TIME // Add MP0_ or MP1_ // Big ass vehicle time stamp
(int)MPBAV_ELEMENT_0 // Add MP0_ or MP1_ // Big ass vehicle array element 0
(int)MPBAV_ELEMENT_1 // Add MP0_ or MP1_ // Big ass vehicle array element 1
(int)MPBAV_ELEMENT_2 // Add MP0_ or MP1_ // Big ass vehicle array element 2
(int)MPBAV_ELEMENT_3 // Add MP0_ or MP1_ // Big ass vehicle array element 3

<!-- Start Beach Bum Weapons -->
(int)BOTTLE_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)BOTTLE_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)BOTTLE_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)BOTTLE_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)BOTTLE_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)BOTTLE_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)BOTTLE_DB_HELDTIME // Add MP0_ or MP1_ // Time char0 held driveby weapon (MS)
(int)BOTTLE_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)BOTTLE_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)BOTTLE_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)BOTTLE_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)BOTTLE_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory

(int)SNSPISTOL_KILLS // Add MP0_ or MP1_ // Number of times mp char 0 killed with weapon
(int)SNSPISTOL_DEATHS // Add MP0_ or MP1_ // Number of times mp char 0 killed by weapon
(int)SNSPISTOL_SHOTS // Add MP0_ or MP1_ // Number of times mp char 0 fired weapon
(int)SNSPISTOL_HITS // Add MP0_ or MP1_ // Number of times mp char 0 hit with weapon
(int)SNSPISTOL_HEADSHOTS // Add MP0_ or MP1_ // Number of times mp char 0 killed by headshot with weapon
(u32)SNSPISTOL_HELDTIME // Add MP0_ or MP1_ // Time mp char 0 held weapon (MS)
(u32)SNSPISTOL_DB_HELDTIME // Add MP0_ or MP1_ // Time char0 held driveby weapon (MS)
(int)SNSPISTOL_FM_AMMO_BOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SNSPISTOL_FM_AMMO_CURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SNSPISTOL_ENEMY_KILLS // Add MP0_ or MP1_ // Number of enemies killed with weapon (S)
(bool)SNSPISTOL_IN_POSSESSION // Add MP0_ or MP1_ // Is weapon in inventory
(bool)SNSPISTOL_AQUIRED_AS_GIFT // Add MP0_ or MP1_ // Is weapon in inventory
<!-- End Beach Bum Weapons -->
(int)XMAS_NORM_CLOTHES_FEET // Add MP0_ or MP1_ // CLOTHES saved before xmas
(bool)NO_TUT_SPAWN // Add MP0_ or MP1_ // Player has spawned in the game having chosen to not play tutorials again.
(int)CHAR_FM_WEAP_ADDON_5_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 5
(int)WEAP_FM_ADDON_PURCH5 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_5_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 5
(int)CHAR_FM_WEAP_ADDON_5_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 5
(date)MPPLY_BADSPORT_START // Number of times player has been muted
(date)MPPLY_BADSPORT_END // Number of times player has been muted

(int)MPPLY_TIMES_ENTERED_TEMP // Number of times entered the game as a temporary character
(int)AUTO_EQUIP_ARMOUR // Add MP0_ or MP1_ // players auto-equip status for their armour
(int)AUTO_AIM_AGAINST_FRIENDS // Add MP0_ or MP1_ // storing whether the player has auto-aim enabled against Friends.

(bool)SAVED_VEH_STATS_VERIFIED // Add MP0_ or MP1_ // Check to see if saved vehicle stats have been verified

<!-- GIFT PLAYERS CASH 64 bits -->
(s64)CASH_GIFT_NEW // TO GIVE PLAYER THE CASH GIFT THEY LOST
(u64)CASH_GIFT_CREDITED // TO GIVE PLAYER THE CASH GIFT THEY LOST
(u64)CASH_GIFT_DEBITED // TO GIVE PLAYER THE CASH GIFT THEY LOST

<!-- Posix Times for Start/End Bad Sport -->
(u64)SCADMIN_BADSPORT_START // SC Admin Posix start time for bad sport.
(u64)SCADMIN_BADSPORT_END // SC Admin Posix end time for bad sport.

<!--- New way of dealing with clearing the EVC from player being a cheater -->
(bool)SCADMIN_IS_CHEATER // SC Admin Flag someone as a cheater.
(u64)MPPLY_CHEATER_CLEAR_TIME // Last posix time we cleared someone EVC.

(int)TATTOO_FM_UNLOCKS_6 // Add MP0_ or MP1_ // MP Char 0 - Unlocked Tattoos 4

(int)TSHIRT_DECAL_HASH // Add MP0_ or MP1_ // Stores the name hash of the current t-shirt decal

(int)SHOW_PROPERTY_BLIP_ON_JOB // Add MP0_ or MP1_ // Add a stat for Showing the Property Blip on a Job

(int)DLC_APPAREL_ACQUIRED_0 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_1 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_2 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_3 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_4 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_5 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_0 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_1 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_2 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_3 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_4 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_5 // Add MP0_ or MP1_ // Shop ped apparel save data

(u64)MPPLY_TOTAL_TIME_LOAD_SCREEN // MP Char 0 - PERSONAL  -Total time spent in Loading screen
(u64)MPPLY_TOTAL_TIME_IN_LOBBY // MP Char 0 - PERSONAL  -Total time spent in Lobby

(int)DLC_APPAREL_ACQUIRED_6 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_7 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_8 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_9 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_10 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_11 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_12 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_6 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_7 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_8 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_9 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_10 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_11 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_12 // Add MP0_ or MP1_ // Shop ped apparel save data


(int)DLC_APPAREL_ACQUIRED_13 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_14 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_13 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_14 // Add MP0_ or MP1_ // Shop ped apparel save data

(bool)MPPLY_CAN_SPECTATE // Shop ped apparel save data

(u64)TOTAL_STARTMENU_TIME // Total Time spent in Start Menu.
(u64)TOTAL_SHOP_TIME // Total Time spent shopping.

<!--- BUSINESS 2 STARTS HERE -->

(packed)TUPSTAT_INT122 // Add MP0_ or MP1_ // Character Stat with Packed integers index 122. Takes up to 8 integers
(packed)TUPSTAT_INT123 // Add MP0_ or MP1_ // Character Stat with Packed integers index 123. Takes up to 8 integers
(packed)TUPSTAT_INT124 // Add MP0_ or MP1_ // Character Stat with Packed integers index 124. Takes up to 8 integers
(packed)TUPSTAT_INT125 // Add MP0_ or MP1_ // Character Stat with Packed integers index 125. Takes up to 8 integers
(packed)TUPSTAT_INT126 // Add MP0_ or MP1_ // Character Stat with Packed integers index 126. Takes up to 8 integers
(packed)TUPSTAT_INT127 // Add MP0_ or MP1_ // Character Stat with Packed integers index 127. Takes up to 8 integers

<!-- Vehicle_14-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_14 // Add MP0_ or MP1_ // Vehicle_14 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_14 // Add MP0_ or MP1_ // Vehicle_14 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_14 // Add MP0_ or MP1_ // Vehicle_14 premium paid by destroyer of vehicle
(int)MPSV_MODEL_14 // Add MP0_ or MP1_ // Vehicle_14 model enum of vehicle
(int)MPSV_FLAGS_14 // Add MP0_ or MP1_ // Vehicle_14 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_14 // Add MP0_ or MP1_ // Vehicle_14 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_14 // Add MP0_ or MP1_ // Vehicle_14 licence plate part 0
<!-- Vehicle_15-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_15 // Add MP0_ or MP1_ // Vehicle_15 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_15 // Add MP0_ or MP1_ // Vehicle_15 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_15 // Add MP0_ or MP1_ // Vehicle_15 premium paid by destroyer of vehicle
(int)MPSV_MODEL_15 // Add MP0_ or MP1_ // Vehicle_15 model enum of vehicle
(int)MPSV_FLAGS_15 // Add MP0_ or MP1_ // Vehicle_15 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_15 // Add MP0_ or MP1_ // Vehicle_15 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_15 // Add MP0_ or MP1_ // Vehicle_15 licence plate part 0
<!-- Vehicle_16-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_16 // Add MP0_ or MP1_ // Vehicle_16 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_16 // Add MP0_ or MP1_ // Vehicle_16 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_16 // Add MP0_ or MP1_ // Vehicle_16 premium paid by destroyer of vehicle
(int)MPSV_MODEL_16 // Add MP0_ or MP1_ // Vehicle_16 model enum of vehicle
(int)MPSV_FLAGS_16 // Add MP0_ or MP1_ // Vehicle_16 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_16 // Add MP0_ or MP1_ // Vehicle_16 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_16 // Add MP0_ or MP1_ // Vehicle_16 licence plate part 0
<!-- Vehicle_17-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_17 // Add MP0_ or MP1_ // Vehicle_17 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_17 // Add MP0_ or MP1_ // Vehicle_17 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_17 // Add MP0_ or MP1_ // Vehicle_17 premium paid by destroyer of vehicle
(int)MPSV_MODEL_17 // Add MP0_ or MP1_ // Vehicle_17 model enum of vehicle
(int)MPSV_FLAGS_17 // Add MP0_ or MP1_ // Vehicle_17 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_17 // Add MP0_ or MP1_ // Vehicle_17 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_17 // Add MP0_ or MP1_ // Vehicle_17 licence plate part 0
<!-- Vehicle_18-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_18 // Add MP0_ or MP1_ // Vehicle_18 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_18 // Add MP0_ or MP1_ // Vehicle_18 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_18 // Add MP0_ or MP1_ // Vehicle_18 premium paid by destroyer of vehicle
(int)MPSV_MODEL_18 // Add MP0_ or MP1_ // Vehicle_18 model enum of vehicle
(int)MPSV_FLAGS_18 // Add MP0_ or MP1_ // Vehicle_18 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_18 // Add MP0_ or MP1_ // Vehicle_18 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_18 // Add MP0_ or MP1_ // Vehicle_18 licence plate part 0
<!-- Vehicle_19-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_19 // Add MP0_ or MP1_ // Vehicle_19 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_19 // Add MP0_ or MP1_ // Vehicle_19 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_19 // Add MP0_ or MP1_ // Vehicle_19 premium paid by destroyer of vehicle
(int)MPSV_MODEL_19 // Add MP0_ or MP1_ // Vehicle_19 model enum of vehicle
(int)MPSV_FLAGS_19 // Add MP0_ or MP1_ // Vehicle_19 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_19 // Add MP0_ or MP1_ // Vehicle_19 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_19 // Add MP0_ or MP1_ // Vehicle_19 licence plate part 0
<!-- Vehicle_20-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_20 // Add MP0_ or MP1_ // Vehicle_20 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_20 // Add MP0_ or MP1_ // Vehicle_20 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_20 // Add MP0_ or MP1_ // Vehicle_20 premium paid by destroyer of vehicle
(int)MPSV_MODEL_20 // Add MP0_ or MP1_ // Vehicle_20 model enum of vehicle
(int)MPSV_FLAGS_20 // Add MP0_ or MP1_ // Vehicle_20 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_20 // Add MP0_ or MP1_ // Vehicle_20 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_20 // Add MP0_ or MP1_ // Vehicle_20 licence plate part 0
<!-- Vehicle_21-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_21 // Add MP0_ or MP1_ // Vehicle_21 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_21 // Add MP0_ or MP1_ // Vehicle_21 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_21 // Add MP0_ or MP1_ // Vehicle_21 premium paid by destroyer of vehicle
(int)MPSV_MODEL_21 // Add MP0_ or MP1_ // Vehicle_21 model enum of vehicle
(int)MPSV_FLAGS_21 // Add MP0_ or MP1_ // Vehicle_21 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_21 // Add MP0_ or MP1_ // Vehicle_21 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_21 // Add MP0_ or MP1_ // Vehicle_21 licence plate part 0
<!-- Vehicle_22-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_22 // Add MP0_ or MP1_ // Vehicle_22 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_22 // Add MP0_ or MP1_ // Vehicle_22 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_22 // Add MP0_ or MP1_ // Vehicle_22 premium paid by destroyer of vehicle
(int)MPSV_MODEL_22 // Add MP0_ or MP1_ // Vehicle_22 model enum of vehicle
(int)MPSV_FLAGS_22 // Add MP0_ or MP1_ // Vehicle_22 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_22 // Add MP0_ or MP1_ // Vehicle_22 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_22 // Add MP0_ or MP1_ // Vehicle_22 licence plate part 0
<!-- Vehicle_23 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_23 // Add MP0_ or MP1_ // Vehicle_23 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_23 // Add MP0_ or MP1_ // Vehicle_23 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_23 // Add MP0_ or MP1_ // Vehicle_23 premium paid by destroyer of vehicle
(int)MPSV_MODEL_23 // Add MP0_ or MP1_ // Vehicle_23 model enum of vehicle
(int)MPSV_FLAGS_23 // Add MP0_ or MP1_ // Vehicle_23 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_23 // Add MP0_ or MP1_ // Vehicle_23 cost of vehicle when purchased
<!-- Vehicle_24 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_24 // Add MP0_ or MP1_ // Vehicle_24 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_24 // Add MP0_ or MP1_ // Vehicle_24 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_24 // Add MP0_ or MP1_ // Vehicle_24 premium paid by destroyer of vehicle
(int)MPSV_MODEL_24 // Add MP0_ or MP1_ // Vehicle_24 model enum of vehicle
(int)MPSV_FLAGS_24 // Add MP0_ or MP1_ // Vehicle_24 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_24 // Add MP0_ or MP1_ // Vehicle_24 cost of vehicle when purchased
<!-- Vehicle_25 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_25 // Add MP0_ or MP1_ // Vehicle_25 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_25 // Add MP0_ or MP1_ // Vehicle_25 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_25 // Add MP0_ or MP1_ // Vehicle_25 premium paid by destroyer of vehicle
(int)MPSV_MODEL_25 // Add MP0_ or MP1_ // Vehicle_25 model enum of vehicle
(int)MPSV_FLAGS_25 // Add MP0_ or MP1_ // Vehicle_25 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_25 // Add MP0_ or MP1_ // Vehicle_25 cost of vehicle when purchased

(int)MULTI_PROPERTY_1 // Add MP0_ or MP1_ // Stores what other property player has purchased +_1
(int)MULTI_PROPERTY_VALUE_1 // Add MP0_ or MP1_ // Stores value other property player has purchased +_1

(bool)PARTICIPATED_IN_TOURNAMENT // Add MP0_ or MP1_ //  track if player has participated in a tournament 
(bool)HAS_CHAR_WON_TOURNAMENT // Add MP0_ or MP1_ //  track if player has won a tournament 

(int)MPPLY_TOTAL_TIME_SESS_SWAP // MP Char 0 - Addons unlocked bitset 5
(int)MPPLY_TOTAL_TIME_ENDJOB // MP Char 0 - Addons unlocked bitset 5

<!--- NON VALENTINE STATS! END -->

(int)MP_CHAR_STAT_RALLY_ANIM // Add MP0_ or MP1_ // The paired anim that should play on rally celebration screen

(int)MP_CHAR_ARMOUR_1_COUNT // Add MP0_ or MP1_ // Armour 1 count for inventory
(int)MP_CHAR_ARMOUR_2_COUNT // Add MP0_ or MP1_ // Armour 2 count for inventory
(int)MP_CHAR_ARMOUR_3_COUNT // Add MP0_ or MP1_ // Armour 3 count for inventory
(int)MP_CHAR_ARMOUR_4_COUNT // Add MP0_ or MP1_ // Armour 4 count for inventory
(int)MP_CHAR_ARMOUR_5_COUNT // Add MP0_ or MP1_ // Armour 5 count for inventory

<!--- BIG FEED STATS -->
(bool)MPPLY_BIG_FEED_INIT // Have the unique and total number of Jobs been saved

(int)MPPLY_UNIQUE_RACES // Number of unique Races a player has played
(int)MPPLY_UNIQUE_DMS // Number of unique DMs a player has played
(int)MPPLY_UNIQUE_PARAS // Number of unique Parachuting a player has played
(int)MPPLY_UNIQUE_SURVIVAL // Number of unique Survivals a player has played
(int)MPPLY_UNIQUE_MISSIONS // Number of unique Missions a player has played
(int)MPPLY_UNIQUE_LTS // Number of unique LTS a player has played
(int)MPPLY_UNIQUE_CTF // Number of unique CTF a player has played
(int)MPPLY_UNIQUE_VERSUS // Number of unique Versus a player has played

(int)MPPLY_AVAILABLE_RACES // Number of Races a player has available
(int)MPPLY_AVAILABLE_DMS // Number of DMs a player has available
(int)MPPLY_AVAILABLE_PARAS // Number of Parachuting a player has available
(int)MPPLY_AVAILABLE_SURVIVAL // Number of Survivals a player has available
(int)MPPLY_AVAILABLE_MISSIONS // Number of Missions a player has available
(int)MPPLY_AVAILABLE_LTS // Number of LTS a player has available
(int)MPPLY_AVAILABLE_CTF // Number of CTF a player has available
(int)MPPLY_AVAILABLE_VERSUS // Number of Versus a player has available

(int)MPPLY_UNIQUE_RACES_V // Number of unique Races a player has played (Verified)
(int)MPPLY_UNIQUE_DMS_V // Number of unique DMs a player has played (Verified)
(int)MPPLY_UNIQUE_PARAS_V // Number of unique Parachuting a player has played (Verified)
(int)MPPLY_UNIQUE_SURVIVAL_V // Number of unique Survivals a player has played (Verified)
(int)MPPLY_UNIQUE_MISSIONS_V // Number of unique Missions a player has played (Verified)
(int)MPPLY_UNIQUE_LTS_V // Number of unique LTS a player has played (Verified)
(int)MPPLY_UNIQUE_CTF_V // Number of unique CTF a player has played (Verified)
(int)MPPLY_UNIQUE_VERSUS_V // Number of unique Versus a player has played (Verified)

(int)MPPLY_AVAILABLE_RACES_V // Number of Races a player has available (Verified)
(int)MPPLY_AVAILABLE_DMS_V // Number of DMs a player has available (Verified)
(int)MPPLY_AVAILABLE_PARAS_V // Number of Parachuting a player has available (Verified)
(int)MPPLY_AVAILABLE_SURVIVAL_V // Number of Survivals a player has available (Verified)
(int)MPPLY_AVAILABLE_MISSIONS_V // Number of Missions a player has available (Verified)
(int)MPPLY_AVAILABLE_LTS_V // Number of LTS a player has available (Verified)
(int)MPPLY_AVAILABLE_CTF_V // Number of CTF a player has available (Verified)
(int)MPPLY_AVAILABLE_VERSUS_V // Number of Versus a player has available (Verified)

<!--- Contact Stats -->
(int)MPPLY_UNIQUE_CONTACT_0 // Number of unique Missions from contact 0
(int)MPPLY_UNIQUE_CONTACT_1 // Number of unique Missions from contact 1
(int)MPPLY_UNIQUE_CONTACT_2 // Number of unique Missions from contact 2
(int)MPPLY_UNIQUE_CONTACT_3 // Number of unique Missions from contact 3
(int)MPPLY_UNIQUE_CONTACT_4 // Number of unique Missions from contact 4
(int)MPPLY_UNIQUE_CONTACT_5 // Number of unique Missions from contact 5
(int)MPPLY_UNIQUE_CONTACT_6 // Number of unique Missions from contact 6

(int)MPPLY_TOTAL_CONTACT_0 // Number of Races a player has available (Verified)
(int)MPPLY_TOTAL_CONTACT_1 // Number of DMs a player has available (Verified)
(int)MPPLY_TOTAL_CONTACT_2 // Number of Parachuting a player has available (Verified)
(int)MPPLY_TOTAL_CONTACT_3 // Number of Survivals a player has available (Verified)
(int)MPPLY_TOTAL_CONTACT_4 // Number of Missions a player has available (Verified)
(int)MPPLY_TOTAL_CONTACT_5 // Number of LTS a player has available (Verified)
(int)MPPLY_TOTAL_CONTACT_6 // Number of CTF a player has available (Verified)

(int)SET_RP_GIFT_ADMIN // SET THE PLAYERS RP BY THE SCADMIN
(int)CHAR_SET_RP_GIFT_ADMIN // Add MP0_ or MP1_ // SET THE PLAYERS RP BY THE SCADMIN

(int)CHAR_RP_GIFT_ADMIN_BEFORE // Add MP0_ or MP1_ // SET THE PLAYERS RP BY THE SCADMIN
(date)CHAR_RP_GIFT_ADMIN_DATE // Add MP0_ or MP1_ // SET THE PLAYERS RP BY THE SCADMIN
(u64)CHAR_RP_GIFT_ADMIN_POSIX // Add MP0_ or MP1_ // SET THE PLAYERS RP BY THE SCADMIN

(int)DLC_APPAREL_ACQUIRED_15 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_16 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_15 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_16 // Add MP0_ or MP1_ // Shop ped apparel save data
(bool)VALENTINES_REC_CLOTHES // Add MP0_ or MP1_ // Stat for recording valentine clothes
(int)MPPLY_NUM_CAPTURES_CREATED // Number of CTF a player has created 

<!--- SPECTATOR CAM Stats -->
(int)IS_CHAR_IN_SPECCAM_MISS // Add MP0_ or MP1_ // Spectator Cam - When a player goes onto spectator cam On Mission
(u64)TOTAL_TIME_SPECCAM_MISS // Add MP0_ or MP1_ // Spectator Cam - how long they remain on spectator cam On Mission
(int)HAS_CHAR_QUIT_SPECCAM_MISS // Add MP0_ or MP1_ // Spectator Cam - If they quit whilst on spectator cam. On Mission

(int)IS_CHAR_IN_SPECCAM_CTF // Add MP0_ or MP1_ // Spectator Cam - When a player goes onto spectator cam CTF MODE
(u64)TOTAL_TIME_SPECCAM_CTF // Add MP0_ or MP1_ // Spectator Cam - how long they remain on spectator cam CTF MODE
(int)HAS_CHAR_QUIT_SPECCAM_CTF // Add MP0_ or MP1_ // Spectator Cam - If they quit whilst on spectator cam. CTF MODE

(int)IS_CHAR_IN_SPECCAM_LTS // Add MP0_ or MP1_ // Spectator Cam - When a player goes onto spectator cam LTS Mode
(u64)TOTAL_TIME_SPECCAM_LTS // Add MP0_ or MP1_ // Spectator Cam - how long they remain on spectator cam LTS Mode
(int)HAS_CHAR_QUIT_SPECCAM_LTS // Add MP0_ or MP1_ // Spectator Cam - If they quit whilst on spectator cam LTS Mode.

(int)IS_CHAR_IN_SPECCAM_SUR // Add MP0_ or MP1_ // Spectator Cam - When a player goes onto spectator cam Survival Mode
(u64)TOTAL_TIME_SPECCAM_SUR // Add MP0_ or MP1_ // Spectator Cam - how long they remain on spectator cam Survival Mode
(int)HAS_CHAR_QUIT_SPECCAM_SUR // Add MP0_ or MP1_ // Spectator Cam - If they quit whilst on spectator cam Survival Mode.

(u64)TIME_SPECT_FREEROAM // Add MP0_ or MP1_ // Time Spent Spectating Freeroam
(u64)TIME_SPECT_JOBS // Add MP0_ or MP1_ // Time Spent Spectating Jobs
(u64)TIME_SPECT_FRIENDS // Add MP0_ or MP1_ // Time Spent Spectating Friends
(u64)TIME_SPECT_CREW_MEMBERS // Add MP0_ or MP1_ // Time Spent Spectating Crew Members
(u64)TIME_SPECT_STRANGERS // Add MP0_ or MP1_ // Time Spent Spectating Strangers 
(u64)TIME_SPECT_FRIEND_NOT_CREW // Add MP0_ or MP1_ // Time Spent Spectating friends who aren't crew members
(u64)TIME_SPECT_CREW_NOT_FRIEND // Add MP0_ or MP1_ // Time Spent Spectating crew members who aren't friends 
(int)SPECTATED_WAS_CHANGED // Add MP0_ or MP1_ // Number of times that the person being spectated was changed.

(int)NO_NON_CONTRACT_RACE_WIN // Add MP0_ or MP1_ // Number of times player won a non contact race.

(float)PLAYER_MENTAL_STATE // Add MP0_ or MP1_ // Track players mental state
(int)NO_JOBS_DONE_CONSECUTIVELY // Add MP0_ or MP1_ // how many jobs a player has performed consecutively
(int)NO_COP_DESTORY_IMPOUND_VEH // Add MP0_ or MP1_ // Vehicle Impound Number of times an impounded vehicle is destroyed by the cops..

(int)TEXTS_SENT_TO_PLAYERS // Add MP0_ or MP1_ // texts sent to other players
(int)CALLS_MADE_TO_PLAYERS // Add MP0_ or MP1_ // phone calls made to other players
(int)CALLS_MADE_TO_NPC // Add MP0_ or MP1_ // phone calls made to NPC characters (this stat would need to record WHICH NPC character was phoned)

(s64)INTERNET_BANK_BALANCE // Add MP0_ or MP1_ // players banking cash through the in-game internet.
(s64)ATM_BANK_BALANCE // Add MP0_ or MP1_ // players banking cash through ATM.

(int)DLC_APPAREL_ACQUIRED_17 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_17 // Add MP0_ or MP1_ // Shop ped apparel save data


(int)STORED_LOTTERY_WEEK // Add MP0_ or MP1_ // Stores the lottery week
(int)LOTTERY_TICKETS_BOUGHT // Add MP0_ or MP1_ // Stores number of lottery tickets bought
(u32)CODE_CRC // Code crc

(bool)TOURNAMENT_1_WINNER // Add MP0_ or MP1_ // is player a Tournement winner 
(bool)TOURNAMENT_1_PARTICIPANT // Add MP0_ or MP1_ // is player a Tournement participant
(int)MPPLY_CAP_CHEAT_START // CHEAT TRACKING No of missions started
(int)MPPLY_CAP_CHEAT_END // CHEAT TRACKING  no of missions ended
(int)MPPLY_CAP_CHEAT_QUIT // CHEAT TRACKING  no of missions quit
(int)MPPLY_CAP_CHEAT_TALLY // Number of times cheated
(int)CAPTURE_START // Add MP0_ or MP1_ //  No of races started
(int)CAPTURE_END // Add MP0_ or MP1_ //  No of races ended

(int)MPPLY_SUR_CHEAT_START // CHEAT TRACKING No of missions started
(int)MPPLY_SUR_CHEAT_END // CHEAT TRACKING  no of missions ended
(int)MPPLY_SUR_CHEAT_QUIT // CHEAT TRACKING  no of missions quit
(int)MPPLY_SUR_CHEAT_TALLY // Number of times cheated
(int)SURVIVAL_START // Add MP0_ or MP1_ //  No of races started
(int)SURVIVAL_END // Add MP0_ or MP1_ //  No of races ended

(int)MPPLY_LTS_CHEAT_START // CHEAT TRACKING No of missions started
(int)MPPLY_LTS_CHEAT_END // CHEAT TRACKING  no of missions ended
(int)MPPLY_LTS_CHEAT_QUIT // CHEAT TRACKING  no of missions quit
(int)MPPLY_LTS_CHEAT_TALLY // Number of times cheated
(int)LTS_START // Add MP0_ or MP1_ //  No of races started
(int)LTS_END // Add MP0_ or MP1_ //  No of races ended

(int)MPPLY_PARA_CHEAT_START // CHEAT TRACKING No of missions started
(int)MPPLY_PARA_CHEAT_END // CHEAT TRACKING  no of missions ended
(int)MPPLY_PARA_CHEAT_QUIT // CHEAT TRACKING  no of missions quit
(int)MPPLY_PARA_CHEAT_TALLY // Number of times cheated
(int)PARACHUTE_START // Add MP0_ or MP1_ //  No of races started
(int)PARACHUTE_END // Add MP0_ or MP1_ //  No of races ended

(int)MPPLY_FMEVN_CHEAT_START // CHEAT TRACKING No of missions started
(int)MPPLY_FMEVN_CHEAT_END // CHEAT TRACKING  no of missions ended
(int)MPPLY_FMEVN_CHEAT_QUIT // CHEAT TRACKING  no of missions quit
(int)MPPLY_FMEVN_CHEAT_TALLY // Number of times cheated
(int)FMEVENT_START // Add MP0_ or MP1_ //  No of races started
(int)FMEVENT_END // Add MP0_ or MP1_ //  No of races ended


(bool)MPPLY_IS_CHAR_SPECTATING // Is player spectating someone
(bool)MPPLY_TOGGLE_OFF_BIG_RADAR // Toggle names on big radar

(int)DLC_APPAREL_ACQUIRED_18 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_19 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_20 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_21 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_22 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_18 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_19 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_20 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_21 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_22 // Add MP0_ or MP1_ // Shop ped apparel save data
 
(int)TATTOO_FM_VIEWED_9 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
(int)TATTOO_FM_VIEWED_10 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
(int)TATTOO_FM_VIEWED_11 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
(int)TATTOO_FM_VIEWED_12 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
   
(int)TATTOO_FM_CURRENT_10 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
(int)TATTOO_FM_CURRENT_11 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
(int)TATTOO_FM_CURRENT_12 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 4
   
(int)TATTOO_FM_UNLOCKS_7 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 7
(int)TATTOO_FM_UNLOCKS_8 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 8
(int)TATTOO_FM_UNLOCKS_9 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 9
(int)TATTOO_FM_UNLOCKS_10 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 10
(int)TATTOO_FM_UNLOCKS_11 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 11
(int)TATTOO_FM_UNLOCKS_12 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 12

(bool)DISABLE_DISPLAY_CANCEL_CALL // Add MP0_ or MP1_ // Toggle names on big radar
(bool)UNLOCK_RACE_HIPSTER_TSHIRT // Add MP0_ or MP1_ // Toggle names on big radar
(bool)UNLOCK_DM_HIPSTER_TSHIRT // Add MP0_ or MP1_ // Toggle names on big radar
   
(int)CHAR_CHANGE_TANK_ADMIN // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(u64)CHAR_TANK_ADMIN_POSIX // Add MP0_ or MP1_ // REMOVE THE TANK RP BY THE SCADMIN


(u32)VEHICLE_WEAPONHASH // Add MP0_ or MP1_ // Weapon hash choosen when we enter a vehicle

(bool)UNLOCK_HIPSTER_TSHIRT_DOG // Add MP0_ or MP1_ // Toggle names on big radar
(bool)UNLOCK_HIPSTER_TSHIRT_VINYL // Add MP0_ or MP1_ // Toggle names on big radar
(bool)UNLOCK_HIPSTER_TSHIRT_MESS // Add MP0_ or MP1_ // Toggle names on big radar
(u64)CHALLENGE_LAUNCH_TIME // Add MP0_ or MP1_ // Toggle names on big radar
(int)NUMBER_OF_CHALLENGES_TODAY // Add MP0_ or MP1_ // Toggle names on big radar

(int)MPPLY_VEHICLE_ID_ADMIN_WEB // Vehicle id of the vehicle that is to be made available in the website.

(int)ADMIN_WEAPON_GV_BS_1 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_WEAPON_GV_BS_2 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_WEAPON_GV_BS_3 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_WEAPON_RM_BS_1 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_WEAPON_RM_BS_2 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_WEAPON_RM_BS_3 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(u64)ADMIN_WEAPON_POSIX // Add MP0_ or MP1_ // REMOVE THE TANK RP BY THE SCADMIN

(int)ADMIN_VEH_GV_BS_1 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 1 set by SCADMIN
(int)ADMIN_VEH_GV_BS_2 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 2 set by SCADMIN
(int)ADMIN_VEH_GV_BS_3 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 3 set by SCADMIN
(int)ADMIN_VEH_GV_BS_4 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 4 set by SCADMIN
(int)ADMIN_VEH_GV_BS_5 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 5 set by SCADMIN
(int)ADMIN_VEH_GV_BS_6 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 6 set by SCADMIN
(int)ADMIN_VEH_GV_BS_7 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 6 set by SCADMIN

(int)ADMIN_VEH_RM_BS_1 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 1 set by SCADMIN
(int)ADMIN_VEH_RM_BS_2 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 2 set by SCADMIN
(int)ADMIN_VEH_RM_BS_3 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 3 set by SCADMIN
(int)ADMIN_VEH_RM_BS_4 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 4 set by SCADMIN
(int)ADMIN_VEH_RM_BS_5 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 5 set by SCADMIN
(int)ADMIN_VEH_RM_BS_6 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 6 set by SCADMIN
(int)ADMIN_VEH_RM_BS_7 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 6 set by SCADMIN

(u64)ADMIN_VEHICLE_POSIX // Add MP0_ or MP1_ // Posix of when the last give/remove buyable veh through SCADMIN was applied.

(int)ADMIN_VEH_RM_NONBY_1 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 1 set by SCADMIN
(int)ADMIN_VEH_RM_NONBY_2 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 2 set by SCADMIN
(int)ADMIN_VEH_RM_NONBY_3 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 3 set by SCADMIN
(int)ADMIN_VEH_RM_NONBY_4 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 4 set by SCADMIN
(int)ADMIN_VEH_RM_NONBY_5 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 5 set by SCADMIN
(int)ADMIN_VEH_RM_NONBY_6 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 6 set by SCADMIN
(u64)ADMIN_VEH_RM_NONBY_POSIX // Add MP0_ or MP1_ // Posix of when the last give/remove non buyable veh through SCADMIN was applied.

(int)ADMIN_VEH_GV_NONBY_1 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 1 set by SCADMIN
(int)ADMIN_VEH_GV_NONBY_2 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 2 set by SCADMIN
(int)ADMIN_VEH_GV_NONBY_3 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 3 set by SCADMIN
(int)ADMIN_VEH_GV_NONBY_4 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 4 set by SCADMIN
(int)ADMIN_VEH_GV_NONBY_5 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 5 set by SCADMIN
(int)ADMIN_VEH_GV_NONBY_6 // Add MP0_ or MP1_ // Remove from the player a non-buyable veh in bitset 6 set by SCADMIN
(u64)ADMIN_VEH_GV_NONBY_POSIX // Add MP0_ or MP1_ // Posix of when the last give/remove non buyable veh through SCADMIN was applied.

(int)ADMIN_APARTM_GV_BS_1 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_APARTM_GV_BS_2 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_APARTM_GV_BS_3 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_APARTM_RM_BS_1 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_APARTM_RM_BS_2 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_APARTM_RM_BS_3 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_APARTM_SLOT // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(u64)ADMIN_APARTM_POSIX // Add MP0_ or MP1_ // REMOVE THE TANK RP BY THE SCADMIN

(int)ADMIN_CLOTHES_GV_BS_1 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_2 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_3 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_4 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_5 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_6 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_7 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_8 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_9 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN

(int)ADMIN_CLOTHES_RM_BS_1 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_2 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_3 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_4 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_5 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_6 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_7 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_8 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_9 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN

(u64)ADMIN_CLOTHES_POSIX // Add MP0_ or MP1_ // REMOVE THE TANK RP BY THE SCADMIN
(int)ADMIN_PROG_GV_BS_1 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(u64)ADMIN_PROGRESS_POSIX // Add MP0_ or MP1_ // REMOVE THE TANK RP BY THE SCADMIN

(u64)TIME_NOTDROWNINWATER // Add MP0_ or MP1_ // Total time underwater.
(int)FM_CELLPHONE_BACKGROUND // Add MP0_ or MP1_ // Import export stats
(int)FM_CELLPHONE_THEME // Add MP0_ or MP1_ // Import export stats

(packed)TUPSTAT_BOOL1 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL2 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL3 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL4 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL5 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL6 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL7 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL8 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL9 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL10 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)TUPSTAT_BOOL11 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.

(int)PARACHUTE_CURRENT_PACK // Add MP0_ or MP1_ // Current parachute pack

(int)DLC_APPAREL_ACQUIRED_23 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_24 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_23 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_24 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)MPPLY_DID_SAVE_TRANS // Did the player transfer saves from LG
(bool)WAS_CHAR_TRANSFERED // Add MP0_ or MP1_ // Was this character imported from Last Gen
(int)LAST_USED_PARACHUTE // Add MP0_ or MP1_ // save which one they used and initialise with that in the next corona 
(int)BREATHING_APPAR_BOUGHT // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Number of silent kills
(int)GOLF_HOLE_IN_ONES // Add MP0_ or MP1_ // MP Char 0 - number of hole in ones
(int)TIME_FOR_ONE_ON_ONE_DM // Add MP0_ or MP1_ // Time limit for one on one death match
(int)LAST_USED_CUSTOM_VEHICLE // Add MP0_ or MP1_ // Time limit for one on one death match
(int)WALKING_STYLE // Add MP0_ or MP1_ // PLayers walking style
(int)CHAR_FM_STORED_HAIRDO_SA // Add MP0_ or MP1_ // Shop ped apparel save data

(int)CHAR_KIT_FM_PURCHASE10 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_10_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
(int)CHAR_KIT_10_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 1
(int)CHAR_KIT_10_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
(int)MPPLY_VEHICLE_SELL_TIME //  Timer for last sold vehicle
(int)FLY_UNDER_BRIDGES // Add MP0_ or MP1_ // Number of times flown under a bridge

(int)NUM_TIMES_DRUNK // Add MP0_ or MP1_ // number of times drunk
(int)MONEY_SPENT_ON_VEHICLES // Add MP0_ or MP1_ // cash spent on vehicles
(int)MONEY_SPENT_ON_WEAPONS // Add MP0_ or MP1_ // cash spent on weapons
(int)MONEY_SPENT_ON_CLOTHES // Add MP0_ or MP1_ // cash spent on clothes
(int)TIMES_COMPLETE_PLANETAKE // Add MP0_ or MP1_ // Number of times flown under a bridge
(int)AUTO_EQUIP_HELMET // Add MP0_ or MP1_ // Number of times flown under a bridge
(int)AUTO_EQ_HELMET_FLY_VEH // Add MP0_ or MP1_ // Number of times flown under a bridge

(int)CHAR_KIT_FM_PURCHASE11 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_11_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
(int)CHAR_KIT_11_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 1
(int)CHAR_KIT_11_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1

(int)DLC_APPAREL_ACQUIRED_25 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_26 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_27 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_28 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_29 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_30 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_31 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_32 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_33 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_34 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_25 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_26 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_27 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_28 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_29 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_30 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_31 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_32 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_33 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_34 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)MPPLY_LTS_CREATED // MP Char 0 - PERSONAL  -Has player completed the DM-creator tutorial
(int)CRPILOTSCHOOL // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)CRDISTRICTCOPS // Add MP0_ or MP1_ // MP Char 0 - Stores how many times the player has started mission script
(int)FM_CELLPHONE_QUICKLAUNCH // Add MP0_ or MP1_ // Phone stats

(int)CHAR_KIT_FM_PURCHASE12 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_KIT_12_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
(int)CHAR_KIT_12_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 1
(int)CHAR_KIT_12_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 1
(int)MPPLY_DLC_WEAPON_COUNT // Did the player transfer saves from LG
(int)MPPLY_DLC_VEH_COUNT // Did the player transfer saves from LG

<stat Name = "MESH_HEAD0"   Type="int"  SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - head mesh config" />
<stat Name = "MESH_HEAD1"   Type="int"  SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - head mesh config" />
<stat Name = "MESH_HEAD2"   Type="int"  SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - head mesh config" />
<stat Name = "MESH_TEX0"Type="int"  SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - head mesh config" />
<stat Name = "MESH_TEX1"Type="int"  SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - head mesh config" />
<stat Name = "MESH_TEX2"Type="int"  SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - head mesh config" />
<stat Name = "MESH_HEADBLEND"   Type="float"SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - head mesh config" />
<stat Name = "MESH_TEXBLEND"Type="float"SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - head mesh config" />
<stat Name = "MESH_VARBLEND"Type="float"SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - head mesh config" />
<stat Name = "MESH_ISPARENT"Type="bool" SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - head mesh config" />

<stat Name = "MPPLY_POWER_OFF_RACE" Type="int"  SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="false"  Comment="Records number of times console powers off during a job" />
<stat Name = "MPPLY_POWER_OFF_DM"   Type="int"  SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="false"  Comment="Records number of times console powers off during a job" />
<stat Name = "MPPLY_POWER_OFF_TDM"  Type="int"  SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="false"  Comment="Records number of times console powers off during a job" />
<stat Name = "MPPLY_POWER_OFF_BJ"   Type="int"  SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="false"  Comment="Records number of times console powers off during a job" />

<stat Name ="USING_HAIR_SA_STAT"Type="bool"   SaveCategory="0"   online="true"  profile="false"   Owner="script" characterStat="true"  Comment="MP Char 0 - Letting us know to use  CHAR_FM_STORED_HAIRDO_SA" />
(int)CHAR_IS_NG_VERSION // Add MP0_ or MP1_ // for NG character creator
(int)CHAR_IS_NGPC_VERSION // Add MP0_ or MP1_ // for NG PC character creator
(int)CHAR_IS_NG_VERSION_SA // Add MP0_ or MP1_ // for NG character creator

(int)TIMES_COMPLETE_DESTROYVEH // Add MP0_ or MP1_ // Number of times flown under a bridge
(int)TIMES_COMPLETE_DISTCOPS1 // Add MP0_ or MP1_ // Number of times flown under a bridge
(int)TIMES_COMPLETE_DISTCOPS2 // Add MP0_ or MP1_ // Number of times flown under a bridge
(int)TIMES_COMPLETE_DISTCOPS3 // Add MP0_ or MP1_ // Number of times flown under a bridge
(int)TIMES_COMPLETE_DISTCOPS4 // Add MP0_ or MP1_ // Number of times flown under a bridge

(int)COMPLETEDAILYOBJ // Add MP0_ or MP1_ // Freemode activity phonecall
(int)COMPLETEDAILYOBJTOTAL // Add MP0_ or MP1_ // Freemode activity phonecall
(int)TOTALDAYCOMPLETED // Add MP0_ or MP1_ // Freemode activity phonecall
(int)TOTALWEEKCOMPLETED // Add MP0_ or MP1_ // Freemode activity phonecall
(int)TOTALMONTHCOMPLETED // Add MP0_ or MP1_ // Freemode activity phonecall
(int)CONSECUTIVEDAYCOMPLETED // Add MP0_ or MP1_ // Freemode activity phonecall
(int)CONSECUTIVEWEEKCOMPLETED // Add MP0_ or MP1_ // Freemode activity phonecall
(int)CONSECUTIVEMONTHCOMPLETE // Add MP0_ or MP1_ // Freemode activity phonecall

(int)AWD_TAKEDOWNSMUGPLANE // Add MP0_ or MP1_ // Plane Takedown  Fly Bye ~1~ smugglers' aircrafts taken down. 
(int)AWD_ODISTRACTCOPSNOEATH // Add MP0_ or MP1_ // Distract Cops   Over Here   Distracted cops without dying ~1~ times. 
(int)HEADSHOT_HELP_TEXT // Add MP0_ or MP1_ // Freemode activity phonecall
(int)MPPLY_PLATINUM_BOOLPLY_0 // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)AWD_DAILYOBJCOMPLETED // Add MP0_ or MP1_ // Daily ObjectivesDaily Duty  ~1~ Daily Objectives completed.  
(bool)AWD_DAILYOBJWEEKBONUS // Add MP0_ or MP1_ // Daily ObjectivesGoal Oriented   Completed a Daily Objective Weekly Bonus.
(bool)AWD_DAILYOBJMONTHBONUS // Add MP0_ or MP1_ // Daily ObjectivesOver Achiever   Completed a Daily Objective Monthly Bonus   
(int)AWD_LESTERDELIVERVEHICLES // Add MP0_ or MP1_ // Destroy Vehicle Auto Go ~1~ Lester target vehicles destroyed.
(bool)AWD_DRIVELESTERCAR5MINS // Add MP0_ or MP1_ // Destroy Vehicle JoyriderDrove the Lester target vehicle for 5 mins.  


(packed)TUPSTAT_INT128 // Add MP0_ or MP1_ // Character Stat with Packed integers index 122. Takes up to 8 integers
(packed)TUPSTAT_INT129 // Add MP0_ or MP1_ // Character Stat with Packed integers index 123. Takes up to 8 integers
(packed)TUPSTAT_INT130 // Add MP0_ or MP1_ // Character Stat with Packed integers index 124. Takes up to 8 integers
(packed)TUPSTAT_INT131 // Add MP0_ or MP1_ // Character Stat with Packed integers index 125. Takes up to 8 integers
(packed)TUPSTAT_INT132 // Add MP0_ or MP1_ // Character Stat with Packed integers index 126. Takes up to 8 integers
(packed)TUPSTAT_INT133 // Add MP0_ or MP1_ // Character Stat with Packed integers index 127. Takes up to 8 integers
(packed)TUPSTAT_INT134 // Add MP0_ or MP1_ // Character Stat with Packed integers index 127. Takes up to 8 integers
(packed)TUPSTAT_INT135 // Add MP0_ or MP1_ // Character Stat with Packed integers index 127. Takes up to 8 integers
(packed)TUPSTAT_INT136 // Add MP0_ or MP1_ // Character Stat with Packed integers index 127. Takes up to 8 integers

(float)FEATURE_0 // Add MP0_ or MP1_ // Next gen (Nose)
(float)FEATURE_1 // Add MP0_ or MP1_ // Next gen (Nose Profile
(float)FEATURE_2 // Add MP0_ or MP1_ // Next gen (Nose Tip)
(float)FEATURE_3 // Add MP0_ or MP1_ // Next gen(Brow)
(float)FEATURE_4 // Add MP0_ or MP1_ // Next gen (Cheek)
(float)FEATURE_5 // Add MP0_ or MP1_ // Next gen (Cheek Shape)
(float)FEATURE_6 // Add MP0_ or MP1_ // Next gen (Eyes)
(float)FEATURE_7 // Add MP0_ or MP1_ // Next gen (Lips)
(float)FEATURE_8 // Add MP0_ or MP1_ // Next gen (Jaw)
(float)FEATURE_9 // Add MP0_ or MP1_ // Next gen (Chin)
(float)FEATURE_10 // Add MP0_ or MP1_ // Next gen  (Chin Shape)
(float)FEATURE_11 // Add MP0_ or MP1_ // Next gen  (Neck)
(float)FEATURE_12 // Add MP0_ or MP1_ // Next gen  (Chin Shape)
(float)FEATURE_13 // Add MP0_ or MP1_ // Next gen  (Neck)
(float)FEATURE_14 // Add MP0_ or MP1_ // Next gen  (Chin Shape)
(float)FEATURE_15 // Add MP0_ or MP1_ // Next gen  (Neck)
(float)FEATURE_16 // Add MP0_ or MP1_ // Next gen  (Chin Shape)
(float)FEATURE_17 // Add MP0_ or MP1_ // Next gen  (Neck)
(float)FEATURE_18 // Add MP0_ or MP1_ // Next gen  (Neck)
(float)FEATURE_19 // Add MP0_ or MP1_ // Next gen  (Neck)
(float)FEATURE_20 // Add MP0_ or MP1_ // Next gen  (Neck)

(float)HEADBLENDOVERLAYCUTS_PC // Add MP0_ or MP1_ // Next gen  (Neck)
(float)HEADBLENDOVERLAYMOLES_PC // Add MP0_ or MP1_ // Next gen  (Neck)

(int)ROCKSTAR_VERIFIED_HASH_0 // Add MP0_ or MP1_ // Rockstar verified job titles
(int)ROCKSTAR_VERIFIED_HASH_1 // Add MP0_ or MP1_ // Rockstar verified job titles
(int)ROCKSTAR_VERIFIED_HASH_2 // Add MP0_ or MP1_ // Rockstar verified job titles
(int)ROCKSTAR_VERIFIED_HASH_3 // Add MP0_ or MP1_ // Rockstar verified job titles
(int)ROCKSTAR_VERIFIED_HASH_4 // Add MP0_ or MP1_ // Rockstar verified job titles
(int)ROCKSTAR_VERIFIED_HASH_5 // Add MP0_ or MP1_ // Rockstar verified job titles
(int)ROCKSTAR_VERIFIED_HASH_6 // Add MP0_ or MP1_ // Rockstar verified job titles
(int)ROCKSTAR_VERIFIED_HASH_7 // Add MP0_ or MP1_ // Rockstar verified job titles
(int)ROCKSTAR_VERIFIED_HASH_8 // Add MP0_ or MP1_ // Rockstar verified job titles
(int)ROCKSTAR_VERIFIED_HASH_9 // Add MP0_ or MP1_ // Rockstar verified job titles

(float)HEADBLEND_OVERLAY_BLUSHER // Add MP0_ or MP1_ // MP Char 0 - Head Blend Overlay Texture
 
(int)TATTOO_FM_ALPHA_0 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_1 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_2 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_3 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_4 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_5 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_6 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_7 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_8 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_9 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_10 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_11 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_12 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos
(int)TATTOO_FM_ALPHA_13 // Add MP0_ or MP1_ // MP Char 0 - Alpha Tattoos

(int)HAIR_TINT // Add MP0_ or MP1_ // MP Char 0 - Colour tints for char features
(int)EYEBROW_TINT // Add MP0_ or MP1_ // MP Char 0 - Colour tints for char features
(int)FACIALHAIR_TINT // Add MP0_ or MP1_ // MP Char 0 - Colour tints for char features
(int)BLUSHER_TINT // Add MP0_ or MP1_ // MP Char 0 - Colour tints for char features
(int)LIPSTICK_TINT // Add MP0_ or MP1_ // MP Char 0 - Colour tints for char features
(int)OVERLAY_BODY_1_TINT // Add MP0_ or MP1_ // MP Char 0  body overlays that players for bugs 2100360  2100361
(int)SEC_OVERLAY_BODY_1_TINT // Add MP0_ or MP1_ // MP Char 0  body overlays that players for bugs 2100360  2100361

(int)MPPLY_PLAT_UP_LB_CHECK // Content from last to next gen

(int)SEC_HAIR_TINT // Add MP0_ or MP1_ // MP Char 0 -Secondary Colour tints for char features
(int)SEC_EYEBROW_TINT // Add MP0_ or MP1_ // MP Char 0 -Secondary Colour tints for char features
(int)SEC_FACIALHAIR_TINT // Add MP0_ or MP1_ // MP Char 0 -Secondary Colour tints for char features
(int)SEC_BLUSHER_TINT // Add MP0_ or MP1_ // MP Char 0 -Secondary Colour tints for char features
(int)SEC_LIPSTICK_TINT // Add MP0_ or MP1_ // MP Char 0 -Secondary Colour tints for char features
(float)OVERLAY_BODY_2 // Add MP0_ or MP1_ // MP Char 0  body overlays that players for bugs 2100360 2100361
(float)OVERLAY_BODY_3 // Add MP0_ or MP1_ // MP Char 0  body overlays that players for bugs 2100360  2100361
(float)OVERLAY_BODY_1 // Add MP0_ or MP1_ // MP Char 0  body overlays that players for bugs 2100360  2100361
(bool)SAVE_MIGRATION_CLEAR_STAT // Add MP0_ or MP1_ // If set to true archenemy stats are cleared when entering the mp game
(packed)NGPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers

<!-- Vehicle_26-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_26 // Add MP0_ or MP1_ // Vehicle_26 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_26 // Add MP0_ or MP1_ // Vehicle_26 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_26 // Add MP0_ or MP1_ // Vehicle_26 premium paid by destroyer of vehicle
(int)MPSV_MODEL_26 // Add MP0_ or MP1_ // Vehicle_26 model enum of vehicle
(int)MPSV_FLAGS_26_XYZ // Add MP0_ or MP1_ // Vehicle_26 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_26 // Add MP0_ or MP1_ // Vehicle_26 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_26 // Add MP0_ or MP1_ // Vehicle_26 licence plate part 0
<!-- Vehicle_27-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_27 // Add MP0_ or MP1_ // Vehicle_27 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_27 // Add MP0_ or MP1_ // Vehicle_27 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_27 // Add MP0_ or MP1_ // Vehicle_27 premium paid by destroyer of vehicle
(int)MPSV_MODEL_27 // Add MP0_ or MP1_ // Vehicle_27 model enum of vehicle
(int)MPSV_FLAGS_27 // Add MP0_ or MP1_ // Vehicle_27 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_27 // Add MP0_ or MP1_ // Vehicle_27 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_27 // Add MP0_ or MP1_ // Vehicle_27 licence plate part 0
<!-- Vehicle_28-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_28 // Add MP0_ or MP1_ // Vehicle_28 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_28 // Add MP0_ or MP1_ // Vehicle_28 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_28 // Add MP0_ or MP1_ // Vehicle_28 premium paid by destroyer of vehicle
(int)MPSV_MODEL_28 // Add MP0_ or MP1_ // Vehicle_28 model enum of vehicle
(int)MPSV_FLAGS_28 // Add MP0_ or MP1_ // Vehicle_28 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_28 // Add MP0_ or MP1_ // Vehicle_28 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_28 // Add MP0_ or MP1_ // Vehicle_28 licence plate part 0
<!-- Vehicle_29-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_29 // Add MP0_ or MP1_ // Vehicle_29 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_29 // Add MP0_ or MP1_ // Vehicle_29 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_29 // Add MP0_ or MP1_ // Vehicle_29 premium paid by destroyer of vehicle
(int)MPSV_MODEL_29 // Add MP0_ or MP1_ // Vehicle_29 model enum of vehicle
(int)MPSV_FLAGS_29 // Add MP0_ or MP1_ // Vehicle_29 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_29 // Add MP0_ or MP1_ // Vehicle_29 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_29 // Add MP0_ or MP1_ // Vehicle_29 licence plate part 0
<!-- Vehicle_30-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_30 // Add MP0_ or MP1_ // Vehicle_30 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_30 // Add MP0_ or MP1_ // Vehicle_30 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_30 // Add MP0_ or MP1_ // Vehicle_30 premium paid by destroyer of vehicle
(int)MPSV_MODEL_30 // Add MP0_ or MP1_ // Vehicle_30 model enum of vehicle
(int)MPSV_FLAGS_30 // Add MP0_ or MP1_ // Vehicle_30 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_30 // Add MP0_ or MP1_ // Vehicle_30 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_30 // Add MP0_ or MP1_ // Vehicle_30 licence plate part 0
<!-- Vehicle_31-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_31 // Add MP0_ or MP1_ // Vehicle_31 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_31 // Add MP0_ or MP1_ // Vehicle_31 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_31 // Add MP0_ or MP1_ // Vehicle_31 premium paid by destroyer of vehicle
(int)MPSV_MODEL_31 // Add MP0_ or MP1_ // Vehicle_31 model enum of vehicle
(int)MPSV_FLAGS_31 // Add MP0_ or MP1_ // Vehicle_31 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_31 // Add MP0_ or MP1_ // Vehicle_31 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_31 // Add MP0_ or MP1_ // Vehicle_31 licence plate part 0
<!-- Vehicle_32-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_32 // Add MP0_ or MP1_ // Vehicle_32 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_32 // Add MP0_ or MP1_ // Vehicle_32 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_32 // Add MP0_ or MP1_ // Vehicle_32 premium paid by destroyer of vehicle
(int)MPSV_MODEL_32 // Add MP0_ or MP1_ // Vehicle_32 model enum of vehicle
(int)MPSV_FLAGS_32 // Add MP0_ or MP1_ // Vehicle_32 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_32 // Add MP0_ or MP1_ // Vehicle_32 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_32 // Add MP0_ or MP1_ // Vehicle_32 licence plate part 0
<!-- Vehicle_33-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_33 // Add MP0_ or MP1_ // Vehicle_33 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_33 // Add MP0_ or MP1_ // Vehicle_33 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_33 // Add MP0_ or MP1_ // Vehicle_33 premium paid by destroyer of vehicle
(int)MPSV_MODEL_33 // Add MP0_ or MP1_ // Vehicle_33 model enum of vehicle
(int)MPSV_FLAGS_33 // Add MP0_ or MP1_ // Vehicle_33 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_33 // Add MP0_ or MP1_ // Vehicle_33 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_33 // Add MP0_ or MP1_ // Vehicle_33 licence plate part 0
<!-- Vehicle_34-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_34 // Add MP0_ or MP1_ // Vehicle_34 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_34 // Add MP0_ or MP1_ // Vehicle_34 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_34 // Add MP0_ or MP1_ // Vehicle_34 premium paid by destroyer of vehicle
(int)MPSV_MODEL_34 // Add MP0_ or MP1_ // Vehicle_34 model enum of vehicle
(int)MPSV_FLAGS_34 // Add MP0_ or MP1_ // Vehicle_34 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_34 // Add MP0_ or MP1_ // Vehicle_34 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_34 // Add MP0_ or MP1_ // Vehicle_34 licence plate part 0
<!-- Vehicle_35-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_35 // Add MP0_ or MP1_ // Vehicle_35 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_35 // Add MP0_ or MP1_ // Vehicle_35 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_35 // Add MP0_ or MP1_ // Vehicle_35 premium paid by destroyer of vehicle
(int)MPSV_MODEL_35 // Add MP0_ or MP1_ // Vehicle_35 model enum of vehicle
(int)MPSV_FLAGS_35 // Add MP0_ or MP1_ // Vehicle_35 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_35 // Add MP0_ or MP1_ // Vehicle_35 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_35 // Add MP0_ or MP1_ // Vehicle_35 licence plate part 0
<!-- Vehicle_36 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_36 // Add MP0_ or MP1_ // Vehicle_36 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_36 // Add MP0_ or MP1_ // Vehicle_36 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_36 // Add MP0_ or MP1_ // Vehicle_36 premium paid by destroyer of vehicle
(int)MPSV_MODEL_36 // Add MP0_ or MP1_ // Vehicle_36 model enum of vehicle
(int)MPSV_FLAGS_36 // Add MP0_ or MP1_ // Vehicle_36 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_36 // Add MP0_ or MP1_ // Vehicle_36 cost of vehicle when purchased
<!-- Vehicle_37 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_37 // Add MP0_ or MP1_ // Vehicle_37 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_37 // Add MP0_ or MP1_ // Vehicle_37 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_37 // Add MP0_ or MP1_ // Vehicle_37 premium paid by destroyer of vehicle
(int)MPSV_MODEL_37 // Add MP0_ or MP1_ // Vehicle_37 model enum of vehicle
(int)MPSV_FLAGS_37 // Add MP0_ or MP1_ // Vehicle_37 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_37 // Add MP0_ or MP1_ // Vehicle_37 cost of vehicle when purchased
<!-- Vehicle_38 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_38 // Add MP0_ or MP1_ // Vehicle_38 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_38 // Add MP0_ or MP1_ // Vehicle_38 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_38 // Add MP0_ or MP1_ // Vehicle_38 premium paid by destroyer of vehicle
(int)MPSV_MODEL_38 // Add MP0_ or MP1_ // Vehicle_38 model enum of vehicle
(int)MPSV_FLAGS_38 // Add MP0_ or MP1_ // Vehicle_38 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_38 // Add MP0_ or MP1_ // Vehicle_38 cost of vehicle when purchased


(int)BEND_PROGRESS_HASH // Add MP0_ or MP1_ // Help text display

(int)MPSV_OBTAINED_TIME_26 // Add MP0_ or MP1_ // Vehicle_26 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_27 // Add MP0_ or MP1_ // Vehicle_27 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_28 // Add MP0_ or MP1_ // Vehicle_28 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_29 // Add MP0_ or MP1_ // Vehicle_29 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_30 // Add MP0_ or MP1_ // Vehicle_30 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_31 // Add MP0_ or MP1_ // Vehicle_31 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_32 // Add MP0_ or MP1_ // Vehicle_32 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_33 // Add MP0_ or MP1_ // Vehicle_33 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_34 // Add MP0_ or MP1_ // Vehicle_34 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_35 // Add MP0_ or MP1_ // Vehicle_35 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_36 // Add MP0_ or MP1_ // Vehicle_36 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_37 // Add MP0_ or MP1_ // Vehicle_37 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_38 // Add MP0_ or MP1_ // Vehicle_38 time vehicle was obtained

(int)MULTI_PROPERTY_2 // Add MP0_ or MP1_ // Stores what other property player has purchased +_2
(int)MULTI_PROPERTY_VALUE_2 // Add MP0_ or MP1_ // Stores value other property player has purchased +_2
(bool)MPPLY_SHOWN_SAVE_MIG_DONE // Did the player transfer saves and shown the completed screen

(packed)TUPSTAT_INT137 // Add MP0_ or MP1_ // Character Stat with Packed integers index 137. Takes up to 8 integers
(packed)TUPSTAT_INT138 // Add MP0_ or MP1_ // Character Stat with Packed integers index 138. Takes up to 8 integers
(packed)TUPSTAT_INT139 // Add MP0_ or MP1_ // Character Stat with Packed integers index 139. Takes up to 8 integers
(packed)TUPSTAT_INT140 // Add MP0_ or MP1_ // Character Stat with Packed integers index 140. Takes up to 8 integers
(packed)TUPSTAT_INT141 // Add MP0_ or MP1_ // Character Stat with Packed integers index 141. Takes up to 8 integers
(packed)TUPSTAT_INT142 // Add MP0_ or MP1_ // Character Stat with Packed integers index 142. Takes up to 8 integers
(packed)TUPSTAT_INT143 // Add MP0_ or MP1_ // Character Stat with Packed integers index 143. Takes up to 8 integers
(packed)TUPSTAT_INT144 // Add MP0_ or MP1_ // Character Stat with Packed integers index 144. Takes up to 8 integers
(packed)TUPSTAT_INT145 // Add MP0_ or MP1_ // Character Stat with Packed integers index 145. Takes up to 8 integers
(packed)TUPSTAT_INT146 // Add MP0_ or MP1_ // Character Stat with Packed integers index 146. Takes up to 8 integers
(packed)TUPSTAT_INT147 // Add MP0_ or MP1_ // Character Stat with Packed integers index 147. Takes up to 8 integers
(packed)TUPSTAT_INT148 // Add MP0_ or MP1_ // Character Stat with Packed integers index 148. Takes up to 8 integers
(packed)TUPSTAT_INT149 // Add MP0_ or MP1_ // Character Stat with Packed integers index 149. Takes up to 8 integers
(packed)TUPSTAT_INT150 // Add MP0_ or MP1_ // Character Stat with Packed integers index 150. Takes up to 8 integers
(packed)TUPSTAT_INT151 // Add MP0_ or MP1_ // Character Stat with Packed integers index 151. Takes up to 8 integers
(packed)TUPSTAT_INT152 // Add MP0_ or MP1_ // Character Stat with Packed integers index 152. Takes up to 8 integers
(packed)TUPSTAT_INT153 // Add MP0_ or MP1_ // Character Stat with Packed integers index 153. Takes up to 8 integers
(packed)TUPSTAT_INT154 // Add MP0_ or MP1_ // Character Stat with Packed integers index 154. Takes up to 8 integers
(packed)TUPSTAT_INT155 // Add MP0_ or MP1_ // Character Stat with Packed integers index 155. Takes up to 8 integers
(packed)TUPSTAT_INT156 // Add MP0_ or MP1_ // Character Stat with Packed integers index 156. Takes up to 8 integers
(packed)TUPSTAT_INT157 // Add MP0_ or MP1_ // Character Stat with Packed integers index 157. Takes up to 8 integers
(packed)TUPSTAT_INT158 // Add MP0_ or MP1_ // Character Stat with Packed integers index 158. Takes up to 8 integers
(packed)TUPSTAT_INT159 // Add MP0_ or MP1_ // Character Stat with Packed integers index 159. Takes up to 8 integers
(packed)TUPSTAT_INT160 // Add MP0_ or MP1_ // Character Stat with Packed integers index 160. Takes up to 8 integers
(packed)TUPSTAT_INT161 // Add MP0_ or MP1_ // Character Stat with Packed integers index 161. Takes up to 8 integers
(packed)TUPSTAT_INT162 // Add MP0_ or MP1_ // Character Stat with Packed integers index 162. Takes up to 8 integers
(packed)TUPSTAT_INT163 // Add MP0_ or MP1_ // Character Stat with Packed integers index 163. Takes up to 8 integers
(packed)TUPSTAT_INT164 // Add MP0_ or MP1_ // Character Stat with Packed integers index 164. Takes up to 8 integers
(packed)TUPSTAT_INT165 // Add MP0_ or MP1_ // Character Stat with Packed integers index 165. Takes up to 8 integers
(packed)TUPSTAT_INT166 // Add MP0_ or MP1_ // Character Stat with Packed integers index 166. Takes up to 8 integers
(packed)TUPSTAT_INT167 // Add MP0_ or MP1_ // Character Stat with Packed integers index 167. Takes up to 8 integers
(packed)TUPSTAT_INT168 // Add MP0_ or MP1_ // Character Stat with Packed integers index 168. Takes up to 8 integers
(packed)TUPSTAT_INT169 // Add MP0_ or MP1_ // Character Stat with Packed integers index 169. Takes up to 8 integers
(packed)TUPSTAT_INT170 // Add MP0_ or MP1_ // Character Stat with Packed integers index 170. Takes up to 8 integers
(packed)TUPSTAT_INT171 // Add MP0_ or MP1_ // Character Stat with Packed integers index 171. Takes up to 8 integers
(packed)TUPSTAT_INT172 // Add MP0_ or MP1_ // Character Stat with Packed integers index 172. Takes up to 8 integers
(packed)TUPSTAT_INT173 // Add MP0_ or MP1_ // Character Stat with Packed integers index 173. Takes up to 8 integers
(packed)TUPSTAT_INT174 // Add MP0_ or MP1_ // Character Stat with Packed integers index 174. Takes up to 8 integers
(packed)TUPSTAT_INT175 // Add MP0_ or MP1_ // Character Stat with Packed integers index 175. Takes up to 8 integers
(packed)TUPSTAT_INT176 // Add MP0_ or MP1_ // Character Stat with Packed integers index 176. Takes up to 8 integers
(packed)TUPSTAT_INT177 // Add MP0_ or MP1_ // Character Stat with Packed integers index 177. Takes up to 8 integers
(packed)TUPSTAT_INT178 // Add MP0_ or MP1_ // Character Stat with Packed integers index 178. Takes up to 8 integers
(packed)TUPSTAT_INT179 // Add MP0_ or MP1_ // Character Stat with Packed integers index 179. Takes up to 8 integers
(packed)TUPSTAT_INT180 // Add MP0_ or MP1_ // Character Stat with Packed integers index 180. Takes up to 8 integers
(packed)TUPSTAT_INT181 // Add MP0_ or MP1_ // Character Stat with Packed integers index 181. Takes up to 8 integers
(packed)TUPSTAT_INT182 // Add MP0_ or MP1_ // Character Stat with Packed integers index 182. Takes up to 8 integers
(packed)TUPSTAT_INT183 // Add MP0_ or MP1_ // Character Stat with Packed integers index 183. Takes up to 8 integers
(packed)TUPSTAT_INT184 // Add MP0_ or MP1_ // Character Stat with Packed integers index 184. Takes up to 8 integers
(packed)TUPSTAT_INT185 // Add MP0_ or MP1_ // Character Stat with Packed integers index 185. Takes up to 8 integers
(packed)TUPSTAT_INT186 // Add MP0_ or MP1_ // Character Stat with Packed integers index 186. Takes up to 8 integers
(packed)TUPSTAT_INT187 // Add MP0_ or MP1_ // Character Stat with Packed integers index 187. Takes up to 8 integers
(packed)TUPSTAT_INT188 // Add MP0_ or MP1_ // Character Stat with Packed integers index 188. Takes up to 8 integers
(packed)TUPSTAT_INT189 // Add MP0_ or MP1_ // Character Stat with Packed integers index 189. Takes up to 8 integers
(packed)TUPSTAT_INT190 // Add MP0_ or MP1_ // Character Stat with Packed integers index 190. Takes up to 8 integers
(packed)TUPSTAT_INT191 // Add MP0_ or MP1_ // Character Stat with Packed integers index 191. Takes up to 8 integers

(int)DLC_APPAREL_ACQUIRED_35 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_36 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_35 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_36 // Add MP0_ or MP1_ // Shop ped apparel save data

(packed)NGPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(int)MPPLY_FM_PLYR_HELP_TEXT // Help text for heist.

(int)ADMIN_CLOTHES_RM_BS_10 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_10 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_11 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_11 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_12 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_12 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_13 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_13 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_14 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_14 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_15 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_15 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_16 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_16 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_17 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_17 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_18 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_18 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_19 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_19 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_20 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_20 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_21 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_21 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_22 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_22 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_23 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_23 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_24 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_24 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_25 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_25 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_26 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_26 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN





(int)CHAR_HAIR_VIEWED1 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset
(int)CHAR_HAIR_VIEWED2 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_VIEWED3 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset
(int)CHAR_HAIR_VIEWED4 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_VIEWED5 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset
(int)CHAR_HAIR_VIEWED6 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_VIEWED7 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset
(int)CHAR_HAIR_VIEWED8 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_VIEWED9 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset
(int)CHAR_HAIR_VIEWED10 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_VIEWED11 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_VIEWED12 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_UNLCK1 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 1
(int)CHAR_HAIR_UNLCK2 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_UNLCK3 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 1
(int)CHAR_HAIR_UNLCK4 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_UNLCK5 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 1
(int)CHAR_HAIR_UNLCK6 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_UNLCK7 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 1
(int)CHAR_HAIR_UNLCK8 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_UNLCK9 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 1
(int)CHAR_HAIR_UNLCK10 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_UNLCK11 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 1
(int)CHAR_HAIR_UNLCK12 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2

(int)DLC_APPAREL_ACQUIRED_37 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_38 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_39 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_40 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_37 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_38 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_39 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_40 // Add MP0_ or MP1_ // Shop ped apparel save data
(bool)MESH_HASGRANDPARENT // Add MP0_ or MP1_ // MP Char 0 - head mesh config
(bool)HEIST_SHOP_HELP_TU // Add MP0_ or MP1_ // MP Char 0 - Display help text after heist

(packed)NGPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 13. Takes up to 8 integers
(packed)NGPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 14. Takes up to 8 integers
(packed)NGPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 15. Takes up to 8 integers
(packed)NGPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 16. Takes up to 8 integers
(packed)NGPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 17. Takes up to 8 integers
(packed)NGPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 18. Takes up to 8 integers
(packed)NGPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 19. Takes up to 8 integers
(packed)NGPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 20. Takes up to 8 integers
(packed)NGPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 21. Takes up to 8 integers
(packed)NGPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 22. Takes up to 8 integers
(packed)NGPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 23. Takes up to 8 integers
(packed)NGPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 24. Takes up to 8 integers
(packed)NGPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 25. Takes up to 8 integers
(packed)NGPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 26. Takes up to 8 integers
(packed)NGPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 27. Takes up to 8 integers
(packed)NGPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 28. Takes up to 8 integers
(packed)NGPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 29. Takes up to 8 integers
(packed)NGPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 30. Takes up to 8 integers
(packed)NGPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 31. Takes up to 8 integers
(packed)NGPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers


(bool)MPPLY_USING_KEYBOARD // True if the player is using the keyboard

(date)TIMESTAMP_VEH_SOLD_DAY // Add MP0_ or MP1_ // MP Char 0 - The Date the player sold vehicles
(int)VEH_SOLD_IN_A_DAY // Add MP0_ or MP1_ // MP Char 0 - Counter to store number vehicles sold in a day

(int)MINORITY_REPORT // MINORITY_REPORT

(int)CHAR_WEAP_FM_PURCHASE3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_FM_WEAP_EQUIPPED3 // Add MP0_ or MP1_ // MP Char 0 - Equipped weapons bitset 3
(int)CHAR_FM_WEAP_FREE3 // Add MP0_ or MP1_ // MP Char 0 - Cost Free weapons bitset 3
(int)CHAR_WEAP_VIEWED3 // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset

(int)TATTOO_FM_UNLOCKS_13 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 13
(int)TATTOO_FM_CURRENT_13 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 13
(int)TATTOO_FM_VIEWED_13 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 13

(int)ADMIN_VEH_GV_BS_8 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 8 set by SCADMIN
(int)ADMIN_VEH_RM_BS_8 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 8 set by SCADMIN
(int)CHAR_FM_WEAP_UNLOCKED3 // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset 3
(int)CHAR_KIT_13_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_13_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_13_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE13 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset


(int)CHAR_FM_WEAP_ADDON_6_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH6 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_6_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_6_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6
(int)CHAR_RANK_FM_SA // Add MP0_ or MP1_ // MP Char 0 - XP Value


<stat Name="CAR_SOLD_TIME_1"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />
<stat Name="CAR_SOLD_TIME_2"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />
<stat Name="CAR_SOLD_TIME_3"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />
<stat Name="CAR_SOLD_TIME_4"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />
<stat Name="CAR_SOLD_TIME_5"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />
<stat Name="CAR_SOLD_TIME_6"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />
<stat Name="CAR_SOLD_TIME_7"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />
<stat Name="CAR_SOLD_TIME_8"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />
<stat Name="CAR_SOLD_TIME_9"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />
<stat Name="CAR_SOLD_TIME_10"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="CAR_SOLD_TIME_11"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="CAR_SOLD_TIME_12"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="CAR_SOLD_TIME_13"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="CAR_SOLD_TIME_14"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="CAR_SOLD_TIME_15"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="CAR_SOLD_TIME_16"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="CAR_SOLD_TIME_17"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="CAR_SOLD_TIME_18"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="CAR_SOLD_TIME_19"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="CAR_SOLD_TIME_20"  Type="date" SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_in_current_threshold_check_was_sold " />   
<stat Name="LAST_CAR_SOLD_NUMBER"  Type="int"  SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Number_of_cars_sold_in_current_threshold_check" />

<stat Name="NO_VEH_SOLD_CURR_THRESH" Type="int"  SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Number_of_cars_sold_in_current_threshold_check" />  
<stat Name="MPPLY_TIME_FIRST_CAR_SOLD_TODAY" Type="date"  SaveCategory="0" online="true" profile="true" Owner="script" characterStat="false" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_first_car_was_sold_today " />
<stat Name="NUM_CARS_SOLD_TODAY" Type="int"  SaveCategory="1" online="true" profile="true" Owner="script" characterStat="true" ServerAuthoritative="true" FlushPriority="15"  Comment= "Number_of_cars_sold_today" />   
<stat Name="LAST_TIME_THRESH_CROSS"  Type="date"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"  Comment= "Time_last_threshold_was_crossed" /> 
<stat Name="CHAR_EXPLOIT_LEVEL"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"  Comment= "Player_exploit_level" /> 

<stat Name="NUM_THRESH_CROSSED_TODAY"Type="int"  SaveCategory="1" online="true" profile="true"  ServerAuthoritative="true" FlushPriority="15" Owner="script" characterStat="true"  Comment= "Player_exploit_level" />   

(int)TATTOO_FM_UNLOCKS_14 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 14
(int)TATTOO_FM_CURRENT_14 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 14
(int)TATTOO_FM_VIEWED_14 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 14
(int)TATTOO_FM_UNLOCKS_15 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 15
(int)TATTOO_FM_CURRENT_15 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 15
(int)TATTOO_FM_VIEWED_15 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 15
(int)TATTOO_FM_UNLOCKS_16 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_16 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_16 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16


(int)DLC_APPAREL_ACQUIRED_41 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_42 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_43 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_44 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_45 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_46 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_47 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_48 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_49 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_50 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_41 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_42 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_43 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_44 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_45 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_46 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_47 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_48 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_49 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_50 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)CURRENTVEHICLESALESSEASON // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset
(int)PREVIOUSSEASONEXPLOITLEVEL // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset
(int)PREVIOUSSEASON2EXPLOITLEVEL // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset
(int)PREVIOUSSEASON3EXPLOITLEVEL // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset
(int)PREVIOUSSEASON4EXPLOITLEVEL // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset

(int)MPPLY_SEASONTOCLEAR // MP Char 0 - Weapons unlocked bitset

(int)ALLOW_GENDER_CHANGE // Add MP0_ or MP1_ // Is the player allowed to change this character gender


(int)CHAR_PEAK_EXPLOIT_LEVEL // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset
(int)CURRENTVEHICLESALESTUSEASON // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset

(int)CHAR_FM_PIM_HIDE_JOBS // Add MP0_ or MP1_ // MP Char 0 - For hide show stats
(int)CHAR_FM_PIM_HIDE_AMBIENT // Add MP0_ or MP1_ // MP Char 0 - For hide show stats
(int)CHAR_FM_PIM_HIDE_MISC // Add MP0_ or MP1_ // MP Char 0 - For hide show stats

(date)REPEAT_OFFENDER_1_TIME // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset
(date)REPEAT_OFFENDER_2_TIME // Add MP0_ or MP1_ // MP Char 0 - Weapons unlocked bitset

<stat Name="MPPLY_CHAR_EXPLOIT_LEVEL"   Type="int" SaveCategory="0" online="true" profile="true"  ServerAuthoritative="true" FlushPriority="15" Owner="script" characterStat="false"  Comment= "Player_exploit_level" />
(int)MPPLY_CHAR_PEAK_EXPLOIT_LEVEL // MP Char 0 - Weapons unlocked bitset
(int)MPPLY_CURRENTVEHSALESTUSEASON // MP Char 0 - Weapons unlocked bitset
<stat Name="MPPLY_LAST_TIME_THRESH_CROSS"   Type="date"SaveCategory="0" online="true" profile="true"Owner="script" characterStat="false" ServerAuthoritative="true" FlushPriority="15"  Comment= "Time_last_threshold_was_crossed" />   
(date)MPPLY_REPEAT_OFFENDER_1_TIME // MP Char 0 - Weapons unlocked bitset
(date)MPPLY_REPEAT_OFFENDER_2_TIME // MP Char 0 - Weapons unlocked bitset
(int)MPPLY_CURRENTVEHSALESSEASON // MP Char 0 - Weapons unlocked bitset
(int)MPPLY_THRESHOLD_RESET // MP Char 0 - Weapons unlocked bitset
(int)MPPLY_PREVSEASONEXPLOITLEVEL // MP Char 0 - Weapons unlocked bitset
(int)MPPLY_PREVSEASON2EXPLOITLEVEL // MP Char 0 - Weapons unlocked bitset
(int)MPPLY_PREVSEASON3EXPLOITLEVEL // MP Char 0 - Weapons unlocked bitset
(int)MPPLY_PREVSEASON4EXPLOITLEVEL // MP Char 0 - Weapons unlocked bitset

<stat Name="MPPLY_LOW_REPEAT_OFFENDER_CAP"  Type="bool"   SaveCategory="0"  online="true" profile="true"  ServerAuthoritative="true" FlushPriority="15" Owner="script" characterStat="false"  Default="1"  Comment= "Player_exploit_level" />   
<stat Name="MPPLY_HIGH_REPEAT_OFFENDER_CAP" Type="bool"   SaveCategory="0"  online="true" profile="true"  ServerAuthoritative="true" FlushPriority="15" Owner="script" characterStat="false"  Default="1"  Comment= "Player_exploit_level" />   
<stat Name="MPPLY_OPT_OUT_OF_SYSTEM"Type="bool"   SaveCategory="0"  online="true" profile="true"  ServerAuthoritative="true" FlushPriority="15" Owner="script" characterStat="false"  Comment= "Player_exploit_level" />
<stat Name="MPPLY_NUM_CARS_SOLD_TODAY"  Type="int"  SaveCategory="0" online="true" profile="true" Owner="script" characterStat="false" ServerAuthoritative="true" FlushPriority="15"  Comment= "Number_of_cars_sold_today" />   

(bool)UNLOCKED_MESSAGE_FLEECA // Add MP0_ or MP1_ // MP Char 0 - Display help text after heist

(bool)REMAINHOSTOPTION_PC // Add MP0_ or MP1_ // MP Char 0 - PC only stat to remain host menu option

<stat Name="MPPLY_BG_SCRIPT_INT_00"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_01"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_02"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_03"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_04"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_05"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_06"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_07"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_08"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_09"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_10"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_11"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_12"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_13"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_14"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_15"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_16"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_17"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_18"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_19"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_20"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_21"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_22"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_23"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_24"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_25"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_26"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_27"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_28"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_29"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_30"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_31"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_32"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_33"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_34"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_35"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_36"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_37"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_38"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_39"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_40"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_41"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_42"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_43"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_44"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_45"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_46"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_47"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_48"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   
<stat Name="MPPLY_BG_SCRIPT_INT_49"  Type="int"  SaveCategory="0" online="true" profile="false" Owner="script" characterStat="false"   Comment= "empty player stats for BG script" />   


<stat Name="BG_SCRIPT_INT_00"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_01"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_02"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_03"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_04"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_05"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_06"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_07"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_08"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_09"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_10"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_11"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_12"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_13"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_14"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_15"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_16"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_17"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_18"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_19"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_20"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_21"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_22"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_23"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_24"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_25"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_26"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_27"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_28"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_29"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_30"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_31"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_32"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_33"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_34"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_35"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_36"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_37"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_38"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_39"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_40"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_41"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_42"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_43"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_44"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_45"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_46"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_47"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_48"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="BG_SCRIPT_INT_49"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= "empty character stats for bg script" />  
<stat Name="HIGHEST_MENTAL_STATE"  Type="int"  SaveCategory="1" online="true" profile="false" Owner="script" characterStat="true"Comment= " store that the player has actually reached the psycho state first." />  

(int)FM_NON_MS_HELP_TEXT8 // Add MP0_ or MP1_ // Tracks if NMH has been displayed
(int)MPPLY_TIMETRIAL_COMPLETED_WEEK //  to record whether a player has completed a Time Trial for that week or not
(int)MPPLY_TIMETRIALBESTTIME //  to record best time trial time
<stat Name="HIDECORONAHELPTEXT" Type="int"  SaveCategory="1" online="true" profile="false"   Owner="script" characterStat="true"   Comment= "Help text to explain why coronas are hidden when a player actively participates during an event" />

(int)CHAR_FM_CLOTHES_1_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 1
(int)CHAR_FM_CLOTHES_2_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 2
(int)CHAR_FM_CLOTHES_3_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 3
(int)CHAR_FM_CLOTHES_4_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 3
(int)CHAR_FM_CLOTHES_5_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 3
(int)CHAR_FM_CLOTHES_6_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 3
(int)CHAR_FM_CLOTHES_7_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 3
(int)CHAR_FM_CLOTHES_8_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 3
(int)CHAR_FM_CLOTHES_9_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 3
(int)CHAR_FM_CLOTHES_10_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 3
(int)CHAR_FM_CLOTHES_11_OWNED // Add MP0_ or MP1_ // MP Char 0 - Player Clothes Owned bitset 3

(int)NUM_FM_EVENTS_PLAYED // Add MP0_ or MP1_ // Tracks how many FMEVENTS have been played

(bool)MPPLY_DLCESP // .

(int)MPPLY_SCADMIN_REWARD // SCADMIN can set which default screen we show for the rewards
(bool)COMPLETEDDAILYOBJECTIVES // Add MP0_ or MP1_ // For martin m's daily objectives
(bool)LOGGEDINTODAY // Add MP0_ or MP1_ // For martin m's daily objectives
(int)DAILYOBJECTIVEXVALUE // Add MP0_ or MP1_ // For martin m's daily objectives
(int)LASTHISTORYLENGTH // Add MP0_ or MP1_ // For martin m's daily objectives
(int)LASTRESETTIME // Add MP0_ or MP1_ // For martin m's daily objectives

(int)OBJECTIVEDAILYOBJECTIVES0 // Add MP0_ or MP1_ // For martin m's daily objectives
(bool)DAILYOBJECTIVESCOMPLETED0 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)DAILYOBJECTIVEINITIALVALUE0 // Add MP0_ or MP1_ // For martin m's daily objectives

(int)OBJECTIVEDAILYOBJECTIVES1 // Add MP0_ or MP1_ // For martin m's daily objectives
(bool)DAILYOBJECTIVESCOMPLETED1 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)DAILYOBJECTIVEINITIALVALUE1 // Add MP0_ or MP1_ // For martin m's daily objectives

(int)OBJECTIVEDAILYOBJECTIVES2 // Add MP0_ or MP1_ // For martin m's daily objectives
(bool)DAILYOBJECTIVESCOMPLETED2 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)DAILYOBJECTIVEINITIALVALUE2 // Add MP0_ or MP1_ // For martin m's daily objectives

(int)OBJECTIVEHISTORY0 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY1 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY2 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY3 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY4 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY5 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY6 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY7 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY8 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY9 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY10 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY11 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY12 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY13 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY14 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY15 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY16 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY17 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY18 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY19 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY20 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY21 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY22 // Add MP0_ or MP1_ // For martin m's daily objectives
(int)OBJECTIVEHISTORY23 // Add MP0_ or MP1_ // For martin m's daily objectives

(bool)DONEDAILYOBJHANDOVER // Add MP0_ or MP1_ // For martin m's daily objectives

(int)COMPLETEDAILYOBJSA // Add MP0_ or MP1_ // Freemode activity phonecall
(int)COMPLETEDAILYOBJTOTALSA // Add MP0_ or MP1_ // Freemode activity phonecall
(int)TOTALDAYCOMPLETEDSA // Add MP0_ or MP1_ // Freemode activity phonecall
(int)TOTALWEEKCOMPLETEDSA // Add MP0_ or MP1_ // Freemode activity phonecall
(int)TOTALMONTHCOMPLETEDSA // Add MP0_ or MP1_ // Freemode activity phonecall
(int)CONSECUTIVEDAYCOMPLETEDSA // Add MP0_ or MP1_ // Freemode activity phonecall
(int)CONSECUTIVEWEEKCOMPLETEDSA // Add MP0_ or MP1_ // Freemode activity phonecall
(int)CONSECUTIVEMONTHCOMPLETESA // Add MP0_ or MP1_ // Freemode activity phonecall

(int)DSP_CTL_PLAYED_BIT_SET // Add MP0_ or MP1_ // For bobby

(int)AWD_DAILYOBJCOMPLETEDSA // Add MP0_ or MP1_ // Daily Objectives Daily Duty  ~1~ Daily Objectives completed. server authoritive version
(bool)AWD_DAILYOBJWEEKBONUSSA // Add MP0_ or MP1_ // Daily Objectives Goal Oriented   Completed a Daily Objective Weekly Bonus.   server authoritive version
(bool)AWD_DAILYOBJMONTHBONUSSA // Add MP0_ or MP1_ // Daily Objectives Over Achiever   Completed a Daily Objective Monthly Bonus   server authoritive version  

(int)DLC_APPAREL_ACQUIRED_51 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_52 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_53 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_54 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_55 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_56 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_57 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_58 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_59 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_60 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_61 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_51 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_52 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_53 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_54 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_55 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_56 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_57 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_58 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_59 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_60 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_61 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)MPPLY_UNLOCK_EXCLUS_CONTENT // Lock exclusive Content

(bool)GIVE_FIREWORK_LAUNCH_AMMO // Add MP0_ or MP1_ // Gives full ammo initially for peeps who already own firework gun

(int)TATTOO_FM_UNLOCKS_17 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_17 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_17 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_18 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_18 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_18 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_19 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_19 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_19 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16

<!-- Lowrider packed -->
(packed)LRPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT105 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT106 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT107 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT108 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT109 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT110 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT111 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT112 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT113 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT114 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT115 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT116 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT117 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT118 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT119 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT120 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT121 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT122 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT123 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT124 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT125 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT126 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT127 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT128 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT129 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT130 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT131 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT132 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT133 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT134 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT135 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT136 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT137 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT138 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT139 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT140 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT141 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT142 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT143 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT144 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT145 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT146 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT147 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT148 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT149 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT150 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT151 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT152 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT153 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT154 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT155 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT156 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT157 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT158 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT159 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT160 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT161 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT162 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT163 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT164 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT165 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT166 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT167 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT168 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT169 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT170 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT171 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT172 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT173 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT174 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT175 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT176 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT177 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT178 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT179 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT180 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT181 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT182 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT183 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT184 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT185 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT186 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT187 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT188 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT189 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT190 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT191 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT192 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT193 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT194 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT195 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT196 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT197 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT198 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT199 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT200 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT201 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT202 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LRPSTAT_INT203 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(int)CHAR_FM_WEAP_ADDON_7_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH7 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_7_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_7_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6


<!-- Vehicle_39-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_39 // Add MP0_ or MP1_ // Vehicle_39 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_39 // Add MP0_ or MP1_ // Vehicle_39 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_39 // Add MP0_ or MP1_ // Vehicle_39 premium paid by destroyer of vehicle
(int)MPSV_MODEL_39 // Add MP0_ or MP1_ // Vehicle_39 model enum of vehicle
(int)MPSV_FLAGS_39 // Add MP0_ or MP1_ // Vehicle_39 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_39 // Add MP0_ or MP1_ // Vehicle_39 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_39 // Add MP0_ or MP1_ // Vehicle_39 licence plate part 0
<!-- Vehicle_40-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_40 // Add MP0_ or MP1_ // Vehicle_40 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_40 // Add MP0_ or MP1_ // Vehicle_40 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_40 // Add MP0_ or MP1_ // Vehicle_40 premium paid by destroyer of vehicle
(int)MPSV_MODEL_40 // Add MP0_ or MP1_ // Vehicle_40 model enum of vehicle
(int)MPSV_FLAGS_40 // Add MP0_ or MP1_ // Vehicle_40 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_40 // Add MP0_ or MP1_ // Vehicle_40 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_40 // Add MP0_ or MP1_ // Vehicle_40 licence plate part 0
<!-- Vehicle_41-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_41 // Add MP0_ or MP1_ // Vehicle_41 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_41 // Add MP0_ or MP1_ // Vehicle_41 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_41 // Add MP0_ or MP1_ // Vehicle_41 premium paid by destroyer of vehicle
(int)MPSV_MODEL_41 // Add MP0_ or MP1_ // Vehicle_41 model enum of vehicle
(int)MPSV_FLAGS_41 // Add MP0_ or MP1_ // Vehicle_41 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_41 // Add MP0_ or MP1_ // Vehicle_41 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_41 // Add MP0_ or MP1_ // Vehicle_41 licence plate part 0
<!-- Vehicle_42-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_42 // Add MP0_ or MP1_ // Vehicle_42 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_42 // Add MP0_ or MP1_ // Vehicle_42 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_42 // Add MP0_ or MP1_ // Vehicle_42 premium paid by destroyer of vehicle
(int)MPSV_MODEL_42 // Add MP0_ or MP1_ // Vehicle_42 model enum of vehicle
(int)MPSV_FLAGS_42 // Add MP0_ or MP1_ // Vehicle_42 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_42 // Add MP0_ or MP1_ // Vehicle_42 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_42 // Add MP0_ or MP1_ // Vehicle_42 licence plate part 0
<!-- Vehicle_43-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_43 // Add MP0_ or MP1_ // Vehicle_43 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_43 // Add MP0_ or MP1_ // Vehicle_43 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_43 // Add MP0_ or MP1_ // Vehicle_43 premium paid by destroyer of vehicle
(int)MPSV_MODEL_43 // Add MP0_ or MP1_ // Vehicle_43 model enum of vehicle
(int)MPSV_FLAGS_43 // Add MP0_ or MP1_ // Vehicle_43 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_43 // Add MP0_ or MP1_ // Vehicle_43 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_43 // Add MP0_ or MP1_ // Vehicle_43 licence plate part 0
<!-- Vehicle_44-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_44 // Add MP0_ or MP1_ // Vehicle_44 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_44 // Add MP0_ or MP1_ // Vehicle_44 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_44 // Add MP0_ or MP1_ // Vehicle_44 premium paid by destroyer of vehicle
(int)MPSV_MODEL_44 // Add MP0_ or MP1_ // Vehicle_44 model enum of vehicle
(int)MPSV_FLAGS_44 // Add MP0_ or MP1_ // Vehicle_44 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_44 // Add MP0_ or MP1_ // Vehicle_44 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_44 // Add MP0_ or MP1_ // Vehicle_44 licence plate part 0
<!-- Vehicle_45-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_45 // Add MP0_ or MP1_ // Vehicle_45 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_45 // Add MP0_ or MP1_ // Vehicle_45 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_45 // Add MP0_ or MP1_ // Vehicle_45 premium paid by destroyer of vehicle
(int)MPSV_MODEL_45 // Add MP0_ or MP1_ // Vehicle_45 model enum of vehicle
(int)MPSV_FLAGS_45 // Add MP0_ or MP1_ // Vehicle_45 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_45 // Add MP0_ or MP1_ // Vehicle_45 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_45 // Add MP0_ or MP1_ // Vehicle_45 licence plate part 0
<!-- Vehicle_46-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_46 // Add MP0_ or MP1_ // Vehicle_46 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_46 // Add MP0_ or MP1_ // Vehicle_46 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_46 // Add MP0_ or MP1_ // Vehicle_46 premium paid by destroyer of vehicle
(int)MPSV_MODEL_46 // Add MP0_ or MP1_ // Vehicle_46 model enum of vehicle
(int)MPSV_FLAGS_46 // Add MP0_ or MP1_ // Vehicle_46 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_46 // Add MP0_ or MP1_ // Vehicle_46 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_46 // Add MP0_ or MP1_ // Vehicle_46 licence plate part 0
<!-- Vehicle_47-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_47 // Add MP0_ or MP1_ // Vehicle_47 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_47 // Add MP0_ or MP1_ // Vehicle_47 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_47 // Add MP0_ or MP1_ // Vehicle_47 premium paid by destroyer of vehicle
(int)MPSV_MODEL_47 // Add MP0_ or MP1_ // Vehicle_47 model enum of vehicle
(int)MPSV_FLAGS_47 // Add MP0_ or MP1_ // Vehicle_47 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_47 // Add MP0_ or MP1_ // Vehicle_47 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_47 // Add MP0_ or MP1_ // Vehicle_47 licence plate part 0
<!-- Vehicle_48-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_48 // Add MP0_ or MP1_ // Vehicle_48 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_48 // Add MP0_ or MP1_ // Vehicle_48 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_48 // Add MP0_ or MP1_ // Vehicle_48 premium paid by destroyer of vehicle
(int)MPSV_MODEL_48 // Add MP0_ or MP1_ // Vehicle_48 model enum of vehicle
(int)MPSV_FLAGS_48 // Add MP0_ or MP1_ // Vehicle_48 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_48 // Add MP0_ or MP1_ // Vehicle_48 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_48 // Add MP0_ or MP1_ // Vehicle_48 licence plate part 0
<!-- Vehicle_49 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_49 // Add MP0_ or MP1_ // Vehicle_49 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_49 // Add MP0_ or MP1_ // Vehicle_49 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_49 // Add MP0_ or MP1_ // Vehicle_49 premium paid by destroyer of vehicle
(int)MPSV_MODEL_49 // Add MP0_ or MP1_ // Vehicle_49 model enum of vehicle
(int)MPSV_FLAGS_49 // Add MP0_ or MP1_ // Vehicle_49 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_49 // Add MP0_ or MP1_ // Vehicle_49 cost of vehicle when purchased
<!-- Vehicle_50 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_50 // Add MP0_ or MP1_ // Vehicle_50 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_50 // Add MP0_ or MP1_ // Vehicle_50 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_50 // Add MP0_ or MP1_ // Vehicle_50 premium paid by destroyer of vehicle
(int)MPSV_MODEL_50 // Add MP0_ or MP1_ // Vehicle_50 model enum of vehicle
(int)MPSV_FLAGS_50 // Add MP0_ or MP1_ // Vehicle_50 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_50 // Add MP0_ or MP1_ // Vehicle_50 cost of vehicle when purchased
<!-- Vehicle_51 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_51 // Add MP0_ or MP1_ // Vehicle_51 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_51 // Add MP0_ or MP1_ // Vehicle_51 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_51 // Add MP0_ or MP1_ // Vehicle_51 premium paid by destroyer of vehicle
(int)MPSV_MODEL_51 // Add MP0_ or MP1_ // Vehicle_51 model enum of vehicle
(int)MPSV_FLAGS_51 // Add MP0_ or MP1_ // Vehicle_51 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_51 // Add MP0_ or MP1_ // Vehicle_51 cost of vehicle when purchased

(int)MPSV_OBTAINED_TIME_39 // Add MP0_ or MP1_ // Vehicle_39 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_40 // Add MP0_ or MP1_ // Vehicle_40 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_41 // Add MP0_ or MP1_ // Vehicle_41 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_42 // Add MP0_ or MP1_ // Vehicle_42 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_43 // Add MP0_ or MP1_ // Vehicle_43 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_44 // Add MP0_ or MP1_ // Vehicle_44 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_45 // Add MP0_ or MP1_ // Vehicle_45 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_46 // Add MP0_ or MP1_ // Vehicle_46 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_47 // Add MP0_ or MP1_ // Vehicle_47 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_48 // Add MP0_ or MP1_ // Vehicle_48 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_49 // Add MP0_ or MP1_ // Vehicle_49 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_50 // Add MP0_ or MP1_ // Vehicle_50 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_51 // Add MP0_ or MP1_ // Vehicle_51 time vehicle was obtained

(int)MULTI_PROPERTY_3 // Add MP0_ or MP1_ // Stores what other property player has purchased +_3
(int)MULTI_PROPERTY_VALUE_3 // Add MP0_ or MP1_ // Stores value other property player has purchased +_3
(int)LOWRIDER_FLOW_COMPLETE // Add MP0_ or MP1_ // the number of times that the flow has been compleated 

<!-- Lowrider Tattoo  stats -->
(packed)NGTATPSTAT_BOOL0 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGTATPSTAT_BOOL1 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGTATPSTAT_BOOL2 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGTATPSTAT_BOOL3 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGTATPSTAT_BOOL4 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGTATPSTAT_BOOL5 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(bool)HAS_WATCHED_BENNY_CUTSCE // Add MP0_ or MP1_ // has seen benny cutscene
(int)CHAR_HAIR_VIEWED13 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_UNLCK13 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 1
(int)CHAR_HAIR_VIEWED14 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_UNLCK14 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 1

<!-- Lowrider flow cutscene stats -->
(bool)LOW_FLOW_CS_DRV_SEEN // Add MP0_ or MP1_ // Seen cutscene LOW_DRV_INT
(bool)LOW_FLOW_CS_TRA_SEEN // Add MP0_ or MP1_ // Seen cutscene LOW_TRA_INT
(bool)LOW_FLOW_CS_FUN_SEEN // Add MP0_ or MP1_ // Seen cutscene LOW_FUN_INT
(bool)LOW_FLOW_CS_PHO_SEEN // Add MP0_ or MP1_ // Seen cutscene LOW_PHO_INT
(bool)LOW_FLOW_CS_FIN_SEEN // Add MP0_ or MP1_ // Seen cutscene LOW_FIN_INT
(int)LOW_FLOW_CS_HELPTEXT // Add MP0_ or MP1_ // Bitset for tracking low flow cutscene helptext prompts

(bool)LOW_BEN_INTRO_CS_SEEN // Add MP0_ or MP1_ // Seen cutscene LOW_FIN_INT

(float)LOW_HYDRAULIC_JUMP // Add MP0_ or MP1_ // Max jump height using hydraulic suspensions.

(int)MONEY_SPENT_BOSS_GOON // Add MP0_ or MP1_ // Money Spent on Boss Goon
(int)MONEY_EARN_BOSS_GOON // Add MP0_ or MP1_ // Money Earnt on Boss Goon
(u64)BOSS_GOON_UUID // Add MP0_ or MP1_ // Universal Unique ID for a Boss
(int)BOSS_GOON_VERSION // Add MP0_ or MP1_ // Boss version

<!-- Heist board participant names (literal strings for PC only) -->
(string)HEIST_MISSION_PLAYER_S_0_0 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 0 player name for sub-slot 0
(string)HEIST_MISSION_PLAYER_S_0_1 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 0 player name for sub-slot 1
(string)HEIST_MISSION_PLAYER_S_0_2 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 0 player name for sub-slot 2
(string)HEIST_MISSION_PLAYER_S_0_3 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 0 player name for sub-slot 3
(string)HEIST_MISSION_PLAYER_S_1_0 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 1 player name for sub-slot 0
(string)HEIST_MISSION_PLAYER_S_1_1 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 1 player name for sub-slot 1
(string)HEIST_MISSION_PLAYER_S_1_2 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 1 player name for sub-slot 2
(string)HEIST_MISSION_PLAYER_S_1_3 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 1 player name for sub-slot 3
(string)HEIST_MISSION_PLAYER_S_2_0 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 2 player name for sub-slot 0
(string)HEIST_MISSION_PLAYER_S_2_1 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 2 player name for sub-slot 1
(string)HEIST_MISSION_PLAYER_S_2_2 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 2 player name for sub-slot 2
(string)HEIST_MISSION_PLAYER_S_2_3 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 2 player name for sub-slot 3
(string)HEIST_MISSION_PLAYER_S_3_0 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 3 player name for sub-slot 0
(string)HEIST_MISSION_PLAYER_S_3_1 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 3 player name for sub-slot 1
(string)HEIST_MISSION_PLAYER_S_3_2 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 3 player name for sub-slot 2
(string)HEIST_MISSION_PLAYER_S_3_3 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 3 player name for sub-slot 3
(string)HEIST_MISSION_PLAYER_S_4_0 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 4 player name for sub-slot 0
(string)HEIST_MISSION_PLAYER_S_4_1 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 4 player name for sub-slot 1
(string)HEIST_MISSION_PLAYER_S_4_2 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 4 player name for sub-slot 2
(string)HEIST_MISSION_PLAYER_S_4_3 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 4 player name for sub-slot 3
(string)HEIST_MISSION_PLAYER_S_5_0 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 5 player name for sub-slot 0
(string)HEIST_MISSION_PLAYER_S_5_1 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 5 player name for sub-slot 1
(string)HEIST_MISSION_PLAYER_S_5_2 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 5 player name for sub-slot 2
(string)HEIST_MISSION_PLAYER_S_5_3 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 5 player name for sub-slot 3
(string)HEIST_MISSION_PLAYER_S_6_0 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 6 player name for sub-slot 0
(string)HEIST_MISSION_PLAYER_S_6_1 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 6 player name for sub-slot 1
(string)HEIST_MISSION_PLAYER_S_6_2 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 6 player name for sub-slot 2
(string)HEIST_MISSION_PLAYER_S_6_3 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 6 player name for sub-slot 3
(string)HEIST_MISSION_PLAYER_S_7_0 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 7 player name for sub-slot 0
(string)HEIST_MISSION_PLAYER_S_7_1 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 7 player name for sub-slot 1
(string)HEIST_MISSION_PLAYER_S_7_2 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 7 player name for sub-slot 2
(string)HEIST_MISSION_PLAYER_S_7_3 // Add MP0_ or MP1_ // Heist Planning - STRING - Set-up mission 7 player name for sub-slot 3

(int)CHAR_KIT_14_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_14_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_14_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE14 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)GB_HTB_PREV_LOC // Add MP0_ or MP1_ // Gang Boss - Hunt the Boss previous location.

<!-- Vehicle_52-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_52 // Add MP0_ or MP1_ // Vehicle_52 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_52 // Add MP0_ or MP1_ // Vehicle_52 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_52 // Add MP0_ or MP1_ // Vehicle_52 premium paid by destroyer of vehicle
(int)MPSV_MODEL_52 // Add MP0_ or MP1_ // Vehicle_52 model enum of vehicle
(int)MPSV_FLAGS_52 // Add MP0_ or MP1_ // Vehicle_52 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_52 // Add MP0_ or MP1_ // Vehicle_52 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_52 // Add MP0_ or MP1_ // Vehicle_52 licence plate part 0
<!-- Vehicle_53-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_53 // Add MP0_ or MP1_ // Vehicle_53 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_53 // Add MP0_ or MP1_ // Vehicle_53 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_53 // Add MP0_ or MP1_ // Vehicle_53 premium paid by destroyer of vehicle
(int)MPSV_MODEL_53 // Add MP0_ or MP1_ // Vehicle_53 model enum of vehicle
(int)MPSV_FLAGS_53 // Add MP0_ or MP1_ // Vehicle_53 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_53 // Add MP0_ or MP1_ // Vehicle_53 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_53 // Add MP0_ or MP1_ // Vehicle_53 licence plate part 0
<!-- Vehicle_54-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_54 // Add MP0_ or MP1_ // Vehicle_54 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_54 // Add MP0_ or MP1_ // Vehicle_54 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_54 // Add MP0_ or MP1_ // Vehicle_54 premium paid by destroyer of vehicle
(int)MPSV_MODEL_54 // Add MP0_ or MP1_ // Vehicle_54 model enum of vehicle
(int)MPSV_FLAGS_54 // Add MP0_ or MP1_ // Vehicle_54 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_54 // Add MP0_ or MP1_ // Vehicle_54 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_54 // Add MP0_ or MP1_ // Vehicle_54 licence plate part 0
<!-- Vehicle_55-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_55 // Add MP0_ or MP1_ // Vehicle_55 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_55 // Add MP0_ or MP1_ // Vehicle_55 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_55 // Add MP0_ or MP1_ // Vehicle_55 premium paid by destroyer of vehicle
(int)MPSV_MODEL_55 // Add MP0_ or MP1_ // Vehicle_55 model enum of vehicle
(int)MPSV_FLAGS_55 // Add MP0_ or MP1_ // Vehicle_55 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_55 // Add MP0_ or MP1_ // Vehicle_55 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_55 // Add MP0_ or MP1_ // Vehicle_55 licence plate part 0
<!-- Vehicle_56-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_56 // Add MP0_ or MP1_ // Vehicle_56 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_56 // Add MP0_ or MP1_ // Vehicle_56 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_56 // Add MP0_ or MP1_ // Vehicle_56 premium paid by destroyer of vehicle
(int)MPSV_MODEL_56 // Add MP0_ or MP1_ // Vehicle_56 model enum of vehicle
(int)MPSV_FLAGS_56 // Add MP0_ or MP1_ // Vehicle_56 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_56 // Add MP0_ or MP1_ // Vehicle_56 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_56 // Add MP0_ or MP1_ // Vehicle_56 licence plate part 0
<!-- Vehicle_57-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_57 // Add MP0_ or MP1_ // Vehicle_57 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_57 // Add MP0_ or MP1_ // Vehicle_57 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_57 // Add MP0_ or MP1_ // Vehicle_57 premium paid by destroyer of vehicle
(int)MPSV_MODEL_57 // Add MP0_ or MP1_ // Vehicle_57 model enum of vehicle
(int)MPSV_FLAGS_57 // Add MP0_ or MP1_ // Vehicle_57 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_57 // Add MP0_ or MP1_ // Vehicle_57 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_57 // Add MP0_ or MP1_ // Vehicle_57 licence plate part 0
<!-- Vehicle_58-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_58 // Add MP0_ or MP1_ // Vehicle_58 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_58 // Add MP0_ or MP1_ // Vehicle_58 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_58 // Add MP0_ or MP1_ // Vehicle_58 premium paid by destroyer of vehicle
(int)MPSV_MODEL_58 // Add MP0_ or MP1_ // Vehicle_58 model enum of vehicle
(int)MPSV_FLAGS_58 // Add MP0_ or MP1_ // Vehicle_58 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_58 // Add MP0_ or MP1_ // Vehicle_58 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_58 // Add MP0_ or MP1_ // Vehicle_58 licence plate part 0
<!-- Vehicle_59-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_59 // Add MP0_ or MP1_ // Vehicle_59 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_59 // Add MP0_ or MP1_ // Vehicle_59 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_59 // Add MP0_ or MP1_ // Vehicle_59 premium paid by destroyer of vehicle
(int)MPSV_MODEL_59 // Add MP0_ or MP1_ // Vehicle_59 model enum of vehicle
(int)MPSV_FLAGS_59 // Add MP0_ or MP1_ // Vehicle_59 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_59 // Add MP0_ or MP1_ // Vehicle_59 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_59 // Add MP0_ or MP1_ // Vehicle_59 licence plate part 0
<!-- Vehicle_60-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_60 // Add MP0_ or MP1_ // Vehicle_60 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_60 // Add MP0_ or MP1_ // Vehicle_60 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_60 // Add MP0_ or MP1_ // Vehicle_60 premium paid by destroyer of vehicle
(int)MPSV_MODEL_60 // Add MP0_ or MP1_ // Vehicle_60 model enum of vehicle
(int)MPSV_FLAGS_60 // Add MP0_ or MP1_ // Vehicle_60 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_60 // Add MP0_ or MP1_ // Vehicle_60 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_60 // Add MP0_ or MP1_ // Vehicle_60 licence plate part 0
<!-- Vehicle_61-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_61 // Add MP0_ or MP1_ // Vehicle_61 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_61 // Add MP0_ or MP1_ // Vehicle_61 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_61 // Add MP0_ or MP1_ // Vehicle_61 premium paid by destroyer of vehicle
(int)MPSV_MODEL_61 // Add MP0_ or MP1_ // Vehicle_61 model enum of vehicle
(int)MPSV_FLAGS_61 // Add MP0_ or MP1_ // Vehicle_61 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_61 // Add MP0_ or MP1_ // Vehicle_61 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_61 // Add MP0_ or MP1_ // Vehicle_61 licence plate part 0
<!-- Vehicle_62 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_62 // Add MP0_ or MP1_ // Vehicle_62 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_62 // Add MP0_ or MP1_ // Vehicle_62 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_62 // Add MP0_ or MP1_ // Vehicle_62 premium paid by destroyer of vehicle
(int)MPSV_MODEL_62 // Add MP0_ or MP1_ // Vehicle_62 model enum of vehicle
(int)MPSV_FLAGS_62 // Add MP0_ or MP1_ // Vehicle_62 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_62 // Add MP0_ or MP1_ // Vehicle_62 cost of vehicle when purchased
<!-- Vehicle_63 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_63 // Add MP0_ or MP1_ // Vehicle_63 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_63 // Add MP0_ or MP1_ // Vehicle_63 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_63 // Add MP0_ or MP1_ // Vehicle_63 premium paid by destroyer of vehicle
(int)MPSV_MODEL_63 // Add MP0_ or MP1_ // Vehicle_63 model enum of vehicle
(int)MPSV_FLAGS_63 // Add MP0_ or MP1_ // Vehicle_63 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_63 // Add MP0_ or MP1_ // Vehicle_63 cost of vehicle when purchased
<!-- Vehicle_64 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_64 // Add MP0_ or MP1_ // Vehicle_64 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_64 // Add MP0_ or MP1_ // Vehicle_64 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_64 // Add MP0_ or MP1_ // Vehicle_64 premium paid by destroyer of vehicle
(int)MPSV_MODEL_64 // Add MP0_ or MP1_ // Vehicle_64 model enum of vehicle
(int)MPSV_FLAGS_64 // Add MP0_ or MP1_ // Vehicle_64 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_64 // Add MP0_ or MP1_ // Vehicle_64 cost of vehicle when purchased

(int)MPSV_OBTAINED_TIME_52 // Add MP0_ or MP1_ // Vehicle_52 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_53 // Add MP0_ or MP1_ // Vehicle_53 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_54 // Add MP0_ or MP1_ // Vehicle_54 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_55 // Add MP0_ or MP1_ // Vehicle_55 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_56 // Add MP0_ or MP1_ // Vehicle_56 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_57 // Add MP0_ or MP1_ // Vehicle_57 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_58 // Add MP0_ or MP1_ // Vehicle_58 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_59 // Add MP0_ or MP1_ // Vehicle_59 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_60 // Add MP0_ or MP1_ // Vehicle_60 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_61 // Add MP0_ or MP1_ // Vehicle_61 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_62 // Add MP0_ or MP1_ // Vehicle_62 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_63 // Add MP0_ or MP1_ // Vehicle_63 time vehicle was obtained
(int)MPSV_OBTAINED_TIME_64 // Add MP0_ or MP1_ // Vehicle_64 time vehicle was obtained

(int)APPARTMENT_VAR_0 // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)APPARTMENT_VAR_1 // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)APPARTMENT_VAR_2 // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)APPARTMENT_VAR_3 // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)APPARTMENT_VAR_4 // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack

(int)MULTI_PROPERTY_4 // Add MP0_ or MP1_ // Stores what other property player has purchased +_3
(int)MULTI_PROPERTY_VALUE_4 // Add MP0_ or MP1_ // Stores value other property player has purchased +_3

(packed)APAPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT105 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT106 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)APAPSTAT_INT107 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers

(int)INV_YACHT_MODEL_0 // Add MP0_ or MP1_ // SA Stat for yacht model
(int)INV_YACHT_NAME_ID // Add MP0_ or MP1_ // SA Stat for yacht model
(int)HELPBEASTVSSLASHER // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPCOMEOUTTOPLAY // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPCROSSTHELINE // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPDROPZONE // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPEVERYBULLETCOUNTS // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPEXTRACTION // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPHASTALAVISTA // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPHUNTINGPACK // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPKEEPTHEPACE // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPOFFENSEDEFENSE // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPRELAY // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPRUNNINGBACK // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPSEIGEMENTALITY // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)HELPSLASHER // Add MP0_ or MP1_ //  track the number of occurrences for each adversary mission.
(int)GB_ASSAULT_CD // Add MP0_ or MP1_ //  Local Player is able to run Piracy Prevention multiple times within 1 hour with no cool down.
(int)GB_BELLY_CD // Add MP0_ or MP1_ //  Local Player is able to run Piracy Prevention multiple times within 1 hour with no cool down.
(int)GB_BOSS_DM_CD // Add MP0_ or MP1_ //  Local Player is able to run Piracy Prevention multiple times within 1 hour with no cool down.
(int)GB_HUNT_CD // Add MP0_ or MP1_ //  Local Player is able to run Piracy Prevention multiple times within 1 hour with no cool down.
(int)GB_SEER_CD // Add MP0_ or MP1_ //  Local Player is able to run Piracy Prevention multiple times within 1 hour with no cool down.
(int)GB_YACHT_CD // Add MP0_ or MP1_ //  Local Player is able to run Piracy Prevention multiple times within 1 hour with no cool down.
(int)HELPBEMYVALEN // Add MP0_ or MP1_ //  Stats to track help for Be My Valentine Adversary mode reminder invite
(bool)FILM4SHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)FILM5SHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)FILM6SHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)FILM7SHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)FILM8SHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)FILM9SHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(int)HELPDAVE_GOLIATH // Add MP0_ or MP1_ //  Stats to track help for Be My Valentine Adversary mode reminder invite
(bool)REBUILDSCPLATELIST // Add MP0_ or MP1_ //  To let SC admin know if we need to Edit Licence plates
(int)REWARDTRANSACTION_CATKEY_0 // Add MP0_ or MP1_ //  Catalog Item Key that sits in the queue of items awarded via transaction at position 0
(int)REWARDTRANSACTION_CATKEY_1 // Add MP0_ or MP1_ //  Catalog Item Key that sits in the queue of items awarded via transaction at position 1
(int)REWARDTRANSACTION_CATKEY_2 // Add MP0_ or MP1_ //  Catalog Item Key that sits in the queue of items awarded via transaction at position 2
(int)REWARDTRANSACTION_CATKEY_3 // Add MP0_ or MP1_ //  Catalog Item Key that sits in the queue of items awarded via transaction at position 3
(bool)REWARDTRANSACTION_SYNCED // Add MP0_ or MP1_ //  Were catalog item keys synced at least once with transaction queue? ie do saved catalog item keys contain something else than defaults

(int)DLC_APPAREL_ACQUIRED_62 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_63 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_64 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_65 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_66 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_67 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_62 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_63 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_64 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_65 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_66 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_67 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)ADVERSARY_PROMO_HELP1 // Add MP0_ or MP1_ // Help text display
(int)ADVERSARY_PROMO_HELP2 // Add MP0_ or MP1_ // Help text display
(int)ADVERSARY_PROMO_HELP3 // Add MP0_ or MP1_ // Help text display
(int)YACHT_DOCK_HELP_MESSAGES // Add MP0_ or MP1_ // Help text display

(packed)LR2PSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LR2PSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LR2PSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LR2PSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LR2PSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LR2PSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)LR2PSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(int)SELL_MISSION_ON_MISS_HELP // Add MP0_ or MP1_ // Help text display
(int)SELL_MISSION_OFF_MISS_HELP // Add MP0_ or MP1_ // Help text display

(int)PROP_OFFICE_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_OFFICE_PERSONNEL // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_OFFICE_LOCKER_GUN // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_OFFICE_LOCKER_CASH // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_OFFICE_ACCOMMODATION // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_OFFICE_NAME_ID // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack

(int)PROP_OFFICE // Add MP0_ or MP1_ // Stores what other property player has purchased +_4
(int)PROP_OFFICE_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_4

<!-- Biker DLC stats -->
(int)PROP_CLUBHOUSE_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_CLUBHOUSE // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_CLUBHOUSE_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5

(int)MULTI_PROPERTY_5 // Add MP0_ or MP1_ // Stores what other property player has purchased +_3
(int)MULTI_PROPERTY_VALUE_5 // Add MP0_ or MP1_ // Stores value other property player has purchased +_3
(int)APPARTMENT_VAR_5 // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack


<!-- Vehicle_65-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_65 // Add MP0_ or MP1_ // Vehicle_65 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_65 // Add MP0_ or MP1_ // Vehicle_65 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_65 // Add MP0_ or MP1_ // Vehicle_65 premium paid by destroyer of vehicle
(int)MPSV_MODEL_65 // Add MP0_ or MP1_ // Vehicle_65 model enum of vehicle
(int)MPSV_FLAGS_65 // Add MP0_ or MP1_ // Vehicle_65 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_65 // Add MP0_ or MP1_ // Vehicle_65 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_65 // Add MP0_ or MP1_ // Vehicle_65 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_65 // Add MP0_ or MP1_ // Vehicle_65 licence plate part 0
<!-- Vehicle_66-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_66 // Add MP0_ or MP1_ // Vehicle_66 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_66 // Add MP0_ or MP1_ // Vehicle_66 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_66 // Add MP0_ or MP1_ // Vehicle_66 premium paid by destroyer of vehicle
(int)MPSV_MODEL_66 // Add MP0_ or MP1_ // Vehicle_66 model enum of vehicle
(int)MPSV_FLAGS_66 // Add MP0_ or MP1_ // Vehicle_66 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_66 // Add MP0_ or MP1_ // Vehicle_66 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_66 // Add MP0_ or MP1_ // Vehicle_66 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_66 // Add MP0_ or MP1_ // Vehicle_66 licence plate part 0
<!-- Vehicle_67-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_67 // Add MP0_ or MP1_ // Vehicle_67 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_67 // Add MP0_ or MP1_ // Vehicle_67 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_67 // Add MP0_ or MP1_ // Vehicle_67 premium paid by destroyer of vehicle
(int)MPSV_MODEL_67 // Add MP0_ or MP1_ // Vehicle_67 model enum of vehicle
(int)MPSV_FLAGS_67 // Add MP0_ or MP1_ // Vehicle_67 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_67 // Add MP0_ or MP1_ // Vehicle_67 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_67 // Add MP0_ or MP1_ // Vehicle_67 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_67 // Add MP0_ or MP1_ // Vehicle_67 licence plate part 0
<!-- Vehicle_68-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_68 // Add MP0_ or MP1_ // Vehicle_68 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_68 // Add MP0_ or MP1_ // Vehicle_68 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_68 // Add MP0_ or MP1_ // Vehicle_68 premium paid by destroyer of vehicle
(int)MPSV_MODEL_68 // Add MP0_ or MP1_ // Vehicle_68 model enum of vehicle
(int)MPSV_FLAGS_68 // Add MP0_ or MP1_ // Vehicle_68 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_68 // Add MP0_ or MP1_ // Vehicle_68 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_68 // Add MP0_ or MP1_ // Vehicle_68 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_68 // Add MP0_ or MP1_ // Vehicle_68 licence plate part 0
<!-- Vehicle_69-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_69 // Add MP0_ or MP1_ // Vehicle_69 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_69 // Add MP0_ or MP1_ // Vehicle_69 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_69 // Add MP0_ or MP1_ // Vehicle_69 premium paid by destroyer of vehicle
(int)MPSV_MODEL_69 // Add MP0_ or MP1_ // Vehicle_69 model enum of vehicle
(int)MPSV_FLAGS_69 // Add MP0_ or MP1_ // Vehicle_69 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_69 // Add MP0_ or MP1_ // Vehicle_69 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_69 // Add MP0_ or MP1_ // Vehicle_69 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_69 // Add MP0_ or MP1_ // Vehicle_69 licence plate part 0
<!-- Vehicle_70-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_70 // Add MP0_ or MP1_ // Vehicle_70 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_70 // Add MP0_ or MP1_ // Vehicle_70 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_70 // Add MP0_ or MP1_ // Vehicle_70 premium paid by destroyer of vehicle
(int)MPSV_MODEL_70 // Add MP0_ or MP1_ // Vehicle_70 model enum of vehicle
(int)MPSV_FLAGS_70 // Add MP0_ or MP1_ // Vehicle_70 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_70 // Add MP0_ or MP1_ // Vehicle_70 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_70 // Add MP0_ or MP1_ // Vehicle_70 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_70 // Add MP0_ or MP1_ // Vehicle_70 licence plate part 0
<!-- Vehicle_71-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_71 // Add MP0_ or MP1_ // Vehicle_71 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_71 // Add MP0_ or MP1_ // Vehicle_71 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_71 // Add MP0_ or MP1_ // Vehicle_71 premium paid by destroyer of vehicle
(int)MPSV_MODEL_71 // Add MP0_ or MP1_ // Vehicle_71 model enum of vehicle
(int)MPSV_FLAGS_71 // Add MP0_ or MP1_ // Vehicle_71 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_71 // Add MP0_ or MP1_ // Vehicle_71 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_71 // Add MP0_ or MP1_ // Vehicle_71 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_71 // Add MP0_ or MP1_ // Vehicle_71 licence plate part 0
<!-- Vehicle_72-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_72 // Add MP0_ or MP1_ // Vehicle_72 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_72 // Add MP0_ or MP1_ // Vehicle_72 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_72 // Add MP0_ or MP1_ // Vehicle_72 premium paid by destroyer of vehicle
(int)MPSV_MODEL_72 // Add MP0_ or MP1_ // Vehicle_72 model enum of vehicle
(int)MPSV_FLAGS_72 // Add MP0_ or MP1_ // Vehicle_72 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_72 // Add MP0_ or MP1_ // Vehicle_72 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_72 // Add MP0_ or MP1_ // Vehicle_72 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_72 // Add MP0_ or MP1_ // Vehicle_72 licence plate part 0
<!-- Vehicle_73-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_73 // Add MP0_ or MP1_ // Vehicle_73 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_73 // Add MP0_ or MP1_ // Vehicle_73 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_73 // Add MP0_ or MP1_ // Vehicle_73 premium paid by destroyer of vehicle
(int)MPSV_MODEL_73 // Add MP0_ or MP1_ // Vehicle_73 model enum of vehicle
(int)MPSV_FLAGS_73 // Add MP0_ or MP1_ // Vehicle_73 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_73 // Add MP0_ or MP1_ // Vehicle_73 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_73 // Add MP0_ or MP1_ // Vehicle_73 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_73 // Add MP0_ or MP1_ // Vehicle_73 licence plate part 0
<!-- Vehicle_74-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_74 // Add MP0_ or MP1_ // Vehicle_74 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_74 // Add MP0_ or MP1_ // Vehicle_74 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_74 // Add MP0_ or MP1_ // Vehicle_74 premium paid by destroyer of vehicle
(int)MPSV_MODEL_74 // Add MP0_ or MP1_ // Vehicle_74 model enum of vehicle
(int)MPSV_FLAGS_74 // Add MP0_ or MP1_ // Vehicle_74 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_74 // Add MP0_ or MP1_ // Vehicle_74 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_74 // Add MP0_ or MP1_ // Vehicle_74 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_74 // Add MP0_ or MP1_ // Vehicle_74 licence plate part 0

<!-- Vehicle_75-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_75 // Add MP0_ or MP1_ // Vehicle_75 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_75 // Add MP0_ or MP1_ // Vehicle_75 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_75 // Add MP0_ or MP1_ // Vehicle_75 premium paid by destroyer of vehicle
(int)MPSV_MODEL_75 // Add MP0_ or MP1_ // Vehicle_75 model enum of vehicle
(int)MPSV_FLAGS_75 // Add MP0_ or MP1_ // Vehicle_75 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_75 // Add MP0_ or MP1_ // Vehicle_75 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_75 // Add MP0_ or MP1_ // Vehicle_75 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_75 // Add MP0_ or MP1_ // Vehicle_75 licence plate part 0
<!-- Vehicle_76-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_76 // Add MP0_ or MP1_ // Vehicle_76 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_76 // Add MP0_ or MP1_ // Vehicle_76 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_76 // Add MP0_ or MP1_ // Vehicle_76 premium paid by destroyer of vehicle
(int)MPSV_MODEL_76 // Add MP0_ or MP1_ // Vehicle_76 model enum of vehicle
(int)MPSV_FLAGS_76 // Add MP0_ or MP1_ // Vehicle_76 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_76 // Add MP0_ or MP1_ // Vehicle_76 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_76 // Add MP0_ or MP1_ // Vehicle_76 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_76 // Add MP0_ or MP1_ // Vehicle_76 licence plate part 0
<!-- Vehicle_77-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_77 // Add MP0_ or MP1_ // Vehicle_77 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_77 // Add MP0_ or MP1_ // Vehicle_77 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_77 // Add MP0_ or MP1_ // Vehicle_77 premium paid by destroyer of vehicle
(int)MPSV_MODEL_77 // Add MP0_ or MP1_ // Vehicle_77 model enum of vehicle
(int)MPSV_FLAGS_77 // Add MP0_ or MP1_ // Vehicle_77 bitset of vehicle flags associated with mods
(int)MPSV_OBTAINED_TIME_77 // Add MP0_ or MP1_ // Vehicle_77 time vehicle was obtained
(int)MPSV_PRICE_PAID_77 // Add MP0_ or MP1_ // Vehicle_77 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_77 // Add MP0_ or MP1_ // Vehicle_77 licence plate part 0
<!-- Vehicle_78-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_78 // Add MP0_ or MP1_ // Vehicle_78 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_78 // Add MP0_ or MP1_ // Vehicle_78 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_78 // Add MP0_ or MP1_ // Vehicle_78 premium paid by destroyer of vehicle
(int)MPSV_MODEL_78 // Add MP0_ or MP1_ // Vehicle_78 model enum of vehicle
(int)MPSV_FLAGS_78 // Add MP0_ or MP1_ // Vehicle_78 bitset of vehicle flags associated with mods
(int)MPSV_OBTAINED_TIME_78 // Add MP0_ or MP1_ // Vehicle_78 time vehicle was obtained
(int)MPSV_PRICE_PAID_78 // Add MP0_ or MP1_ // Vehicle_78 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_78 // Add MP0_ or MP1_ // Vehicle_78 licence plate part 0
<!-- Vehicle_79-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_79 // Add MP0_ or MP1_ // Vehicle_79 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_79 // Add MP0_ or MP1_ // Vehicle_79 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_79 // Add MP0_ or MP1_ // Vehicle_79 premium paid by destroyer of vehicle
(int)MPSV_MODEL_79 // Add MP0_ or MP1_ // Vehicle_79 model enum of vehicle
(int)MPSV_FLAGS_79 // Add MP0_ or MP1_ // Vehicle_79 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_79 // Add MP0_ or MP1_ // Vehicle_79 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_79 // Add MP0_ or MP1_ // Vehicle_79 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_79 // Add MP0_ or MP1_ // Vehicle_79 licence plate part 0
<!-- Vehicle_80-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_80 // Add MP0_ or MP1_ // Vehicle_80 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_80 // Add MP0_ or MP1_ // Vehicle_80 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_80 // Add MP0_ or MP1_ // Vehicle_80 premium paid by destroyer of vehicle
(int)MPSV_MODEL_80 // Add MP0_ or MP1_ // Vehicle_80 model enum of vehicle
(int)MPSV_FLAGS_80 // Add MP0_ or MP1_ // Vehicle_80 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_80 // Add MP0_ or MP1_ // Vehicle_80 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_80 // Add MP0_ or MP1_ // Vehicle_80 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_80 // Add MP0_ or MP1_ // Vehicle_80 licence plate part 0
<!-- Vehicle_81-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_81 // Add MP0_ or MP1_ // Vehicle_81 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_81 // Add MP0_ or MP1_ // Vehicle_81 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_81 // Add MP0_ or MP1_ // Vehicle_81 premium paid by destroyer of vehicle
(int)MPSV_MODEL_81 // Add MP0_ or MP1_ // Vehicle_81 model enum of vehicle
(int)MPSV_FLAGS_81 // Add MP0_ or MP1_ // Vehicle_81 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_81 // Add MP0_ or MP1_ // Vehicle_81 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_81 // Add MP0_ or MP1_ // Vehicle_81 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_81 // Add MP0_ or MP1_ // Vehicle_81 licence plate part 0
<!-- Vehicle_82-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_82 // Add MP0_ or MP1_ // Vehicle_82 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_82 // Add MP0_ or MP1_ // Vehicle_82 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_82 // Add MP0_ or MP1_ // Vehicle_82 premium paid by destroyer of vehicle
(int)MPSV_MODEL_82 // Add MP0_ or MP1_ // Vehicle_82 model enum of vehicle
(int)MPSV_FLAGS_82 // Add MP0_ or MP1_ // Vehicle_82 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_82 // Add MP0_ or MP1_ // Vehicle_82 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_82 // Add MP0_ or MP1_ // Vehicle_82 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_82 // Add MP0_ or MP1_ // Vehicle_82 licence plate part 0
<!-- Vehicle_83-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_83 // Add MP0_ or MP1_ // Vehicle_83 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_83 // Add MP0_ or MP1_ // Vehicle_83 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_83 // Add MP0_ or MP1_ // Vehicle_83 premium paid by destroyer of vehicle
(int)MPSV_MODEL_83 // Add MP0_ or MP1_ // Vehicle_83 model enum of vehicle
(int)MPSV_FLAGS_83 // Add MP0_ or MP1_ // Vehicle_83 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_83 // Add MP0_ or MP1_ // Vehicle_83 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_83 // Add MP0_ or MP1_ // Vehicle_83 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_83 // Add MP0_ or MP1_ // Vehicle_83 licence plate part 0
<!-- Vehicle_84-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_84 // Add MP0_ or MP1_ // Vehicle_84 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_84 // Add MP0_ or MP1_ // Vehicle_84 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_84 // Add MP0_ or MP1_ // Vehicle_84 premium paid by destroyer of vehicle
(int)MPSV_MODEL_84 // Add MP0_ or MP1_ // Vehicle_84 model enum of vehicle
(int)MPSV_FLAGS_84 // Add MP0_ or MP1_ // Vehicle_84 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_84 // Add MP0_ or MP1_ // Vehicle_84 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_84 // Add MP0_ or MP1_ // Vehicle_84 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_84 // Add MP0_ or MP1_ // Vehicle_84 licence plate part 0
<!-- Vehicle_85 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_85 // Add MP0_ or MP1_ // Vehicle_85 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_85 // Add MP0_ or MP1_ // Vehicle_85 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_85 // Add MP0_ or MP1_ // Vehicle_85 premium paid by destroyer of vehicle
(int)MPSV_MODEL_85 // Add MP0_ or MP1_ // Vehicle_85 model enum of vehicle
(int)MPSV_FLAGS_85 // Add MP0_ or MP1_ // Vehicle_85 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_85 // Add MP0_ or MP1_ // Vehicle_85 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_85 // Add MP0_ or MP1_ // Vehicle_85 time vehicle was obtained
<!-- Vehicle_86 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_86 // Add MP0_ or MP1_ // Vehicle_86 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_86 // Add MP0_ or MP1_ // Vehicle_86 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_86 // Add MP0_ or MP1_ // Vehicle_86 premium paid by destroyer of vehicle
(int)MPSV_MODEL_86 // Add MP0_ or MP1_ // Vehicle_86 model enum of vehicle
(int)MPSV_FLAGS_86 // Add MP0_ or MP1_ // Vehicle_86 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_86 // Add MP0_ or MP1_ // Vehicle_86 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_86 // Add MP0_ or MP1_ // Vehicle_86 time vehicle was obtained
<!-- Vehicle_87 (CYCLE)-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_87 // Add MP0_ or MP1_ // Vehicle_87 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_87 // Add MP0_ or MP1_ // Vehicle_87 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_87 // Add MP0_ or MP1_ // Vehicle_87 premium paid by destroyer of vehicle
(int)MPSV_MODEL_87 // Add MP0_ or MP1_ // Vehicle_87 model enum of vehicle
(int)MPSV_FLAGS_87 // Add MP0_ or MP1_ // Vehicle_87 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_87 // Add MP0_ or MP1_ // Vehicle_87 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_87 // Add MP0_ or MP1_ // Vehicle_87 time vehicle was obtained


(packed)BIKEPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT105 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT106 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT107 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT108 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT109 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT110 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT111 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT112 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT113 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT114 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT115 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT116 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT117 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT118 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT119 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT120 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT121 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT122 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT123 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT124 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT125 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT126 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT127 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT128 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT129 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT130 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT131 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT132 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT133 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT134 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT135 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT136 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT137 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT138 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT139 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT140 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT141 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT142 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT143 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT144 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT145 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT146 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT147 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT148 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT149 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT150 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT151 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT152 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT153 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT154 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT155 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT156 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT157 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT158 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT159 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT160 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT161 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT162 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT163 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT164 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT165 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT166 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT167 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT168 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT169 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT170 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT171 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT172 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT173 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT174 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT175 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT176 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT177 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT178 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT179 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT180 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT181 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT182 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT183 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT184 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT185 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT186 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT187 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT188 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT189 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT190 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT191 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT192 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT193 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT194 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT195 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT196 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT197 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT198 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT199 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT200 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT201 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT202 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT203 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT204 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT205 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT206 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT207 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT208 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT209 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BIKEPSTAT_INT210 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers

<!-- NG Update additions -->
(packed)MP_NGDLCPSTAT_INT0 // Stat with Packed integers index 0. Takes up to 8 integers.

(packed)NGDLCPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGDLCPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGDLCPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGDLCPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers
(packed)NGDLCPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 4. Takes up to 8 integers

(packed)MP_NGDLCPSTAT_BOOL0 // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGDLCPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGDLCPSTAT_BOOL1 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGDLCPSTAT_BOOL2 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)NGDLCPSTAT_BOOL3 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.

(int)WARHOUSESLOT0 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)WARHOUSESLOT1 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)WARHOUSESLOT2 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)WARHOUSESLOT3 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)WARHOUSESLOT4 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)CONTOTALFORWHOUSE0 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)CONTOTALFORWHOUSE1 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)CONTOTALFORWHOUSE2 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)CONTOTALFORWHOUSE3 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)CONTOTALFORWHOUSE4 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.

(int)SPCONTOTALFORWHOUSE0 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)SPCONTOTALFORWHOUSE1 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)SPCONTOTALFORWHOUSE2 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)SPCONTOTALFORWHOUSE3 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)SPCONTOTALFORWHOUSE4 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.

(int)MISSIONFORWHOUSE0 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)MISSIONFORWHOUSE1 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)MISSIONFORWHOUSE2 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)MISSIONFORWHOUSE3 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.
(int)MISSIONFORWHOUSE4 // Add MP0_ or MP1_ // Server authoritative stats for warehouse and contraband ownership setup.

(int)TIMELASTSUCCSELLMISSION // Add MP0_ or MP1_ // Help text display
(int)MPPLY_VIPGAMEPLAYDISABLEDTIMER //  cooldown before players can participate in VIP gameplay after griefing
(int)TIMELASTSUCCBUYMISSION // Add MP0_ or MP1_ // track the buy mission cooldown
(int)TIMELASTSUCCBUYMISSION0 // Add MP0_ or MP1_ // track the buy mission cooldown
(int)TIMELASTSUCCBUYMISSION1 // Add MP0_ or MP1_ // track the buy mission cooldown
(int)TIMELASTSUCCBUYMISSION2 // Add MP0_ or MP1_ // track the buy mission cooldown
(int)TIMELASTSUCCBUYMISSION3 // Add MP0_ or MP1_ // track the buy mission cooldown
(int)TIMELASTSUCCBUYMISSION4 // Add MP0_ or MP1_ // track the buy mission cooldown
(int)NUMBUYMISSIONSCOMPLETED // Add MP0_ or MP1_ // track the buy mission cooldown
(string)GB_OFFICE_NAME // Add MP0_ or MP1_ // players office name
(int)LIFETIME_BUY_COMPLETE // Add MP0_ or MP1_ //  track lifetime mission progress
(int)LIFETIME_BUY_UNDERTAKEN // Add MP0_ or MP1_ //  track lifetime mission progress
(int)LIFETIME_SELL_COMPLETE // Add MP0_ or MP1_ //  track lifetime mission progress
(int)LIFETIME_SELL_UNDERTAKEN // Add MP0_ or MP1_ //  track lifetime mission progress
(int)LIFETIME_CONTRA_EARNINGS // Add MP0_ or MP1_ //  track lifetime mission progress

(int)DLC_APPAREL_ACQUIRED_68 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_69 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_70 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_71 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_72 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_73 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_74 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_75 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_76 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_77 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_68 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_69 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_70 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_71 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_72 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_73 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_74 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_75 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_76 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_77 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DELIVERY_VEH_UPGRADES // Add MP0_ or MP1_ //  store delivery vehicle upgrades 
(bool)ACCOUNTANTSHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)BAHAMAMAMASHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)DRONESHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)GROTTISHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)GOLFSHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)MAISONETTESHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)MANOPAUSESHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)MELTDOWNSHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)PACIFICBLUFFSSHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)PROLAPSSHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)TENNISSHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)TOESHOESSHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)VANILLAUNICORNSHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)MARLOWESHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards
(bool)CRESTSHIRTUNLOCK // Add MP0_ or MP1_ //  log in item rewards

(int)ADMIN_VEH_GV_BS_9 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 9 set by SCADMIN
(int)ADMIN_VEH_RM_BS_9 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 9 set by SCADMIN

(int)ADMIN_VEH_GV_BS_10 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 9 set by SCADMIN
(int)ADMIN_VEH_RM_BS_10 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 9 set by SCADMIN

(int)ADMIN_VEH_GV_BS_11 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 9 set by SCADMIN
(int)ADMIN_VEH_RM_BS_11 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 9 set by SCADMIN

(int)ADMIN_VEH_GV_BS_12 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 9 set by SCADMIN
(int)ADMIN_VEH_RM_BS_12 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 9 set by SCADMIN

(int)ADMIN_VEH_GV_BS_13 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 9 set by SCADMIN
(int)ADMIN_VEH_RM_BS_13 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 9 set by SCADMIN

(int)ADMIN_VEH_GV_BS_14 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 9 set by SCADMIN
(int)ADMIN_VEH_RM_BS_14 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 9 set by SCADMIN


(int)ADMIN_VEH_GV_BS_15 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 9 set by SCADMIN
(int)ADMIN_VEH_RM_BS_15 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 9 set by SCADMIN

(int)ADMIN_VEH_GV_BS_16 // Add MP0_ or MP1_ // Give the player a vehicles in bitset 9 set by SCADMIN
(int)ADMIN_VEH_RM_BS_16 // Add MP0_ or MP1_ // Remove from the player a buyable veh in bitset 9 set by SCADMIN


(string)GB_OFFICE_NAME2 // Add MP0_ or MP1_ // players office name 2
(int)FONT_PLAYER_OFFICE // Add MP0_ or MP1_ //  log in item rewards
(int)COLOUR_PLAYER_OFFICE // Add MP0_ or MP1_ //  log in item rewards

(u64)WAREHOUSE_CRATES0 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES1 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES2 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES3 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES4 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES5 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES6 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES7 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES8 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES9 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES10 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES11 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES12 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES13 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES14 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES15 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES16 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES17 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES18 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES19 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES20 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES21 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES22 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES23 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES24 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES25 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES26 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES27 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES28 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES29 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES30 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES31 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES32 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES33 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES34 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES35 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES36 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES37 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES38 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES39 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES40 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES41 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES42 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES43 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES44 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES45 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES46 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES47 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES48 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES49 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES50 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES51 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES52 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES53 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES54 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES55 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES56 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES57 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES58 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES59 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES60 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES61 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES62 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES63 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES64 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES65 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES66 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES67 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES68 // Add MP0_ or MP1_ // warehouse crates storage
(u64)WAREHOUSE_CRATES69 // Add MP0_ or MP1_ // warehouse crates storage
(bool)BLOCK_CEO_WORK // Add MP0_ or MP1_ // block bw
(int)TIMECONTRAEARNCD // Add MP0_ or MP1_ // contraband destroy earning cooldown
(int)TIMELASTSUCCSELLMISSION1 // Add MP0_ or MP1_ // Help text display
(int)TIMELASTSUCCSELLMISSION2 // Add MP0_ or MP1_ // Help text display
(int)TIMELASTSUCCSELLMISSION3 // Add MP0_ or MP1_ // Help text display
(int)TIMELASTSUCCSELLMISSION4 // Add MP0_ or MP1_ // Help text display

(int)TATTOO_FM_UNLOCKS_20 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_20 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_20 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_21 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_21 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_21 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(bool)IS_VISOR_UP // Add MP0_ or MP1_ //  Is visor up 

(int)DCTL_WINS // Add MP0_ or MP1_ // Number of DCTL wins
(int)DCTL_PLAY_COUNT // Add MP0_ or MP1_ // Number of DCTL games played

(int)VIP_NEW_MESSAGE_ICON // Add MP0_ or MP1_ //  we can icon or new message next to the new VIP works and Challenges until they are played

(u64)MP_PLAYING_TIME_NEW // Total Playing time in multiplayer.

(int)DLC_APPAREL_ACQUIRED_78 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_79 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_80 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_81 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_82 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_83 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_84 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_85 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_78 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_79 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_80 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_81 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_82 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_83 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_84 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_85 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)SHOPFM_PERS_GAR // Add MP0_ or MP1_ //  Bug 2864148
(int)MPPLY_LAST_PROF_RACE_WON //  time of when the player last won a professional race. 
(int)RACE_OUTFIT_CURRENT // Add MP0_ or MP1_ //  players chosen race outfit index
(int)EX_HHUNT_CD // Add MP0_ or MP1_ //  Local Player is able to run Piracy Prevention multiple times within 1 hour with no cool down.
(int)EX_FREIGHT_CD // Add MP0_ or MP1_ //  Local Player is able to run Piracy Prevention multiple times within 1 hour with no cool down.
(int)EX_FGOODS_CD // Add MP0_ or MP1_ //  Local Player is able to run Piracy Prevention multiple times within 1 hour with no cool down.
(int)MPPLY_CURR_STNT_SERIES_HASH //  Stunt Series Flow - Can we get a new block of help text we can turn on for when we add additional races to the Stunt Series
(int)BIKERSTOREDPVBIKE // Add MP0_ or MP1_ //  Stores current PV
(int)BIK_JOUST_CD // Add MP0_ or MP1_ //  BIK_JOUST_CD
(int)FM_ACT_PH7 // Add MP0_ or MP1_ // Freemode activity phonecall

(u64)IE_GARAGE_VEHICLE_0 // Add MP0_ or MP1_ // Server authoritative stats for IE Garage display vehicles.
(u64)IE_GARAGE_VEHICLE_1 // Add MP0_ or MP1_ // Server authoritative stats for IE Garage display vehicles.
(u64)IE_GARAGE_VEHICLE_2 // Add MP0_ or MP1_ // Server authoritative stats for IE Garage display vehicles.
(u64)IE_GARAGE_VEHICLE_3 // Add MP0_ or MP1_ // Server authoritative stats for IE Garage display vehicles.
(int)IE_OWNED_VEHICLE_0 // Add MP0_ or MP1_ // Server authoritative stats for IE Garage owned vehicles.
(int)IE_OWNED_VEHICLE_1 // Add MP0_ or MP1_ // Server authoritative stats for IE Garage owned vehicles.
(int)IE_OWNED_VEHICLE_2 // Add MP0_ or MP1_ // Server authoritative stats for IE Garage owned vehicles.
(int)IE_OWNED_VEHICLE_3 // Add MP0_ or MP1_ // Server authoritative stats for IE Garage owned vehicles.
(int)IE_OWNED_VEHICLE_4 // Add MP0_ or MP1_ // Server authoritative stats for IE Garage owned vehicles.
(int)CLBHOS_FONT // Add MP0_ or MP1_ // Office customisation
(int)CLBHOS_COLOUR // Add MP0_ or MP1_ // Office customisation
(int)CLBHOS_SIGNAGE // Add MP0_ or MP1_ // Office customisation
(int)CLBHOS_GUNLOCKER // Add MP0_ or MP1_ // Office customisation
(int)CLBHOS_GARAGE // Add MP0_ or MP1_ // Office customisation
(string)MC_GANG_NAME // Add MP0_ or MP1_ // Org Names
(string)MC_GANG_NAME2 // Add MP0_ or MP1_ // Org Names
(int)PROP_CLBHOSE_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_CLBHOSE_NAME_ID // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)CLBHOS_WALL // Add MP0_ or MP1_ // Office customisation
(int)CLBHOS_HANGING // Add MP0_ or MP1_ // Office customisation
(int)CLBHOS_FURNATURE // Add MP0_ or MP1_ // Office customisation
(int)CLBHOS_EMBLEM // Add MP0_ or MP1_ // Office customisation
(int)CLBHOS_SINAGEHIDE // Add MP0_ or MP1_ // Office customisation
(int)FACTORYSLOT0 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYSLOT1 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYSLOT2 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYSLOT3 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYSLOT4 // Add MP0_ or MP1_ // Office customisation
(int)PRODTOTALFORFACTORY0 // Add MP0_ or MP1_ // Office customisation
(int)PRODTOTALFORFACTORY1 // Add MP0_ or MP1_ // Office customisation
(int)PRODTOTALFORFACTORY2 // Add MP0_ or MP1_ // Office customisation
(int)PRODTOTALFORFACTORY3 // Add MP0_ or MP1_ // Office customisation
(int)PRODTOTALFORFACTORY4 // Add MP0_ or MP1_ // Office customisation
(int)MATTOTALFORFACTORY0 // Add MP0_ or MP1_ // Office customisation
(int)MATTOTALFORFACTORY1 // Add MP0_ or MP1_ // Office customisation
(int)MATTOTALFORFACTORY2 // Add MP0_ or MP1_ // Office customisation
(int)MATTOTALFORFACTORY3 // Add MP0_ or MP1_ // Office customisation
(int)MATTOTALFORFACTORY4 // Add MP0_ or MP1_ // Office customisation
(packed)DLCBIKEPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)DLCBIKEPSTAT_BOOL1 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(string)MC_CLBHOSE_NAME // Add MP0_ or MP1_ // MC Clubhouse Name
(string)MC_CLBHOSE_NAME2 // Add MP0_ or MP1_ // MC Clubhouse Name
(int)FACTORYUPGRADES0 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES1 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES2 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES3 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES4 // Add MP0_ or MP1_ // Office customisation
(bool)MC_SHOW_JOB_POINTS // Add MP0_ or MP1_ // Hide job option
(int)BIK_FORM_HEALTH_COUN // Add MP0_ or MP1_ // Hide job option
(int)BIK_FORM_INTRO_COUN // Add MP0_ or MP1_ // Hide job option
(int)TATTOO_FM_UNLOCKS_22 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_22 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_22 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_23 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_23 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_23 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_24 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_24 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_24 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_25 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_25 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_25 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)PAYRESUPPLYTIMER0 // Add MP0_ or MP1_ // Timers for factory laptop
(int)PAYRESUPPLYTIMER1 // Add MP0_ or MP1_ // Timers for factory laptop
(int)PAYRESUPPLYTIMER2 // Add MP0_ or MP1_ // Timers for factory laptop
(int)PAYRESUPPLYTIMER3 // Add MP0_ or MP1_ // Timers for factory laptop
(int)PAYRESUPPLYTIMER4 // Add MP0_ or MP1_ // Timers for factory laptop
(int)FACTORYUPGRADES0_1 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES1_1 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES2_1 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES3_1 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES4_1 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES0_2 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES1_2 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES2_2 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES3_2 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYUPGRADES4_2 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYSETUP0 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYSETUP1 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYSETUP2 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYSETUP3 // Add MP0_ or MP1_ // Office customisation
(int)FACTORYSETUP4 // Add MP0_ or MP1_ // Office customisation
(int)MISSIONFORFACTORY0 // Add MP0_ or MP1_ // Office customisation
(int)MISSIONFORFACTORY1 // Add MP0_ or MP1_ // Office customisation
(int)MISSIONFORFACTORY2 // Add MP0_ or MP1_ // Office customisation
(int)MISSIONFORFACTORY3 // Add MP0_ or MP1_ // Office customisation
(int)MISSIONFORFACTORY4 // Add MP0_ or MP1_ // Office customisation

(int)LIFETIME_BIKER_BUY_COMPLET // Add MP0_ or MP1_ //  track lifetime mission progress
(int)LIFETIME_BIKER_BUY_UNDERTA // Add MP0_ or MP1_ //  track lifetime mission progress
(int)LIFETIME_BIKER_SELL_COMPLET // Add MP0_ or MP1_ //  track lifetime mission progress
(int)LIFETIME_BIKER_SELL_UNDERTA // Add MP0_ or MP1_ //  track lifetime mission progress
(int)MPPLY_CURR_ADVE_SERIES_HASH //  Stunt Series Flow - Can we get a new block of help text we can turn on for when we add additional races to the Stunt Series

(int)DLC_APPAREL_ACQUIRED_86 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_87 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_88 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_86 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_87 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_88 // Add MP0_ or MP1_ // Shop ped apparel save data
(bool)MC_TOGGLE_FRIENDLY_FIRE // Add MP0_ or MP1_ // Hide job option
(int)BIK_STAND_CD // Add MP0_ or MP1_ // Cool downs
(int)BIK_CAGED_CD // Add MP0_ or MP1_ // Cool downs
(int)LIFETIME_BKR_SELL_COMPLETBC // Add MP0_ or MP1_ // Sell missions
(int)LIFETIME_BKR_SELL_UNDERTABC // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S1_0 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S1_1 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S1_2 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S1_3 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S1_4 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S2_0 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S2_1 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S2_2 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S2_3 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S2_4 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S3_0 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S3_1 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S3_2 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S3_3 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S3_4 // Add MP0_ or MP1_ // Sell missions

(int)LFETIME_BIKER_BUY_COMPLET1 // Add MP0_ or MP1_ //  track lifetime mission progress slot 1
(int)LFETIME_BIKER_BUY_UNDERTA1 // Add MP0_ or MP1_ //  track lifetime mission progress slot 1
(int)LFETIME_BIKER_SELL_COMPLET1 // Add MP0_ or MP1_ //  track lifetime mission progress slot 1
(int)LFETIME_BIKER_SELL_UNDERTA1 // Add MP0_ or MP1_ //  track lifetime mission progress slot 1
(int)LFETIME_BIKER_BUY_COMPLET2 // Add MP0_ or MP1_ //  track lifetime mission progress slot 2
(int)LFETIME_BIKER_BUY_UNDERTA2 // Add MP0_ or MP1_ //  track lifetime mission progress slot 2
(int)LFETIME_BIKER_SELL_COMPLET2 // Add MP0_ or MP1_ //  track lifetime mission progress slot 2
(int)LFETIME_BIKER_SELL_UNDERTA2 // Add MP0_ or MP1_ //  track lifetime mission progress slot 2
(int)LFETIME_BIKER_BUY_COMPLET3 // Add MP0_ or MP1_ //  track lifetime mission progress slot 3
(int)LFETIME_BIKER_BUY_UNDERTA3 // Add MP0_ or MP1_ //  track lifetime mission progress slot 3
(int)LFETIME_BIKER_SELL_COMPLET3 // Add MP0_ or MP1_ //  track lifetime mission progress slot 3
(int)LFETIME_BIKER_SELL_UNDERTA3 // Add MP0_ or MP1_ //  track lifetime mission progress slot 3
(int)LFETIME_BIKER_BUY_COMPLET4 // Add MP0_ or MP1_ //  track lifetime mission progress slot 4
(int)LFETIME_BIKER_BUY_UNDERTA4 // Add MP0_ or MP1_ //  track lifetime mission progress slot 4
(int)LFETIME_BIKER_SELL_COMPLET4 // Add MP0_ or MP1_ //  track lifetime mission progress slot 4
(int)LFETIME_BIKER_SELL_UNDERTA4 // Add MP0_ or MP1_ //  track lifetime mission progress slot 4
(int)LIFETIME_BKR_SEL_COMPLETBC1 // Add MP0_ or MP1_ // Sell missions slot 1
(int)LIFETIME_BKR_SEL_UNDERTABC1 // Add MP0_ or MP1_ // Sell missions slot 1
(int)LIFETIME_BKR_SEL_COMPLETBC2 // Add MP0_ or MP1_ // Sell missions slot 2
(int)LIFETIME_BKR_SEL_UNDERTABC2 // Add MP0_ or MP1_ // Sell missions slot 2
(int)LIFETIME_BKR_SEL_COMPLETBC3 // Add MP0_ or MP1_ // Sell missions slot 3
(int)LIFETIME_BKR_SEL_UNDERTABC3 // Add MP0_ or MP1_ // Sell missions slot 3
(int)LIFETIME_BKR_SEL_COMPLETBC4 // Add MP0_ or MP1_ // Sell missions slot 4
(int)LIFETIME_BKR_SEL_UNDERTABC4 // Add MP0_ or MP1_ // Sell missions slot 4
(int)LIFETIME_BKR_SELL_EARNINGS0 // Add MP0_ or MP1_ // Lifetime earnings 0
(int)LIFETIME_BKR_SELL_EARNINGS1 // Add MP0_ or MP1_ // Lifetime earnings 1
(int)LIFETIME_BKR_SELL_EARNINGS2 // Add MP0_ or MP1_ // Lifetime earnings 2
(int)LIFETIME_BKR_SELL_EARNINGS3 // Add MP0_ or MP1_ // Lifetime earnings 3
(int)LIFETIME_BKR_SELL_EARNINGS4 // Add MP0_ or MP1_ // Lifetime earnings 4

(int)BKR_DEFEND_TIMER_SLOT0 // Add MP0_ or MP1_ // Defend mission timer for slot 0
(int)BKR_DEFEND_TIMER_SLOT1 // Add MP0_ or MP1_ // Defend mission timer for slot 1
(int)BKR_DEFEND_TIMER_SLOT2 // Add MP0_ or MP1_ // Defend mission timer for slot 2
(int)BKR_DEFEND_TIMER_SLOT3 // Add MP0_ or MP1_ // Defend mission timer for slot 3
(int)BKR_DEFEND_TIMER_SLOT4 // Add MP0_ or MP1_ // Defend mission timer for slot 4
(int)CHAR_CARMODWHEELS_VIEWED_8 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Viewed Bitset 7
(int)CHAR_CARMODWHEELS_VIEWED_9 // Add MP0_ or MP1_ // MP Char 0 - Car Wheels Viewed Bitset 7
(int)FAVOUTFITBIKETIMECURRENT // Add MP0_ or MP1_ // Tracking players fave bike
(int)FAVOUTFITBIKETIME1ALLTIME // Add MP0_ or MP1_ // Tracking players fave bike
(int)FAVOUTFITBIKETYPECURRENT // Add MP0_ or MP1_ // Tracking players fave bike
(int)FAVOUTFITBIKETYPEALLTIME // Add MP0_ or MP1_ // Tracking players fave bike
(int)CRDEADLINE // Add MP0_ or MP1_ // Number of times played deadline
(int)MC_CONTRIBUTION_POINTS // Add MP0_ or MP1_ // mc contributions points
(int)RESTRICT_HELP_MODES // Add MP0_ or MP1_ // Restrict Help Text shown for Adv Series, Featured Adve Mode, Premium Races and Stunt Races 
(int)BIKER_RIDE_STYLE // Add MP0_ or MP1_ // Restrict Help Text shown for Adv Series, Featured Adve Mode, Premium Races and Stunt Races 
(short)MONEY_SPENT_BIKER_BUSINESS // Add MP0_ or MP1_ // cash spent on biker  business
(short)MONEY_EARN_BIKER_BUSINESS // Add MP0_ or MP1_ // cash earned on biker  business
(int)BKR_FACTORY_PROD_STOPPED // Add MP0_ or MP1_ // Used to determine if production is active
(int)AT_FLOW_MISSION_PROGRESS // Add MP0_ or MP1_ // i.e. flow process
(int)AT_FLOW_IMPEXP_NUM // Add MP0_ or MP1_ // i.e. flow process
(int)AT_FLOW_BITSET_MISSIONS0 // Add MP0_ or MP1_ // i.e. flow process

(int)IE_WH_OWNED_VEHICLE_0 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_1 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_2 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_3 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_4 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_5 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_6 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_7 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_8 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_9 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_10 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_11 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_12 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_13 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_14 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_15 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_16 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_17 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_18 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_19 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_20 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_21 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_22 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_23 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_24 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_25 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_26 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_27 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_28 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_29 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_30 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_31 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_32 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_33 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_34 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_35 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_36 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_37 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_38 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_OWNED_VEHICLE_39 // Add MP0_ or MP1_ // Tracks owned vehicles for IE warehouses
(int)IE_WH_DISPLAY_VEH_SLOT // Add MP0_ or MP1_ // Tracks current vehicle display slot for IE warehouses
(int)FM_ACT_PH8 // Add MP0_ or MP1_ // Freemode activity phonecall

<!-- Import/Export DLC stats -->
(int)PROP_OFFICE_GAR1_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_OFFICE_GAR1 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_OFFICE_GAR1_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5
(int)PROP_OFFICE_GAR2_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_OFFICE_GAR2 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_OFFICE_GAR2_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5
(int)PROP_OFFICE_GAR3_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_OFFICE_GAR3 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_OFFICE_GAR3_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5

(int)PROP_IE_WAREHOUSE_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_IE_WAREHOUSE // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_IE_WAREHOUSE_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5

<!-- Vehicle_88-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_88 // Add MP0_ or MP1_ // Vehicle_88 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_88 // Add MP0_ or MP1_ // Vehicle_88 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_88 // Add MP0_ or MP1_ // Vehicle_88 premium paid by destroyer of vehicle
(int)MPSV_MODEL_88 // Add MP0_ or MP1_ // Vehicle_88 model enum of vehicle
(int)MPSV_FLAGS_88 // Add MP0_ or MP1_ // Vehicle_88 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_88 // Add MP0_ or MP1_ // Vehicle_88 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_88 // Add MP0_ or MP1_ // Vehicle_88 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_88 // Add MP0_ or MP1_ // Vehicle_88 licence plate part 0
<!-- Vehicle_89-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_89 // Add MP0_ or MP1_ // Vehicle_89 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_89 // Add MP0_ or MP1_ // Vehicle_89 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_89 // Add MP0_ or MP1_ // Vehicle_89 premium paid by destroyer of vehicle
(int)MPSV_MODEL_89 // Add MP0_ or MP1_ // Vehicle_89 model enum of vehicle
(int)MPSV_FLAGS_89 // Add MP0_ or MP1_ // Vehicle_89 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_89 // Add MP0_ or MP1_ // Vehicle_89 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_89 // Add MP0_ or MP1_ // Vehicle_89 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_89 // Add MP0_ or MP1_ // Vehicle_89 licence plate part 0
<!-- Vehicle_90-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_90 // Add MP0_ or MP1_ // Vehicle_90 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_90 // Add MP0_ or MP1_ // Vehicle_90 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_90 // Add MP0_ or MP1_ // Vehicle_90 premium paid by destroyer of vehicle
(int)MPSV_MODEL_90 // Add MP0_ or MP1_ // Vehicle_90 model enum of vehicle
(int)MPSV_FLAGS_90 // Add MP0_ or MP1_ // Vehicle_90 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_90 // Add MP0_ or MP1_ // Vehicle_90 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_90 // Add MP0_ or MP1_ // Vehicle_90 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_90 // Add MP0_ or MP1_ // Vehicle_90 licence plate part 0
<!-- Vehicle_91-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_91 // Add MP0_ or MP1_ // Vehicle_91 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_91 // Add MP0_ or MP1_ // Vehicle_91 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_91 // Add MP0_ or MP1_ // Vehicle_91 premium paid by destroyer of vehicle
(int)MPSV_MODEL_91 // Add MP0_ or MP1_ // Vehicle_91 model enum of vehicle
(int)MPSV_FLAGS_91 // Add MP0_ or MP1_ // Vehicle_91 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_91 // Add MP0_ or MP1_ // Vehicle_91 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_91 // Add MP0_ or MP1_ // Vehicle_91 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_91 // Add MP0_ or MP1_ // Vehicle_91 licence plate part 0
<!-- Vehicle_92-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_92 // Add MP0_ or MP1_ // Vehicle_92 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_92 // Add MP0_ or MP1_ // Vehicle_92 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_92 // Add MP0_ or MP1_ // Vehicle_92 premium paid by destroyer of vehicle
(int)MPSV_MODEL_92 // Add MP0_ or MP1_ // Vehicle_92 model enum of vehicle
(int)MPSV_FLAGS_92 // Add MP0_ or MP1_ // Vehicle_92 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_92 // Add MP0_ or MP1_ // Vehicle_92 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_92 // Add MP0_ or MP1_ // Vehicle_92 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_92 // Add MP0_ or MP1_ // Vehicle_92 licence plate part 0
<!-- Vehicle_93-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_93 // Add MP0_ or MP1_ // Vehicle_93 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_93 // Add MP0_ or MP1_ // Vehicle_93 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_93 // Add MP0_ or MP1_ // Vehicle_93 premium paid by destroyer of vehicle
(int)MPSV_MODEL_93 // Add MP0_ or MP1_ // Vehicle_93 model enum of vehicle
(int)MPSV_FLAGS_93 // Add MP0_ or MP1_ // Vehicle_93 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_93 // Add MP0_ or MP1_ // Vehicle_93 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_93 // Add MP0_ or MP1_ // Vehicle_93 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_93 // Add MP0_ or MP1_ // Vehicle_93 licence plate part 0
<!-- Vehicle_94-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_94 // Add MP0_ or MP1_ // Vehicle_94 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_94 // Add MP0_ or MP1_ // Vehicle_94 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_94 // Add MP0_ or MP1_ // Vehicle_94 premium paid by destroyer of vehicle
(int)MPSV_MODEL_94 // Add MP0_ or MP1_ // Vehicle_94 model enum of vehicle
(int)MPSV_FLAGS_94 // Add MP0_ or MP1_ // Vehicle_94 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_94 // Add MP0_ or MP1_ // Vehicle_94 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_94 // Add MP0_ or MP1_ // Vehicle_94 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_94 // Add MP0_ or MP1_ // Vehicle_94 licence plate part 0
<!-- Vehicle_95-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_95 // Add MP0_ or MP1_ // Vehicle_95 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_95 // Add MP0_ or MP1_ // Vehicle_95 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_95 // Add MP0_ or MP1_ // Vehicle_95 premium paid by destroyer of vehicle
(int)MPSV_MODEL_95 // Add MP0_ or MP1_ // Vehicle_95 model enum of vehicle
(int)MPSV_FLAGS_95 // Add MP0_ or MP1_ // Vehicle_95 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_95 // Add MP0_ or MP1_ // Vehicle_95 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_95 // Add MP0_ or MP1_ // Vehicle_95 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_95 // Add MP0_ or MP1_ // Vehicle_95 licence plate part 0
<!-- Vehicle_96-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_96 // Add MP0_ or MP1_ // Vehicle_96 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_96 // Add MP0_ or MP1_ // Vehicle_96 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_96 // Add MP0_ or MP1_ // Vehicle_96 premium paid by destroyer of vehicle
(int)MPSV_MODEL_96 // Add MP0_ or MP1_ // Vehicle_96 model enum of vehicle
(int)MPSV_FLAGS_96 // Add MP0_ or MP1_ // Vehicle_96 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_96 // Add MP0_ or MP1_ // Vehicle_96 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_96 // Add MP0_ or MP1_ // Vehicle_96 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_96 // Add MP0_ or MP1_ // Vehicle_96 licence plate part 0
<!-- Vehicle_97-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_97 // Add MP0_ or MP1_ // Vehicle_97 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_97 // Add MP0_ or MP1_ // Vehicle_97 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_97 // Add MP0_ or MP1_ // Vehicle_97 premium paid by destroyer of vehicle
(int)MPSV_MODEL_97 // Add MP0_ or MP1_ // Vehicle_97 model enum of vehicle
(int)MPSV_FLAGS_97 // Add MP0_ or MP1_ // Vehicle_97 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_97 // Add MP0_ or MP1_ // Vehicle_97 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_97 // Add MP0_ or MP1_ // Vehicle_97 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_97 // Add MP0_ or MP1_ // Vehicle_97 licence plate part 0

<!-- Vehicle_98-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_98 // Add MP0_ or MP1_ // Vehicle_98 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_98 // Add MP0_ or MP1_ // Vehicle_98 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_98 // Add MP0_ or MP1_ // Vehicle_98 premium paid by destroyer of vehicle
(int)MPSV_MODEL_98 // Add MP0_ or MP1_ // Vehicle_98 model enum of vehicle
(int)MPSV_FLAGS_98 // Add MP0_ or MP1_ // Vehicle_98 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_98 // Add MP0_ or MP1_ // Vehicle_98 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_98 // Add MP0_ or MP1_ // Vehicle_98 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_98 // Add MP0_ or MP1_ // Vehicle_98 licence plate part 0
<!-- Vehicle_99-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_99 // Add MP0_ or MP1_ // Vehicle_99 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_99 // Add MP0_ or MP1_ // Vehicle_99 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_99 // Add MP0_ or MP1_ // Vehicle_99 premium paid by destroyer of vehicle
(int)MPSV_MODEL_99 // Add MP0_ or MP1_ // Vehicle_99 model enum of vehicle
(int)MPSV_FLAGS_99 // Add MP0_ or MP1_ // Vehicle_99 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_99 // Add MP0_ or MP1_ // Vehicle_99 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_99 // Add MP0_ or MP1_ // Vehicle_99 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_99 // Add MP0_ or MP1_ // Vehicle_99 licence plate part 0
<!-- Vehicle_100-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_100 // Add MP0_ or MP1_ // Vehicle_100 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_100 // Add MP0_ or MP1_ // Vehicle_100 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_100 // Add MP0_ or MP1_ // Vehicle_100 premium paid by destroyer of vehicle
(int)MPSV_MODEL_100 // Add MP0_ or MP1_ // Vehicle_100 model enum of vehicle
(int)MPSV_FLAGS_100 // Add MP0_ or MP1_ // Vehicle_100 bitset of vehicle flags associated with mods
(int)MPSV_OBTAINED_TIME_100 // Add MP0_ or MP1_ // Vehicle_100 time vehicle was obtained
(int)MPSV_PRICE_PAID_100 // Add MP0_ or MP1_ // Vehicle_100 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_100 // Add MP0_ or MP1_ // Vehicle_100 licence plate part 0
<!-- Vehicle_101-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_101 // Add MP0_ or MP1_ // Vehicle_101 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_101 // Add MP0_ or MP1_ // Vehicle_101 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_101 // Add MP0_ or MP1_ // Vehicle_101 premium paid by destroyer of vehicle
(int)MPSV_MODEL_101 // Add MP0_ or MP1_ // Vehicle_101 model enum of vehicle
(int)MPSV_FLAGS_101 // Add MP0_ or MP1_ // Vehicle_101 bitset of vehicle flags associated with mods
(int)MPSV_OBTAINED_TIME_101 // Add MP0_ or MP1_ // Vehicle_101 time vehicle was obtained
(int)MPSV_PRICE_PAID_101 // Add MP0_ or MP1_ // Vehicle_101 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_101 // Add MP0_ or MP1_ // Vehicle_101 licence plate part 0
<!-- Vehicle_102-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_102 // Add MP0_ or MP1_ // Vehicle_102 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_102 // Add MP0_ or MP1_ // Vehicle_102 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_102 // Add MP0_ or MP1_ // Vehicle_102 premium paid by destroyer of vehicle
(int)MPSV_MODEL_102 // Add MP0_ or MP1_ // Vehicle_102 model enum of vehicle
(int)MPSV_FLAGS_102 // Add MP0_ or MP1_ // Vehicle_102 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_102 // Add MP0_ or MP1_ // Vehicle_102 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_102 // Add MP0_ or MP1_ // Vehicle_102 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_102 // Add MP0_ or MP1_ // Vehicle_102 licence plate part 0
<!-- Vehicle_103-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_103 // Add MP0_ or MP1_ // Vehicle_103 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_103 // Add MP0_ or MP1_ // Vehicle_103 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_103 // Add MP0_ or MP1_ // Vehicle_103 premium paid by destroyer of vehicle
(int)MPSV_MODEL_103 // Add MP0_ or MP1_ // Vehicle_103 model enum of vehicle
(int)MPSV_FLAGS_103 // Add MP0_ or MP1_ // Vehicle_103 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_103 // Add MP0_ or MP1_ // Vehicle_103 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_103 // Add MP0_ or MP1_ // Vehicle_103 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_103 // Add MP0_ or MP1_ // Vehicle_103 licence plate part 0
<!-- Vehicle_104-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_104 // Add MP0_ or MP1_ // Vehicle_104 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_104 // Add MP0_ or MP1_ // Vehicle_104 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_104 // Add MP0_ or MP1_ // Vehicle_104 premium paid by destroyer of vehicle
(int)MPSV_MODEL_104 // Add MP0_ or MP1_ // Vehicle_104 model enum of vehicle
(int)MPSV_FLAGS_104 // Add MP0_ or MP1_ // Vehicle_104 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_104 // Add MP0_ or MP1_ // Vehicle_104 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_104 // Add MP0_ or MP1_ // Vehicle_104 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_104 // Add MP0_ or MP1_ // Vehicle_104 licence plate part 0
<!-- Vehicle_105-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_105 // Add MP0_ or MP1_ // Vehicle_105 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_105 // Add MP0_ or MP1_ // Vehicle_105 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_105 // Add MP0_ or MP1_ // Vehicle_105 premium paid by destroyer of vehicle
(int)MPSV_MODEL_105 // Add MP0_ or MP1_ // Vehicle_105 model enum of vehicle
(int)MPSV_FLAGS_105 // Add MP0_ or MP1_ // Vehicle_105 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_105 // Add MP0_ or MP1_ // Vehicle_105 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_105 // Add MP0_ or MP1_ // Vehicle_105 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_105 // Add MP0_ or MP1_ // Vehicle_105 licence plate part 0
<!-- Vehicle_106-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_106 // Add MP0_ or MP1_ // Vehicle_106 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_106 // Add MP0_ or MP1_ // Vehicle_106 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_106 // Add MP0_ or MP1_ // Vehicle_106 premium paid by destroyer of vehicle
(int)MPSV_MODEL_106 // Add MP0_ or MP1_ // Vehicle_106 model enum of vehicle
(int)MPSV_FLAGS_106 // Add MP0_ or MP1_ // Vehicle_106 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_106 // Add MP0_ or MP1_ // Vehicle_106 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_106 // Add MP0_ or MP1_ // Vehicle_106 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_106 // Add MP0_ or MP1_ // Vehicle_106 licence plate part 0
<!-- Vehicle_107-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_107 // Add MP0_ or MP1_ // Vehicle_107 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_107 // Add MP0_ or MP1_ // Vehicle_107 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_107 // Add MP0_ or MP1_ // Vehicle_107 premium paid by destroyer of vehicle
(int)MPSV_MODEL_107 // Add MP0_ or MP1_ // Vehicle_107 model enum of vehicle
(int)MPSV_FLAGS_107 // Add MP0_ or MP1_ // Vehicle_107 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_107 // Add MP0_ or MP1_ // Vehicle_107 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_107 // Add MP0_ or MP1_ // Vehicle_107 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_107 // Add MP0_ or MP1_ // Vehicle_107 licence plate part 0
<!-- Vehicle_108-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_108 // Add MP0_ or MP1_ // Vehicle_108 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_108 // Add MP0_ or MP1_ // Vehicle_108 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_108 // Add MP0_ or MP1_ // Vehicle_108 premium paid by destroyer of vehicle
(int)MPSV_MODEL_108 // Add MP0_ or MP1_ // Vehicle_108 model enum of vehicle
(int)MPSV_FLAGS_108 // Add MP0_ or MP1_ // Vehicle_108 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_108 // Add MP0_ or MP1_ // Vehicle_108 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_108 // Add MP0_ or MP1_ // Vehicle_108 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_108 // Add MP0_ or MP1_ // Vehicle_108 licence plate part 0
<!-- Vehicle_109-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_109 // Add MP0_ or MP1_ // Vehicle_109 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_109 // Add MP0_ or MP1_ // Vehicle_109 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_109 // Add MP0_ or MP1_ // Vehicle_109 premium paid by destroyer of vehicle
(int)MPSV_MODEL_109 // Add MP0_ or MP1_ // Vehicle_109 model enum of vehicle
(int)MPSV_FLAGS_109 // Add MP0_ or MP1_ // Vehicle_109 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_109 // Add MP0_ or MP1_ // Vehicle_109 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_109 // Add MP0_ or MP1_ // Vehicle_109 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_109 // Add MP0_ or MP1_ // Vehicle_109 licence plate part 0
<!-- Vehicle_110-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_110 // Add MP0_ or MP1_ // Vehicle_110 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_110 // Add MP0_ or MP1_ // Vehicle_110 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_110 // Add MP0_ or MP1_ // Vehicle_110 premium paid by destroyer of vehicle
(int)MPSV_MODEL_110 // Add MP0_ or MP1_ // Vehicle_110 model enum of vehicle
(int)MPSV_FLAGS_110 // Add MP0_ or MP1_ // Vehicle_110 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_110 // Add MP0_ or MP1_ // Vehicle_110 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_110 // Add MP0_ or MP1_ // Vehicle_110 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_110 // Add MP0_ or MP1_ // Vehicle_110 licence plate part 0
<!-- Vehicle_111-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_111 // Add MP0_ or MP1_ // Vehicle_111 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_111 // Add MP0_ or MP1_ // Vehicle_111 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_111 // Add MP0_ or MP1_ // Vehicle_111 premium paid by destroyer of vehicle
(int)MPSV_MODEL_111 // Add MP0_ or MP1_ // Vehicle_111 model enum of vehicle
(int)MPSV_FLAGS_111 // Add MP0_ or MP1_ // Vehicle_111 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_111 // Add MP0_ or MP1_ // Vehicle_111 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_111 // Add MP0_ or MP1_ // Vehicle_111 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_111 // Add MP0_ or MP1_ // Vehicle_111 licence plate part 0
<!-- Vehicle_112-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_112 // Add MP0_ or MP1_ // Vehicle_112 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_112 // Add MP0_ or MP1_ // Vehicle_112 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_112 // Add MP0_ or MP1_ // Vehicle_112 premium paid by destroyer of vehicle
(int)MPSV_MODEL_112 // Add MP0_ or MP1_ // Vehicle_112 model enum of vehicle
(int)MPSV_FLAGS_112 // Add MP0_ or MP1_ // Vehicle_112 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_112 // Add MP0_ or MP1_ // Vehicle_112 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_112 // Add MP0_ or MP1_ // Vehicle_112 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_112 // Add MP0_ or MP1_ // Vehicle_112 licence plate part 0
<!-- Vehicle_113-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_113 // Add MP0_ or MP1_ // Vehicle_113 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_113 // Add MP0_ or MP1_ // Vehicle_113 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_113 // Add MP0_ or MP1_ // Vehicle_113 premium paid by destroyer of vehicle
(int)MPSV_MODEL_113 // Add MP0_ or MP1_ // Vehicle_113 model enum of vehicle
(int)MPSV_FLAGS_113 // Add MP0_ or MP1_ // Vehicle_113 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_113 // Add MP0_ or MP1_ // Vehicle_113 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_113 // Add MP0_ or MP1_ // Vehicle_113 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_113 // Add MP0_ or MP1_ // Vehicle_113 licence plate part 0
<!-- Vehicle_114-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_114 // Add MP0_ or MP1_ // Vehicle_114 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_114 // Add MP0_ or MP1_ // Vehicle_114 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_114 // Add MP0_ or MP1_ // Vehicle_114 premium paid by destroyer of vehicle
(int)MPSV_MODEL_114 // Add MP0_ or MP1_ // Vehicle_114 model enum of vehicle
(int)MPSV_FLAGS_114 // Add MP0_ or MP1_ // Vehicle_114 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_114 // Add MP0_ or MP1_ // Vehicle_114 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_114 // Add MP0_ or MP1_ // Vehicle_114 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_114 // Add MP0_ or MP1_ // Vehicle_114 licence plate part 0
<!-- Vehicle_115-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_115 // Add MP0_ or MP1_ // Vehicle_115 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_115 // Add MP0_ or MP1_ // Vehicle_115 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_115 // Add MP0_ or MP1_ // Vehicle_115 premium paid by destroyer of vehicle
(int)MPSV_MODEL_115 // Add MP0_ or MP1_ // Vehicle_115 model enum of vehicle
(int)MPSV_FLAGS_115 // Add MP0_ or MP1_ // Vehicle_115 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_115 // Add MP0_ or MP1_ // Vehicle_115 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_115 // Add MP0_ or MP1_ // Vehicle_115 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_115 // Add MP0_ or MP1_ // Vehicle_115 licence plate part 0
<!-- Vehicle_116-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_116 // Add MP0_ or MP1_ // Vehicle_116 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_116 // Add MP0_ or MP1_ // Vehicle_116 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_116 // Add MP0_ or MP1_ // Vehicle_116 premium paid by destroyer of vehicle
(int)MPSV_MODEL_116 // Add MP0_ or MP1_ // Vehicle_116 model enum of vehicle
(int)MPSV_FLAGS_116 // Add MP0_ or MP1_ // Vehicle_116 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_116 // Add MP0_ or MP1_ // Vehicle_116 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_116 // Add MP0_ or MP1_ // Vehicle_116 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_116 // Add MP0_ or MP1_ // Vehicle_116 licence plate part 0
<!-- Vehicle_117-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_117 // Add MP0_ or MP1_ // Vehicle_117 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_117 // Add MP0_ or MP1_ // Vehicle_117 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_117 // Add MP0_ or MP1_ // Vehicle_117 premium paid by destroyer of vehicle
(int)MPSV_MODEL_117 // Add MP0_ or MP1_ // Vehicle_117 model enum of vehicle
(int)MPSV_FLAGS_117 // Add MP0_ or MP1_ // Vehicle_117 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_117 // Add MP0_ or MP1_ // Vehicle_117 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_117 // Add MP0_ or MP1_ // Vehicle_117 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_117 // Add MP0_ or MP1_ // Vehicle_117 licence plate part 0
<!-- Vehicle_118-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_118 // Add MP0_ or MP1_ // Vehicle_118 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_118 // Add MP0_ or MP1_ // Vehicle_118 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_118 // Add MP0_ or MP1_ // Vehicle_118 premium paid by destroyer of vehicle
(int)MPSV_MODEL_118 // Add MP0_ or MP1_ // Vehicle_118 model enum of vehicle
(int)MPSV_FLAGS_118 // Add MP0_ or MP1_ // Vehicle_118 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_118 // Add MP0_ or MP1_ // Vehicle_118 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_118 // Add MP0_ or MP1_ // Vehicle_118 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_118 // Add MP0_ or MP1_ // Vehicle_118 licence plate part 0
<!-- Vehicle_119-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_119 // Add MP0_ or MP1_ // Vehicle_119 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_119 // Add MP0_ or MP1_ // Vehicle_119 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_119 // Add MP0_ or MP1_ // Vehicle_119 premium paid by destroyer of vehicle
(int)MPSV_MODEL_119 // Add MP0_ or MP1_ // Vehicle_119 model enum of vehicle
(int)MPSV_FLAGS_119 // Add MP0_ or MP1_ // Vehicle_119 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_119 // Add MP0_ or MP1_ // Vehicle_119 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_119 // Add MP0_ or MP1_ // Vehicle_119 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_119 // Add MP0_ or MP1_ // Vehicle_119 licence plate part 0
<!-- Vehicle_120-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_120 // Add MP0_ or MP1_ // Vehicle_120 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_120 // Add MP0_ or MP1_ // Vehicle_120 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_120 // Add MP0_ or MP1_ // Vehicle_120 premium paid by destroyer of vehicle
(int)MPSV_MODEL_120 // Add MP0_ or MP1_ // Vehicle_120 model enum of vehicle
(int)MPSV_FLAGS_120 // Add MP0_ or MP1_ // Vehicle_120 bitset of vehicle flags associated with mods
(int)MPSV_OBTAINED_TIME_120 // Add MP0_ or MP1_ // Vehicle_120 time vehicle was obtained
(int)MPSV_PRICE_PAID_120 // Add MP0_ or MP1_ // Vehicle_120 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_120 // Add MP0_ or MP1_ // Vehicle_120 licence plate part 0
<!-- Vehicle_121-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_121 // Add MP0_ or MP1_ // Vehicle_121 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_121 // Add MP0_ or MP1_ // Vehicle_121 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_121 // Add MP0_ or MP1_ // Vehicle_121 premium paid by destroyer of vehicle
(int)MPSV_MODEL_121 // Add MP0_ or MP1_ // Vehicle_121 model enum of vehicle
(int)MPSV_FLAGS_121 // Add MP0_ or MP1_ // Vehicle_121 bitset of vehicle flags associated with mods
(int)MPSV_OBTAINED_TIME_121 // Add MP0_ or MP1_ // Vehicle_121 time vehicle was obtained
(int)MPSV_PRICE_PAID_121 // Add MP0_ or MP1_ // Vehicle_121 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_121 // Add MP0_ or MP1_ // Vehicle_121 licence plate part 0
<!-- Vehicle_122-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_122 // Add MP0_ or MP1_ // Vehicle_122 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_122 // Add MP0_ or MP1_ // Vehicle_122 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_122 // Add MP0_ or MP1_ // Vehicle_122 premium paid by destroyer of vehicle
(int)MPSV_MODEL_122 // Add MP0_ or MP1_ // Vehicle_122 model enum of vehicle
(int)MPSV_FLAGS_122 // Add MP0_ or MP1_ // Vehicle_122 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_122 // Add MP0_ or MP1_ // Vehicle_122 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_122 // Add MP0_ or MP1_ // Vehicle_122 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_122 // Add MP0_ or MP1_ // Vehicle_122 licence plate part 0
<!-- Vehicle_123-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_123 // Add MP0_ or MP1_ // Vehicle_123 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_123 // Add MP0_ or MP1_ // Vehicle_123 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_123 // Add MP0_ or MP1_ // Vehicle_123 premium paid by destroyer of vehicle
(int)MPSV_MODEL_123 // Add MP0_ or MP1_ // Vehicle_123 model enum of vehicle
(int)MPSV_FLAGS_123 // Add MP0_ or MP1_ // Vehicle_123 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_123 // Add MP0_ or MP1_ // Vehicle_123 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_123 // Add MP0_ or MP1_ // Vehicle_123 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_123 // Add MP0_ or MP1_ // Vehicle_123 licence plate part 0
<!-- Vehicle_124-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_124 // Add MP0_ or MP1_ // Vehicle_124 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_124 // Add MP0_ or MP1_ // Vehicle_124 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_124 // Add MP0_ or MP1_ // Vehicle_124 premium paid by destroyer of vehicle
(int)MPSV_MODEL_124 // Add MP0_ or MP1_ // Vehicle_124 model enum of vehicle
(int)MPSV_FLAGS_124 // Add MP0_ or MP1_ // Vehicle_124 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_124 // Add MP0_ or MP1_ // Vehicle_124 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_124 // Add MP0_ or MP1_ // Vehicle_124 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_124 // Add MP0_ or MP1_ // Vehicle_124 licence plate part 0
<!-- Vehicle_125-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_125 // Add MP0_ or MP1_ // Vehicle_125 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_125 // Add MP0_ or MP1_ // Vehicle_125 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_125 // Add MP0_ or MP1_ // Vehicle_125 premium paid by destroyer of vehicle
(int)MPSV_MODEL_125 // Add MP0_ or MP1_ // Vehicle_125 model enum of vehicle
(int)MPSV_FLAGS_125 // Add MP0_ or MP1_ // Vehicle_125 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_125 // Add MP0_ or MP1_ // Vehicle_125 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_125 // Add MP0_ or MP1_ // Vehicle_125 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_125 // Add MP0_ or MP1_ // Vehicle_125 licence plate part 0
<!-- Vehicle_126-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_126 // Add MP0_ or MP1_ // Vehicle_126 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_126 // Add MP0_ or MP1_ // Vehicle_126 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_126 // Add MP0_ or MP1_ // Vehicle_126 premium paid by destroyer of vehicle
(int)MPSV_MODEL_126 // Add MP0_ or MP1_ // Vehicle_126 model enum of vehicle
(int)MPSV_FLAGS_126 // Add MP0_ or MP1_ // Vehicle_126 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_126 // Add MP0_ or MP1_ // Vehicle_126 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_126 // Add MP0_ or MP1_ // Vehicle_126 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_126 // Add MP0_ or MP1_ // Vehicle_126 licence plate part 0
<!-- Vehicle_127-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_127 // Add MP0_ or MP1_ // Vehicle_127 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_127 // Add MP0_ or MP1_ // Vehicle_127 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_127 // Add MP0_ or MP1_ // Vehicle_127 premium paid by destroyer of vehicle
(int)MPSV_MODEL_127 // Add MP0_ or MP1_ // Vehicle_127 model enum of vehicle
(int)MPSV_FLAGS_127 // Add MP0_ or MP1_ // Vehicle_127 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_127 // Add MP0_ or MP1_ // Vehicle_127 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_127 // Add MP0_ or MP1_ // Vehicle_127 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_127 // Add MP0_ or MP1_ // Vehicle_127 licence plate part 0
<!-- Vehicle_128-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_128 // Add MP0_ or MP1_ // Vehicle_128 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_128 // Add MP0_ or MP1_ // Vehicle_128 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_128 // Add MP0_ or MP1_ // Vehicle_128 premium paid by destroyer of vehicle
(int)MPSV_MODEL_128 // Add MP0_ or MP1_ // Vehicle_128 model enum of vehicle
(int)MPSV_FLAGS_128 // Add MP0_ or MP1_ // Vehicle_128 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_128 // Add MP0_ or MP1_ // Vehicle_128 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_128 // Add MP0_ or MP1_ // Vehicle_128 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_128 // Add MP0_ or MP1_ // Vehicle_128 licence plate part 0
<!-- Vehicle_129-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_129 // Add MP0_ or MP1_ // Vehicle_129 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_129 // Add MP0_ or MP1_ // Vehicle_129 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_129 // Add MP0_ or MP1_ // Vehicle_129 premium paid by destroyer of vehicle
(int)MPSV_MODEL_129 // Add MP0_ or MP1_ // Vehicle_129 model enum of vehicle
(int)MPSV_FLAGS_129 // Add MP0_ or MP1_ // Vehicle_129 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_129 // Add MP0_ or MP1_ // Vehicle_129 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_129 // Add MP0_ or MP1_ // Vehicle_129 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_129 // Add MP0_ or MP1_ // Vehicle_129 licence plate part 0
<!-- Vehicle_130-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_130 // Add MP0_ or MP1_ // Vehicle_130 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_130 // Add MP0_ or MP1_ // Vehicle_130 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_130 // Add MP0_ or MP1_ // Vehicle_130 premium paid by destroyer of vehicle
(int)MPSV_MODEL_130 // Add MP0_ or MP1_ // Vehicle_130 model enum of vehicle
(int)MPSV_FLAGS_130 // Add MP0_ or MP1_ // Vehicle_130 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_130 // Add MP0_ or MP1_ // Vehicle_130 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_130 // Add MP0_ or MP1_ // Vehicle_130 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_130 // Add MP0_ or MP1_ // Vehicle_130 licence plate part 0
<!-- Vehicle_131-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_131 // Add MP0_ or MP1_ // Vehicle_131 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_131 // Add MP0_ or MP1_ // Vehicle_131 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_131 // Add MP0_ or MP1_ // Vehicle_131 premium paid by destroyer of vehicle
(int)MPSV_MODEL_131 // Add MP0_ or MP1_ // Vehicle_131 model enum of vehicle
(int)MPSV_FLAGS_131 // Add MP0_ or MP1_ // Vehicle_131 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_131 // Add MP0_ or MP1_ // Vehicle_131 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_131 // Add MP0_ or MP1_ // Vehicle_131 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_131 // Add MP0_ or MP1_ // Vehicle_131 licence plate part 0
<!-- Vehicle_132-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_132 // Add MP0_ or MP1_ // Vehicle_132 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_132 // Add MP0_ or MP1_ // Vehicle_132 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_132 // Add MP0_ or MP1_ // Vehicle_132 premium paid by destroyer of vehicle
(int)MPSV_MODEL_132 // Add MP0_ or MP1_ // Vehicle_132 model enum of vehicle
(int)MPSV_FLAGS_132 // Add MP0_ or MP1_ // Vehicle_132 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_132 // Add MP0_ or MP1_ // Vehicle_132 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_132 // Add MP0_ or MP1_ // Vehicle_132 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_132 // Add MP0_ or MP1_ // Vehicle_132 licence plate part 0
<!-- Vehicle_133-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_133 // Add MP0_ or MP1_ // Vehicle_133 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_133 // Add MP0_ or MP1_ // Vehicle_133 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_133 // Add MP0_ or MP1_ // Vehicle_133 premium paid by destroyer of vehicle
(int)MPSV_MODEL_133 // Add MP0_ or MP1_ // Vehicle_133 model enum of vehicle
(int)MPSV_FLAGS_133 // Add MP0_ or MP1_ // Vehicle_133 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_133 // Add MP0_ or MP1_ // Vehicle_133 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_133 // Add MP0_ or MP1_ // Vehicle_133 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_133 // Add MP0_ or MP1_ // Vehicle_133 licence plate part 0
<!-- Vehicle_134-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_134 // Add MP0_ or MP1_ // Vehicle_134 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_134 // Add MP0_ or MP1_ // Vehicle_134 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_134 // Add MP0_ or MP1_ // Vehicle_134 premium paid by destroyer of vehicle
(int)MPSV_MODEL_134 // Add MP0_ or MP1_ // Vehicle_134 model enum of vehicle
(int)MPSV_FLAGS_134 // Add MP0_ or MP1_ // Vehicle_134 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_134 // Add MP0_ or MP1_ // Vehicle_134 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_134 // Add MP0_ or MP1_ // Vehicle_134 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_134 // Add MP0_ or MP1_ // Vehicle_134 licence plate part 0
<!-- Vehicle_135-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_135 // Add MP0_ or MP1_ // Vehicle_135 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_135 // Add MP0_ or MP1_ // Vehicle_135 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_135 // Add MP0_ or MP1_ // Vehicle_135 premium paid by destroyer of vehicle
(int)MPSV_MODEL_135 // Add MP0_ or MP1_ // Vehicle_135 model enum of vehicle
(int)MPSV_FLAGS_135 // Add MP0_ or MP1_ // Vehicle_135 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_135 // Add MP0_ or MP1_ // Vehicle_135 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_135 // Add MP0_ or MP1_ // Vehicle_135 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_135 // Add MP0_ or MP1_ // Vehicle_135 licence plate part 0
<!-- Vehicle_136-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_136 // Add MP0_ or MP1_ // Vehicle_136 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_136 // Add MP0_ or MP1_ // Vehicle_136 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_136 // Add MP0_ or MP1_ // Vehicle_136 premium paid by destroyer of vehicle
(int)MPSV_MODEL_136 // Add MP0_ or MP1_ // Vehicle_136 model enum of vehicle
(int)MPSV_FLAGS_136 // Add MP0_ or MP1_ // Vehicle_136 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_136 // Add MP0_ or MP1_ // Vehicle_136 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_136 // Add MP0_ or MP1_ // Vehicle_136 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_136 // Add MP0_ or MP1_ // Vehicle_136 licence plate part 0
<!-- Vehicle_137-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_137 // Add MP0_ or MP1_ // Vehicle_137 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_137 // Add MP0_ or MP1_ // Vehicle_137 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_137 // Add MP0_ or MP1_ // Vehicle_137 premium paid by destroyer of vehicle
(int)MPSV_MODEL_137 // Add MP0_ or MP1_ // Vehicle_137 model enum of vehicle
(int)MPSV_FLAGS_137 // Add MP0_ or MP1_ // Vehicle_137 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_137 // Add MP0_ or MP1_ // Vehicle_137 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_137 // Add MP0_ or MP1_ // Vehicle_137 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_137 // Add MP0_ or MP1_ // Vehicle_137 licence plate part 0

<!-- Vehicle_138-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_138 // Add MP0_ or MP1_ // Vehicle_138 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_138 // Add MP0_ or MP1_ // Vehicle_138 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_138 // Add MP0_ or MP1_ // Vehicle_138 premium paid by destroyer of vehicle
(int)MPSV_MODEL_138 // Add MP0_ or MP1_ // Vehicle_138 model enum of vehicle
(int)MPSV_FLAGS_138 // Add MP0_ or MP1_ // Vehicle_138 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_138 // Add MP0_ or MP1_ // Vehicle_138 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_138 // Add MP0_ or MP1_ // Vehicle_138 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_138 // Add MP0_ or MP1_ // Vehicle_138 licence plate part 0
<!-- Vehicle_139-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_139 // Add MP0_ or MP1_ // Vehicle_139 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_139 // Add MP0_ or MP1_ // Vehicle_139 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_139 // Add MP0_ or MP1_ // Vehicle_139 premium paid by destroyer of vehicle
(int)MPSV_MODEL_139 // Add MP0_ or MP1_ // Vehicle_139 model enum of vehicle
(int)MPSV_FLAGS_139 // Add MP0_ or MP1_ // Vehicle_139 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_139 // Add MP0_ or MP1_ // Vehicle_139 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_139 // Add MP0_ or MP1_ // Vehicle_139 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_139 // Add MP0_ or MP1_ // Vehicle_139 licence plate part 0
<!-- Vehicle_140-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_140 // Add MP0_ or MP1_ // Vehicle_140 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_140 // Add MP0_ or MP1_ // Vehicle_140 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_140 // Add MP0_ or MP1_ // Vehicle_140 premium paid by destroyer of vehicle
(int)MPSV_MODEL_140 // Add MP0_ or MP1_ // Vehicle_140 model enum of vehicle
(int)MPSV_FLAGS_140 // Add MP0_ or MP1_ // Vehicle_140 bitset of vehicle flags associated with mods
(int)MPSV_OBTAINED_TIME_140 // Add MP0_ or MP1_ // Vehicle_140 time vehicle was obtained
(int)MPSV_PRICE_PAID_140 // Add MP0_ or MP1_ // Vehicle_140 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_140 // Add MP0_ or MP1_ // Vehicle_140 licence plate part 0
<!-- Vehicle_141-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_141 // Add MP0_ or MP1_ // Vehicle_141 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_141 // Add MP0_ or MP1_ // Vehicle_141 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_141 // Add MP0_ or MP1_ // Vehicle_141 premium paid by destroyer of vehicle
(int)MPSV_MODEL_141 // Add MP0_ or MP1_ // Vehicle_141 model enum of vehicle
(int)MPSV_FLAGS_141 // Add MP0_ or MP1_ // Vehicle_141 bitset of vehicle flags associated with mods
(int)MPSV_OBTAINED_TIME_141 // Add MP0_ or MP1_ // Vehicle_141 time vehicle was obtained
(int)MPSV_PRICE_PAID_141 // Add MP0_ or MP1_ // Vehicle_141 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_141 // Add MP0_ or MP1_ // Vehicle_141 licence plate part 0
<!-- Vehicle_142-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_142 // Add MP0_ or MP1_ // Vehicle_142 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_142 // Add MP0_ or MP1_ // Vehicle_142 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_142 // Add MP0_ or MP1_ // Vehicle_142 premium paid by destroyer of vehicle
(int)MPSV_MODEL_142 // Add MP0_ or MP1_ // Vehicle_142 model enum of vehicle
(int)MPSV_FLAGS_142 // Add MP0_ or MP1_ // Vehicle_142 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_142 // Add MP0_ or MP1_ // Vehicle_142 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_142 // Add MP0_ or MP1_ // Vehicle_142 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_142 // Add MP0_ or MP1_ // Vehicle_142 licence plate part 0
<!-- Vehicle_143-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_143 // Add MP0_ or MP1_ // Vehicle_143 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_143 // Add MP0_ or MP1_ // Vehicle_143 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_143 // Add MP0_ or MP1_ // Vehicle_143 premium paid by destroyer of vehicle
(int)MPSV_MODEL_143 // Add MP0_ or MP1_ // Vehicle_143 model enum of vehicle
(int)MPSV_FLAGS_143 // Add MP0_ or MP1_ // Vehicle_143 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_143 // Add MP0_ or MP1_ // Vehicle_143 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_143 // Add MP0_ or MP1_ // Vehicle_143 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_143 // Add MP0_ or MP1_ // Vehicle_143 licence plate part 0
<!-- Vehicle_144-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_144 // Add MP0_ or MP1_ // Vehicle_144 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_144 // Add MP0_ or MP1_ // Vehicle_144 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_144 // Add MP0_ or MP1_ // Vehicle_144 premium paid by destroyer of vehicle
(int)MPSV_MODEL_144 // Add MP0_ or MP1_ // Vehicle_144 model enum of vehicle
(int)MPSV_FLAGS_144 // Add MP0_ or MP1_ // Vehicle_144 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_144 // Add MP0_ or MP1_ // Vehicle_144 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_144 // Add MP0_ or MP1_ // Vehicle_144 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_144 // Add MP0_ or MP1_ // Vehicle_144 licence plate part 0
<!-- Vehicle_145-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_145 // Add MP0_ or MP1_ // Vehicle_145 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_145 // Add MP0_ or MP1_ // Vehicle_145 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_145 // Add MP0_ or MP1_ // Vehicle_145 premium paid by destroyer of vehicle
(int)MPSV_MODEL_145 // Add MP0_ or MP1_ // Vehicle_145 model enum of vehicle
(int)MPSV_FLAGS_145 // Add MP0_ or MP1_ // Vehicle_145 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_145 // Add MP0_ or MP1_ // Vehicle_145 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_145 // Add MP0_ or MP1_ // Vehicle_145 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_145 // Add MP0_ or MP1_ // Vehicle_145 licence plate part 0
<!-- Vehicle_146-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_146 // Add MP0_ or MP1_ // Vehicle_146 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_146 // Add MP0_ or MP1_ // Vehicle_146 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_146 // Add MP0_ or MP1_ // Vehicle_146 premium paid by destroyer of vehicle
(int)MPSV_MODEL_146 // Add MP0_ or MP1_ // Vehicle_146 model enum of vehicle
(int)MPSV_FLAGS_146 // Add MP0_ or MP1_ // Vehicle_146 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_146 // Add MP0_ or MP1_ // Vehicle_146 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_146 // Add MP0_ or MP1_ // Vehicle_146 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_146 // Add MP0_ or MP1_ // Vehicle_146 licence plate part 0
<!-- Vehicle_147-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_147 // Add MP0_ or MP1_ // Vehicle_147 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_147 // Add MP0_ or MP1_ // Vehicle_147 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_147 // Add MP0_ or MP1_ // Vehicle_147 premium paid by destroyer of vehicle
(int)MPSV_MODEL_147 // Add MP0_ or MP1_ // Vehicle_147 model enum of vehicle
(int)MPSV_FLAGS_147 // Add MP0_ or MP1_ // Vehicle_147 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_147 // Add MP0_ or MP1_ // Vehicle_147 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_147 // Add MP0_ or MP1_ // Vehicle_147 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_147 // Add MP0_ or MP1_ // Vehicle_147 licence plate part 0
<!-- Vehicle_148-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_148 // Add MP0_ or MP1_ // Vehicle_148 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_148 // Add MP0_ or MP1_ // Vehicle_148 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_148 // Add MP0_ or MP1_ // Vehicle_148 premium paid by destroyer of vehicle
(int)MPSV_MODEL_148 // Add MP0_ or MP1_ // Vehicle_148 model enum of vehicle
(int)MPSV_FLAGS_148 // Add MP0_ or MP1_ // Vehicle_148 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_148 // Add MP0_ or MP1_ // Vehicle_148 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_148 // Add MP0_ or MP1_ // Vehicle_148 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_148 // Add MP0_ or MP1_ // Vehicle_148 licence plate part 0
<!-- Vehicle_149-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_149 // Add MP0_ or MP1_ // Vehicle_149 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_149 // Add MP0_ or MP1_ // Vehicle_149 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_149 // Add MP0_ or MP1_ // Vehicle_149 premium paid by destroyer of vehicle
(int)MPSV_MODEL_149 // Add MP0_ or MP1_ // Vehicle_149 model enum of vehicle
(int)MPSV_FLAGS_149 // Add MP0_ or MP1_ // Vehicle_149 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_149 // Add MP0_ or MP1_ // Vehicle_149 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_149 // Add MP0_ or MP1_ // Vehicle_149 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_149 // Add MP0_ or MP1_ // Vehicle_149 licence plate part 0
<!-- Vehicle_150-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_150 // Add MP0_ or MP1_ // Vehicle_150 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_150 // Add MP0_ or MP1_ // Vehicle_150 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_150 // Add MP0_ or MP1_ // Vehicle_150 premium paid by destroyer of vehicle
(int)MPSV_MODEL_150 // Add MP0_ or MP1_ // Vehicle_150 model enum of vehicle
(int)MPSV_FLAGS_150 // Add MP0_ or MP1_ // Vehicle_150 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_150 // Add MP0_ or MP1_ // Vehicle_150 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_150 // Add MP0_ or MP1_ // Vehicle_150 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_150 // Add MP0_ or MP1_ // Vehicle_150 licence plate part 0
<!-- Vehicle_151-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_151 // Add MP0_ or MP1_ // Vehicle_151 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_151 // Add MP0_ or MP1_ // Vehicle_151 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_151 // Add MP0_ or MP1_ // Vehicle_151 premium paid by destroyer of vehicle
(int)MPSV_MODEL_151 // Add MP0_ or MP1_ // Vehicle_151 model enum of vehicle
(int)MPSV_FLAGS_151 // Add MP0_ or MP1_ // Vehicle_151 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_151 // Add MP0_ or MP1_ // Vehicle_151 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_151 // Add MP0_ or MP1_ // Vehicle_151 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_151 // Add MP0_ or MP1_ // Vehicle_151 licence plate part 0
<!-- Vehicle_152-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_152 // Add MP0_ or MP1_ // Vehicle_152 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_152 // Add MP0_ or MP1_ // Vehicle_152 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_152 // Add MP0_ or MP1_ // Vehicle_152 premium paid by destroyer of vehicle
(int)MPSV_MODEL_152 // Add MP0_ or MP1_ // Vehicle_152 model enum of vehicle
(int)MPSV_FLAGS_152 // Add MP0_ or MP1_ // Vehicle_152 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_152 // Add MP0_ or MP1_ // Vehicle_152 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_152 // Add MP0_ or MP1_ // Vehicle_152 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_152 // Add MP0_ or MP1_ // Vehicle_152 licence plate part 0
<!-- Vehicle_153-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_153 // Add MP0_ or MP1_ // Vehicle_153 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_153 // Add MP0_ or MP1_ // Vehicle_153 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_153 // Add MP0_ or MP1_ // Vehicle_153 premium paid by destroyer of vehicle
(int)MPSV_MODEL_153 // Add MP0_ or MP1_ // Vehicle_153 model enum of vehicle
(int)MPSV_FLAGS_153 // Add MP0_ or MP1_ // Vehicle_153 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_153 // Add MP0_ or MP1_ // Vehicle_153 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_153 // Add MP0_ or MP1_ // Vehicle_153 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_153 // Add MP0_ or MP1_ // Vehicle_153 licence plate part 0
<!-- Vehicle_154-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_154 // Add MP0_ or MP1_ // Vehicle_154 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_154 // Add MP0_ or MP1_ // Vehicle_154 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_154 // Add MP0_ or MP1_ // Vehicle_154 premium paid by destroyer of vehicle
(int)MPSV_MODEL_154 // Add MP0_ or MP1_ // Vehicle_154 model enum of vehicle
(int)MPSV_FLAGS_154 // Add MP0_ or MP1_ // Vehicle_154 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_154 // Add MP0_ or MP1_ // Vehicle_154 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_154 // Add MP0_ or MP1_ // Vehicle_154 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_154 // Add MP0_ or MP1_ // Vehicle_154 licence plate part 0
<!-- Vehicle_155-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_155 // Add MP0_ or MP1_ // Vehicle_155 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_155 // Add MP0_ or MP1_ // Vehicle_155 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_155 // Add MP0_ or MP1_ // Vehicle_155 premium paid by destroyer of vehicle
(int)MPSV_MODEL_155 // Add MP0_ or MP1_ // Vehicle_155 model enum of vehicle
(int)MPSV_FLAGS_155 // Add MP0_ or MP1_ // Vehicle_155 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_155 // Add MP0_ or MP1_ // Vehicle_155 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_155 // Add MP0_ or MP1_ // Vehicle_155 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_155 // Add MP0_ or MP1_ // Vehicle_155 licence plate part 0
<!-- Vehicle_156-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_156 // Add MP0_ or MP1_ // Vehicle_156 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_156 // Add MP0_ or MP1_ // Vehicle_156 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_156 // Add MP0_ or MP1_ // Vehicle_156 premium paid by destroyer of vehicle
(int)MPSV_MODEL_156 // Add MP0_ or MP1_ // Vehicle_156 model enum of vehicle
(int)MPSV_FLAGS_156 // Add MP0_ or MP1_ // Vehicle_156 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_156 // Add MP0_ or MP1_ // Vehicle_156 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_156 // Add MP0_ or MP1_ // Vehicle_156 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_156 // Add MP0_ or MP1_ // Vehicle_156 licence plate part 0
<!-- Vehicle_157-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_157 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_157 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_157 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_157 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_157 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_157 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_157 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_157 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0

(packed)IMPEXPPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT105 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT106 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT107 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT108 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT109 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT110 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT111 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT112 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT113 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT114 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT115 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT116 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT117 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT118 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT119 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT120 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT121 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT122 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT123 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT124 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT125 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT126 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT127 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT128 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT129 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT130 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT131 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT132 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT133 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT134 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT135 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT136 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT137 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT138 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT139 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT140 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT141 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT142 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT143 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT144 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT145 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT146 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT147 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT148 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT149 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT150 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT151 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT152 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT153 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT154 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT155 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT156 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT157 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT158 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT159 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT160 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT161 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT162 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT163 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT164 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT165 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT166 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT167 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT168 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT169 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT170 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT171 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT172 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT173 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT174 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT175 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT176 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT177 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT178 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT179 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT180 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT181 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT182 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT183 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT184 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT185 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT186 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT187 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT188 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT189 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT190 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT191 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT192 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT193 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT194 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT195 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT196 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT197 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT198 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT199 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT200 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT201 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT202 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT203 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT204 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT205 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT206 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT207 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT208 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT209 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT210 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT211 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT212 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT213 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT214 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT215 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT216 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT217 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT218 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT219 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT220 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT221 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT222 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT223 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT224 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT225 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT226 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT227 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT228 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT229 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT230 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT231 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT232 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT233 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT234 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT235 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT236 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT237 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT238 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT239 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT240 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT241 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT242 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT243 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT244 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT245 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT246 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT247 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT248 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT249 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT250 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT251 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT252 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT253 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT254 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT255 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT256 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT257 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT258 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT259 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT260 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT261 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT262 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT263 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT264 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT265 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT266 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT267 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT268 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT269 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT270 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT271 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT272 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT273 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT274 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT275 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT276 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT277 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT278 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT279 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT280 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT281 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT282 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT283 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT284 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT285 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT286 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT287 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT288 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT289 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT290 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT291 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT292 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT293 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT294 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT295 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT296 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT297 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT298 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT299 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT300 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT301 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT302 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT303 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT304 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT305 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT306 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT307 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT308 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT309 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT310 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT311 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT312 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT313 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT314 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT315 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT316 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT317 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT318 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT319 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT320 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT321 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT322 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT323 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT324 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT325 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT326 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT327 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT328 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT329 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT330 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT331 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT332 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT333 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT334 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT335 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT336 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT337 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT338 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT339 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT340 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT341 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT342 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT343 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT344 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT345 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT346 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT347 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT348 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT349 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT350 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT351 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT352 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT353 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT354 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT355 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT356 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT357 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT358 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT359 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT360 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT361 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT362 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT363 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT364 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT365 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT366 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT367 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT368 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT369 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT370 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT371 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT372 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT373 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT374 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT375 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT376 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT377 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT378 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT379 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT380 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT381 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT382 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT383 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT384 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT385 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT386 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT387 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT388 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT389 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT390 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT391 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT392 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT393 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT394 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT395 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT396 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT397 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT398 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT399 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT400 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT401 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT402 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT403 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT404 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT405 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT406 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT407 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT408 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT409 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT410 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT411 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT412 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT413 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT414 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT415 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT416 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT417 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT418 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT419 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT420 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT421 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT422 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT423 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT424 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT425 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT426 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT427 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT428 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT429 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT430 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT431 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT432 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT433 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT434 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT435 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT436 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT437 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT438 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT439 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT440 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT441 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT442 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT443 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT444 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT445 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT446 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT447 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT448 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT449 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT450 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT451 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT452 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT453 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT454 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT455 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT456 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT457 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT458 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT459 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT460 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT461 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT462 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT463 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT464 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT465 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT466 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT467 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT468 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT469 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT470 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT471 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT472 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT473 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT474 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT475 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT476 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT477 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT478 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT479 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT480 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT481 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT482 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT483 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT484 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT485 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT486 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT487 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT488 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT489 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT490 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT491 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT492 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT493 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT494 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT495 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT496 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT497 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT498 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT499 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT500 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT501 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT502 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT503 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT504 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT505 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT506 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT507 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT508 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT509 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT510 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT511 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT512 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT513 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT514 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT515 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT516 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT517 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT518 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT519 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT520 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT521 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT522 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT523 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT524 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT525 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT526 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT527 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT528 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT529 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT530 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT531 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT532 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT533 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT534 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT535 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT536 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT537 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT538 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT539 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT540 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT541 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT542 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT543 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT544 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT545 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT546 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT547 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT548 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT549 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT550 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT551 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT552 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT553 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT554 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT555 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT556 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT557 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT558 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT559 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT560 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT561 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT562 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT563 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT564 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT565 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT566 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT567 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT568 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT569 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT570 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT571 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT572 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT573 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT574 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT575 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT576 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT577 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT578 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT579 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT580 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT581 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT582 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT583 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT584 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT585 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT586 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT587 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT588 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT589 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT590 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT591 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT592 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT593 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT594 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT595 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT596 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT597 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT598 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT599 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT600 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT601 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT602 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT603 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT604 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT605 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT606 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT607 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT608 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT609 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT610 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT611 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT612 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT613 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT614 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT615 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT616 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT617 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT618 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT619 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT620 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT621 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT622 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT623 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT624 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT625 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT626 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT627 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT628 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT629 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT630 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT631 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT632 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT633 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT634 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT635 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT636 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT637 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT638 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT639 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT640 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT641 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT642 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT643 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT644 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT645 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT646 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT647 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT648 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT649 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT650 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT651 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT652 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT653 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT654 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT655 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT656 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT657 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT658 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT659 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT660 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT661 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT662 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT663 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT664 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT665 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT666 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT667 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT668 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT669 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT670 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT671 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT672 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT673 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT674 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT675 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT676 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT677 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT678 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT679 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT680 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT681 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT682 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT683 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT684 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT685 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT686 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT687 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT688 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT689 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT690 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT691 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT692 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT693 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT694 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT695 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT696 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT697 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT698 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT699 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT700 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT701 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT702 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT703 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT704 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT705 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT706 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT707 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT708 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(int)OWNED_IE_WAREHOUSE // Add MP0_ or MP1_ // Import-Export warehouse ownership
(int)OWNED_IE_WAREHOUSE_VAR // Add MP0_ or MP1_ // Import-Export warehouse ownership
(int)CHAR_APPEARANCE_COOLDOWN // Add MP0_ or MP1_ // CHARACTER_APPEARANCE_COOLDOWN
(int)CHAR_APPEARANCE_CAP_TIME // Add MP0_ or MP1_ // CHARACTER_APPEARANCE_CAP_TIME
(int)CHAR_APPEARANCE_CAP_INST // Add MP0_ or MP1_ // CHARACTER_APPEARANCE_CAP_INST
(int)PROP_OFFICE_GAR1_LIGHTING // Add MP0_ or MP1_ // PROP_OFFICE_GAR1_LIGHTING
(int)PROP_OFFICE_GAR1_NUMBERING // Add MP0_ or MP1_ // PROP_OFFICE_GAR1_NUMBERING
(int)PROP_OFFICE_GAR2_LIGHTING // Add MP0_ or MP1_ // PROP_OFFICE_GAR2_LIGHTING
(int)PROP_OFFICE_GAR2_NUMBERING // Add MP0_ or MP1_ // PROP_OFFICE_GAR2_NUMBERING
(int)PROP_OFFICE_GAR3_LIGHTING // Add MP0_ or MP1_ // PROP_OFFICE_GAR3_LIGHTING
(int)PROP_OFFICE_GAR3_NUMBERING // Add MP0_ or MP1_ // PROP_OFFICE_GAR3_NUMBERING
(int)PROP_OFFICE_MODSHOP // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(packed)DLCBIKEPSTAT_BOOL2 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)IMPEXPPSTAT_INT709 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT710 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT711 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT712 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)IMPEXPPSTAT_INT713 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(int)IE_PLOUGH_CD // Add MP0_ or MP1_ // Cool downs
(int)IE_FULLY_CD // Add MP0_ or MP1_ // Cool downs
(int)IE_AMPH_CD // Add MP0_ or MP1_ // Cool downs
(int)IE_TRANS_CD // Add MP0_ or MP1_ // Cool downs
(int)IE_FORT_CD // Add MP0_ or MP1_ // Cool downs
(int)IE_VELO_CD // Add MP0_ or MP1_ // Cool downs
(int)IE_RAMP_CD // Add MP0_ or MP1_ // Cool downs
(int)IE_STOCK_CD // Add MP0_ or MP1_ // Cool downs
(int)AT_FLOW_VEHICLE_BS // Add MP0_ or MP1_ // flow tracker for discounted veh
(int)LFETIME_IE_STEAL_STARTED // Add MP0_ or MP1_ //  track lifetime import export steal missions started
(int)LFETIME_IE_EXPORT_STARTED // Add MP0_ or MP1_ //  track lifetime import export exports started
(int)LFETIME_IE_EXPORT_COMPLETED // Add MP0_ or MP1_ //  track lifetime import export exports completed
(int)LFETIME_IE_MISSION_EARNINGS // Add MP0_ or MP1_ //  track lifetime import export mission earnings

<!-- Existing weapon VEHICLE_WEAPON_PLAYER_BULLET being modified for Vehicle Vendetta mode -->
(int)VEHICLE_BULLET_KILLS // Add MP0_ or MP1_ // Number of times mp char 1 killed with weapon
(int)VEHICLE_BULLET_DEATHS // Add MP0_ or MP1_ // Number of times mp char 1 killed by weapon
(int)VEHICLE_BULLET_SHOTS // Add MP0_ or MP1_ // Number of times mp char 1 fired weapon
(int)VEHICLE_BULLET_HITS // Add MP0_ or MP1_ // Number of times mp char 1 hit with weapon
(u32)VEHICLE_BULLET_HELDTIME // Add MP0_ or MP1_ // Time mp char 1 held weapon (MS)
(int)VEHICLE_BULLET_ENEMY_KILLS // Add MP0_ or MP1_ // Time mp char 1 held inventory weapon (S)

(int)DLC_APPAREL_ACQUIRED_89 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_90 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_91 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_92 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_93 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_94 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_95 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_96 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_97 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_98 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_99 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_100 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_89 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_90 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_91 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_92 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_93 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_94 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_95 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_96 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_97 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_98 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_99 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_100 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)TATTOO_FM_UNLOCKS_26 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_26 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_26 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_27 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_27 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_27 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16

(int)IMP_EXP_COMP_TUTORIALS1 // Add MP0_ or MP1_ //  track SecuroServ and AdHawk tutorials
(int)IMP_EXP_COMP_TUTORIALS2 // Add MP0_ or MP1_ //  track SecuroServ and AdHawk tutorials

(int)BS_PURCHASED_SPECIAL_VEH // Add MP0_ or MP1_ // Bitset if player has purchased a ImpExp Special Vehicle

(int)IMP_EXP_MODS_MISS_DIAL // Add MP0_ or MP1_ // Dialogue for IE mission carmod

(int)IMP_EXP_SELL_MISSION_CD // Add MP0_ or MP1_ // Track Import export sell mission cooldown time remaining
(int)ILLUMINATED_CLOTHING // Add MP0_ or MP1_ // Players clothing illumination style
(int)VEH_CARGO_STEAL_TIME // Add MP0_ or MP1_ // limiting players rewards for stealing vehicle cargo.
(int)VEH_CARGO_STEAL_NUM // Add MP0_ or MP1_ // limiting players rewards for stealing vehicle cargo.
(int)MPPLY_CURR_SPEC_SERIES_HASH //  Stunt Series Flow - Can we get a new block of help text we can turn on for when we add additional races to the Stunt Series
(int)MPPLY_CURR_CHAL_SERIES_HASH //  Stunt Series Flow - Can we get a new block of help text we can turn on for when we add additional races to the Stunt Series
(short)MPPLY_PERSZOLAPUMA0 // DD
(short)MPPLY_PERSZOLAPUMA1 // DD
(short)MPPLY_PERSZOLAPUMA2 // DD
(short)MPPLY_PERSZOLAPUMA3 // DD
(short)MPPLY_PERSZOLAPUMA4 // DD
(short)MPPLY_SOLDZOLAPUMA0 // DD
(short)MPPLY_SOLDZOLAPUMA1 // DD
(short)MPPLY_SOLDZOLAPUMA2 // DD
(short)MPPLY_SOLDZOLAPUMA3 // DD
(short)MPPLY_SOLDZOLAPUMA4 // DD
(short)MPPLY_KNOWNDOZERPUMA0 // DD
(short)MPPLY_KNOWNDOZERPUMA1 // DD
(short)MPPLY_KNOWNDOZERPUMA2 // DD
(short)MPPLY_KNOWNDOZERPUMA3 // DD
(short)MPPLY_KNOWNDOZERPUMA4 // DD
(short)MPPLY_KNOWNDOZERPUMA5 // DD
(short)MPPLY_KNOWNDOZERPUMA6 // DD
(short)MPPLY_KNOWNDOZERPUMA7 // DD
(short)MPPLY_KNOWNDOZERPUMA8 // DD
(short)MPPLY_KNOWNDOZERPUMA9 // DD
(short)MPPLY_KNOWNDOZERSOLD0 // DD
(short)MPPLY_KNOWNDOZERSOLD1 // DD
(short)MPPLY_KNOWNDOZERSOLD2 // DD
(short)MPPLY_KNOWNDOZERSOLD3 // DD
(short)MPPLY_KNOWNDOZERSOLD4 // DD
(short)MPPLY_KNOWNDOZERSOLD5 // DD
(short)MPPLY_KNOWNDOZERSOLD6 // DD
(short)MPPLY_KNOWNDOZERSOLD7 // DD
(short)MPPLY_KNOWNDOZERSOLD8 // DD
(short)MPPLY_KNOWNDOZERSOLD9 // DD
(int)BUNKER_DECOR // Add MP0_ or MP1_ // Gunrunning bunker customisation
(int)BUNKER_STAFF // Add MP0_ or MP1_ // Gunrunning bunker customisation
(int)BUNKER_EQUIPMENT // Add MP0_ or MP1_ // Gunrunning bunker customisation
(int)BUNKER_SECURITY // Add MP0_ or MP1_ // Gunrunning bunker customisation
(int)BUNKER_SAVEBED // Add MP0_ or MP1_ // Gunrunning bunker customisation
(int)BUNKER_GUNLOCKER // Add MP0_ or MP1_ // Gunrunning bunker customisation
(int)BUNKER_FIRING_RANGE // Add MP0_ or MP1_ // Gunrunning bunker customisation
(int)BUNKER_TRANSPORTATION // Add MP0_ or MP1_ // Gunrunning bunker customisation
(int)SHOPFM_PERS_GUN // Add MP0_ or MP1_ // Shop stat for Gunrunning Armory. B*3360352
(int)SR_HIGHSCORE_1 // Add MP0_ or MP1_ // Shooting Range - Highscore 1
(int)SR_HIGHSCORE_2 // Add MP0_ or MP1_ // Shooting Range - Highscore 2
(int)SR_HIGHSCORE_3 // Add MP0_ or MP1_ // Shooting Range - Highscore 3
(int)SR_HIGHSCORE_4 // Add MP0_ or MP1_ // Shooting Range - Highscore 4
(int)SR_HIGHSCORE_5 // Add MP0_ or MP1_ // Shooting Range - Highscore 5
(int)SR_HIGHSCORE_6 // Add MP0_ or MP1_ // Shooting Range - Highscore 6
(int)SR_TARGETS_HIT // Add MP0_ or MP1_ // Shooting Range - Targets hit
(int)SR_VS_WINS // Add MP0_ or MP1_ // Shooting Range - VS wins
(int)SR_WEAPON_BIT_SET // Add MP0_ or MP1_ // Shooting Range - Weapon bit set
(bool)SR_TIER_1_REWARD // Add MP0_ or MP1_ // Shooting Range - Tier 1 Reward
(bool)SR_TIER_3_REWARD // Add MP0_ or MP1_ // Shooting Range - Tier 3 Reward
(bool)SR_INCREASE_THROW_CAP // Add MP0_ or MP1_ // Shooting Range - Tier 2 Reward - Increase Throwing Capacity
(bool)MPPLY_DISABLEDOZERDETECT // DD
(int)INV_TRUCK_MODEL_0 // Add MP0_ or MP1_ // SA Stat for truck model
(int)DLC_APPAREL_ACQUIRED_101 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_102 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_103 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_104 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_105 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_106 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_107 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_108 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_109 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_110 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_111 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_112 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_113 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_114 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_115 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_116 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_117 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_118 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_119 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_120 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_121 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_122 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_123 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_101 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_102 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_103 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_104 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_105 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_106 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_107 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_108 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_109 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_110 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_111 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_112 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_113 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_114 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_115 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_116 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_117 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_118 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_119 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_120 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_121 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_122 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_123 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)FACTORYSLOT5 // Add MP0_ or MP1_ // Owned factory slot 5
(int)PRODTOTALFORFACTORY5 // Add MP0_ or MP1_ // Product total for factory slot 5
(int)RESEARCHTOTALFORFACTORY5 // Add MP0_ or MP1_ // Research total for factory slot 5
(int)MATTOTALFORFACTORY5 // Add MP0_ or MP1_ // Materials total for factory slot 5
(int)PAYRESUPPLYTIMER5 // Add MP0_ or MP1_ // Timers for factory laptop
(int)FACTORYSETUP5 // Add MP0_ or MP1_ // Factory setup complete for slot 5
(int)MISSIONFORFACTORY5 // Add MP0_ or MP1_ // Mission stat for factory slot 5

(int)BKR_PROD_STOP_COUT_S1_5 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S2_5 // Add MP0_ or MP1_ // Sell missions
(int)BKR_PROD_STOP_COUT_S3_5 // Add MP0_ or MP1_ // Sell missions

(int)LFETIME_BIKER_BUY_COMPLET5 // Add MP0_ or MP1_ //  track lifetime mission progress slot 5
(int)LFETIME_BIKER_BUY_UNDERTA5 // Add MP0_ or MP1_ //  track lifetime mission progress slot 5
(int)LFETIME_BIKER_SELL_COMPLET5 // Add MP0_ or MP1_ //  track lifetime mission progress slot 5
(int)LFETIME_BIKER_SELL_UNDERTA5 // Add MP0_ or MP1_ //  track lifetime mission progress slot 5
(int)LIFETIME_BKR_SEL_COMPLETBC5 // Add MP0_ or MP1_ // Sell missions slot 5
(int)LIFETIME_BKR_SEL_UNDERTABC5 // Add MP0_ or MP1_ // Sell missions slot 5
(int)LIFETIME_BKR_SELL_EARNINGS5 // Add MP0_ or MP1_ // Lifetime earnings 5

(int)BKR_DEFEND_TIMER_SLOT5 // Add MP0_ or MP1_ // Defend mission timer for slot 5
(int)TRUCK_ACCESS // Add MP0_ or MP1_ // Truck access
(int)TRUCK_DEFENCE_SETTING // Add MP0_ or MP1_ // Truck defense exclusion setting
(int)WVM_FLOW_MISSION_PROGRESS // Add MP0_ or MP1_ // i.e. flow process
(int)WVM_FLOW_IMPEXP_NUM // Add MP0_ or MP1_ // i.e. flow process
(int)WVM_FLOW_BITSET_MISSIONS0 // Add MP0_ or MP1_ // i.e. flow process
(int)WVM_FLOW_VEHICLE_BS // Add MP0_ or MP1_ // flow tracker for discounted veh
(int)HELP_BUNK_EMAIL // Add MP0_ or MP1_ // Bunker Email count
(int)TRUCK_MOD_STAR // Add MP0_ or MP1_ // Truck Mod Star
(int)TATTOO_FM_UNLOCKS_28 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_28 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_28 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_29 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_29 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_29 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16

(int)MPPLY_IFPUMA // DD
(int)FM_ACT_PH9 // Add MP0_ or MP1_ // Freemode activity phonecall

(packed)DLCGUNPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)DLCGUNPSTAT_BOOL1 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)DLCGUNPSTAT_BOOL2 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
<!-- Vehicle_158-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_158 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_158 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_158 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_158 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_158 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_158 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
(int)MPSV_OBTAINED_TIME_158 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was obtained
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_158 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0

(packed)GUNRPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GUNRPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers

(int)GUNR_RESEARCH_ITEM // Add MP0_ or MP1_ // Tracks current bunker research item
(int)CHAR_FM_WEAP_ADDON_8_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH8 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_8_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_8_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6
(int)CHAR_FM_WEAP_ADDON_9_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH9 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_9_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_9_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6
(int)CHAR_FM_WEAP_ADDON_10_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH10 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_10_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_10_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6

(int)CHAR_KIT_15_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_15_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_15_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE15 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_16_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_16_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_16_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE16 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_17_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_17_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_17_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE17 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_18_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_18_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_18_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE18 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_19_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_19_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_19_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE19 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_20_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_20_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_20_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE20 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

<!-- Gunrunning Tattoo  stats -->
(packed)GUNTATPSTAT_BOOL0 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)GUNTATPSTAT_BOOL1 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)GUNTATPSTAT_BOOL2 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)GUNTATPSTAT_BOOL3 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)GUNTATPSTAT_BOOL4 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)GUNTATPSTAT_BOOL5 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.

(int)ASLTRIFLEARMPIERAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTRIFLEFMJAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTRIFLEINCENAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTRIFLETRACERAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CRBNRIFLEARMPIERAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CRBNRIFLEFMJAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CRBNRIFLEINCENAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CRBNRIFLETRACERAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTMGARMPIERAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTMGFMJAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTMGINCENAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTMGTRACERAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HVYSNIPERARMPIERAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HVYSNIPEREXPLOSAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HVYSNIPERFMJAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HVYSNIPERINCENAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOLFMJAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOLHOLLOWAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOLINCENAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOLTRACERAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMGFMJAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMGHOLLOWAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMGINCENAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMGTRACERAMMOBOUGHT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTRIFLEARMPIERAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTRIFLEFMJAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTRIFLEINCENAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)ASLTRIFLETRACERAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CRBNRIFLEARMPIERAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CRBNRIFLEFMJAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CRBNRIFLEINCENAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CRBNRIFLETRACERAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTMGARMPIERAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTMGFMJAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTMGINCENAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)CMBTMGTRACERAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HVYSNIPERARMPIERAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HVYSNIPEREXPLOSAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HVYSNIPERFMJAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)HVYSNIPERINCENAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOLFMJAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOLHOLLOWAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOLINCENAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)PISTOLTRACERAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMGFMJAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMGHOLLOWAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMGINCENAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)SMGTRACERAMMOCURRENT // Add MP0_ or MP1_ // Ammo bought for weapon
(int)COVOMISSION_CR // Add MP0_ or MP1_ // number of times player completed Covert Op Mission for award
(int)ADVERSARYMISSION_CR // Add MP0_ or MP1_ // number of times player completed Adversary Mission for award
   
(int)CHAR_KIT_21_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_21_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_21_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE21 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_22_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_22_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_22_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE22 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_23_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_23_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_23_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE23 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_24_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_24_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_24_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE24 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_25_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_25_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_25_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE25 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_26_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_26_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_26_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE26 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_27_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_27_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_27_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE27 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)BUNKER_UNITS_MANUFAC // Add MP0_ or MP1_ // Liftime weapons manufactured

(bool)MPPLY_RSPOLICYSHOWN // DD

(int)CHAR_FM_WEAP_ADDON_11_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH11 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_11_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_11_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6

(int)CHAR_FM_WEAP_ADDON_12_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH12 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_12_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_12_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6

(int)CHAR_FM_WEAP_ADDON_13_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH13 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_13_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_13_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6


(int)CHAR_FM_WEAP_ADDON_14_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH14 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_14_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_14_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6

(int)CHAR_KIT_28_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_28_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_28_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE28 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_29_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_29_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_29_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE29 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_30_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_30_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_30_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE30 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_31_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_31_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_31_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE31 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_32_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_32_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_32_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE32 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_33_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_33_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_33_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE33 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)GANGOPS_FLOW_MISSION_PROG // Add MP0_ or MP1_ // i.e. flow process
(int)GANGOPS_FLOW_IMPEXP_NUM // Add MP0_ or MP1_ // i.e. flow process
(int)GANGOPS_FLOW_BITSET_MISS0 // Add MP0_ or MP1_ // i.e. flow process
(int)WAM_FLOW_VEHICLE_BS // Add MP0_ or MP1_ // flow tracker for discounted veh

(packed)DLCSMUGCHARPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.

(packed)DLCSMUGCHARPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT105 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT106 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT107 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT108 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT109 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT110 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT111 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT112 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT113 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT114 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT115 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT116 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT117 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT118 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT119 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT120 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT121 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT122 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT123 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT124 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT125 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT126 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT127 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT128 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT129 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT130 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT131 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT132 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT133 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT134 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT135 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT136 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT137 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT138 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT139 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT140 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT141 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT142 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT143 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT144 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT145 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT146 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT147 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT148 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT149 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT150 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT151 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT152 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT153 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT154 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT155 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT156 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT157 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT158 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT159 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT160 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT161 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT162 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT163 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT164 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT165 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT166 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT167 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT168 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT169 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT170 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT171 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT172 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT173 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT174 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT175 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT176 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT177 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT178 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT179 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT180 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT181 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT182 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT183 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT184 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT185 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT186 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT187 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT188 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT189 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT190 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT191 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT192 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT193 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT194 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT195 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT196 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT197 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT198 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT199 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT200 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT201 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT202 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT203 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT204 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT205 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT206 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT207 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT208 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT209 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT210 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT211 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT212 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT213 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT214 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT215 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT216 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT217 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT218 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT219 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT220 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT221 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT222 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT223 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT224 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT225 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT226 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT227 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT228 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT229 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT230 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT231 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT232 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT233 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT234 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT235 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT236 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT237 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT238 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT239 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT240 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT241 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT242 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT243 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT244 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT245 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT246 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT247 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT248 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT249 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT250 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT251 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT252 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT253 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT254 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT255 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT256 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT257 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT258 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT259 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)DLCSMUGCHARPSTAT_INT260 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers

<!-- Smuggler vehicle stats -->
<!-- Vehicle_159-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_159 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_159 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_159 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_159 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_159 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_159 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_159 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_160-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_160 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_160 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_160 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_160 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_160 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_160 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_160 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_161-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_161 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_161 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_161 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_161 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_161 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_161 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_161 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_162-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_162 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_162 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_162 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_162 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_162 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_162 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_162 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_163-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_163 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_163 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_163 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_163 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_163 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_163 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_163 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_164-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_164 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_164 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_164 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_164 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_164 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_164 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_164 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_165-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_165 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_165 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_165 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_165 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_165 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_165 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_165 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_166-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_166 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_166 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_166 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_166 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_166 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_166 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_166 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_167-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_167 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_167 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_167 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_167 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_167 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_167 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_167 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_168-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_168 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_168 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_168 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_168 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_168 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_168 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_168 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_169-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_169 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_169 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_169 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_169 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_169 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_169 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_169 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_170-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_170 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_170 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_170 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_170 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_170 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_170 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_170 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_171-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_171 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_171 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_171 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_171 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_171 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_171 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_171 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_172-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_172 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_172 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_172 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_172 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_172 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_172 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_172 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_173-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_173 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_173 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_173 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_173 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_173 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_173 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_173 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_174-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_174 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_174 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_174 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_174 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_174 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_174 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_174 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_175-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_175 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_175 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_175 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_175 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_175 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_175 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_175 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_176-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_176 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_176 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_176 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_176 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_176 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_176 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_176 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_177-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_177 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_177 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_177 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_177 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_177 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_177 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_177 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_178-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_178 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_178 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_178 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_178 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_178 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_178 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_178 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_179-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_179 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_179 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_179 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_179 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_179 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_179 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
(u64)MPSV_LP0_179 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_180-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_180 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_180 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_180 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_180 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_180 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_180 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_180 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_181-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_181 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_181 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_181 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_181 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_181 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_181 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_181 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_182-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_182 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_182 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_182 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_182 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_182 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_182 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_182 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0
<!-- Vehicle_183-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_183 // Add MP0_ or MP1_ // Vehicle_157 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_183 // Add MP0_ or MP1_ // Vehicle_157 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_183 // Add MP0_ or MP1_ // Vehicle_157 premium paid by destroyer of vehicle
(int)MPSV_MODEL_183 // Add MP0_ or MP1_ // Vehicle_157 model enum of vehicle
(int)MPSV_FLAGS_183 // Add MP0_ or MP1_ // Vehicle_157 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_183 // Add MP0_ or MP1_ // Vehicle_157 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_183 // Add MP0_ or MP1_ // Vehicle_157 licence plate part 0


(int)HANGAR_OWNED // Add MP0_ or MP1_ // Smuggler hangar owned
(int)HANGAR_CONTRABAND_TOTAL // Add MP0_ or MP1_ // Smuggler hangar contraband units owned
(int)HANGAR_CONTRABAND_MISSION // Add MP0_ or MP1_ // Smuggler hangar contraband mission
(int)HANGAR_FLOOR_DECAL // Add MP0_ or MP1_ // Smuggler hangar customisation
(int)HANGAR_COLOUR // Add MP0_ or MP1_ // Smuggler hangar customisation
(int)HANGAR_LIGHTING // Add MP0_ or MP1_ // Smuggler hangar customisation
(int)HANGAR_SAVEBED // Add MP0_ or MP1_ // Smuggler hangar customisation
(int)HANGAR_FURNITURE // Add MP0_ or MP1_ // Smuggler hangar customisation
(int)HANGAR_MODSHOP // Add MP0_ or MP1_ // Smuggler hangar customisation

(int)PROP_HANGAR_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_HANGAR // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_HANGAR_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5

(bool)PILOT_B_CONTROL // Add MP0_ or MP1_ // Control - Pilot/Passenger

(int)LFETIME_HANGAR_BUY_UNDETAK // Add MP0_ or MP1_ //  track lifetime buy mission progress for the hangar
(int)LFETIME_HANGAR_BUY_COMPLET // Add MP0_ or MP1_ //  track lifetime buy mission progress for the hangar
(int)LFETIME_HANGAR_SEL_UNDETAK // Add MP0_ or MP1_ //  track lifetime sell mission progress for the hangar
(int)LFETIME_HANGAR_SEL_COMPLET // Add MP0_ or MP1_ //  track lifetime sell mission progress for the hangar

(int)LFETIME_HANGAR_EARNINGS // Add MP0_ or MP1_ //  track lifetime hangar earnings
(int)LFETIME_HANGAR_EARN_BONUS // Add MP0_ or MP1_ //  track lifetime bonus hangar earnings

(int)RIVAL_HANGAR_CRATES_STOLEN // Add MP0_ or MP1_ //  track lifetime contraband stolen from rivals
(int)SMUGGLER_FLOW_NOTIFICATIONS // Add MP0_ or MP1_ // Smuggler Email count
(int)CHAR_FM_PIM_HIDE_MISC_1 // Add MP0_ or MP1_ // MP Char 0 - For hide show stats
(int)RESTRICT_HELP_MODES_2 // Add MP0_ or MP1_ // Restrict Help Text shown for Adv Series, Featured Adve Mode, Premium Races and Stunt Races 
(int)MPPLY_CURR_TRAN_SERIES_HASH //  Stunt Series Flow - Can we get a new block of help text we can turn on for when we add additional races to the Stunt Series

(bool)COUNTERMEASURE_CONTROL // Add MP0_ or MP1_ // Control - Pilot/Passenger
(bool)MC_ENABLE_FLY_ASSIST // Add MP0_ or MP1_ // Control - Pilot/Passenger

(int)DLC_APPAREL_ACQUIRED_124 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_125 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_126 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_127 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_128 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_129 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_130 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_131 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_132 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_133 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_134 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_135 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_136 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_137 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_138 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_124 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_125 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_126 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_127 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_128 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_129 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_130 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_131 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_132 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_133 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_134 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_135 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_136 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_137 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_138 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)JATO_ASSIST_HELP // Add MP0_ or MP1_ // count number of times jato help has been displayed
(bool)MPPLY_HEADSHOTCHLENGECOMPLETED // Stat to track if headshot challenge is complete to unlock weapon in bob

(int)GANGOPS_FLOW_NOTIFICATIONS // Add MP0_ or MP1_ // FM HEIST Email count
(int)CE_STARTER_PACK_CP // Add MP0_ or MP1_ // PE PURCHASED

(int)SHOPFM_PERS_GUN_OSPREY // Add MP0_ or MP1_ // Shop stat for Osprey Armory
(int)INV_PLANE_MODEL_0 // Add MP0_ or MP1_ // SA Stat for plane model

(int)DBASE_OWNED // Add MP0_ or MP1_ // GangOps defunct base owned
(int)DBASE_CONTRABAND_TOTAL // Add MP0_ or MP1_ // GangOps defunct base contraband units owned
(int)DBASE_CONTRABAND_MISSION // Add MP0_ or MP1_ // GangOps defunct base contraband mission
(int)DBASE_FACILITY_STYLE // Add MP0_ or MP1_ // GangOps defunct base customisation
(int)DBASE_FACILITY_GRAPHIC // Add MP0_ or MP1_ // GangOps defunct base customisation
(int)DBASE_ORBITAL_WEAPON // Add MP0_ or MP1_ // GangOps defunct base customisation
(int)DBASE_SECURITY_ROOM // Add MP0_ or MP1_ // GangOps defunct base customisation
(int)DBASE_PERSONAL_QUARTERS // Add MP0_ or MP1_ // GangOps defunct base customisation

(int)GANGOPS_FM_MISSION_PROG // Add MP0_ or MP1_ // i.e. flow process
(int)GANGOPS_FM_BITSET_MISS0 // Add MP0_ or MP1_ // i.e. flow process

(int)PROP_DEFUNCBASE_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_DEFUNCBASE // Add MP0_ or MP1_ // Stores what other property player has purchased
(int)PROP_DEFUNCBASE_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased


<!-- GangOps vehicle stats -->
<!-- Vehicle_184-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_184 // Add MP0_ or MP1_ // Vehicle_184 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_184 // Add MP0_ or MP1_ // Vehicle_184 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_184 // Add MP0_ or MP1_ // Vehicle_184 premium paid by destroyer of vehicle
(int)MPSV_MODEL_184 // Add MP0_ or MP1_ // Vehicle_184 model enum of vehicle
(int)MPSV_FLAGS_184 // Add MP0_ or MP1_ // Vehicle_184 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_184 // Add MP0_ or MP1_ // Vehicle_184 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_184 // Add MP0_ or MP1_ // Vehicle_184 licence plate part 0
<!-- Vehicle_185-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_185 // Add MP0_ or MP1_ // Vehicle_185 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_185 // Add MP0_ or MP1_ // Vehicle_185 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_185 // Add MP0_ or MP1_ // Vehicle_185 premium paid by destroyer of vehicle
(int)MPSV_MODEL_185 // Add MP0_ or MP1_ // Vehicle_185 model enum of vehicle
(int)MPSV_FLAGS_185 // Add MP0_ or MP1_ // Vehicle_185 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_185 // Add MP0_ or MP1_ // Vehicle_185 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_185 // Add MP0_ or MP1_ // Vehicle_185 licence plate part 0
<!-- Vehicle_186-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_186 // Add MP0_ or MP1_ // Vehicle_186 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_186 // Add MP0_ or MP1_ // Vehicle_186 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_186 // Add MP0_ or MP1_ // Vehicle_186 premium paid by destroyer of vehicle
(int)MPSV_MODEL_186 // Add MP0_ or MP1_ // Vehicle_186 model enum of vehicle
(int)MPSV_FLAGS_186 // Add MP0_ or MP1_ // Vehicle_186 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_186 // Add MP0_ or MP1_ // Vehicle_186 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_186 // Add MP0_ or MP1_ // Vehicle_186 licence plate part 0
<!-- Vehicle_187-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_187 // Add MP0_ or MP1_ // Vehicle_187 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_187 // Add MP0_ or MP1_ // Vehicle_187 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_187 // Add MP0_ or MP1_ // Vehicle_187 premium paid by destroyer of vehicle
(int)MPSV_MODEL_187 // Add MP0_ or MP1_ // Vehicle_187 model enum of vehicle
(int)MPSV_FLAGS_187 // Add MP0_ or MP1_ // Vehicle_187 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_187 // Add MP0_ or MP1_ // Vehicle_187 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_187 // Add MP0_ or MP1_ // Vehicle_187 licence plate part 0
<!-- Vehicle_188-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_188 // Add MP0_ or MP1_ // Vehicle_188 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_188 // Add MP0_ or MP1_ // Vehicle_188 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_188 // Add MP0_ or MP1_ // Vehicle_188 premium paid by destroyer of vehicle
(int)MPSV_MODEL_188 // Add MP0_ or MP1_ // Vehicle_188 model enum of vehicle
(int)MPSV_FLAGS_188 // Add MP0_ or MP1_ // Vehicle_188 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_188 // Add MP0_ or MP1_ // Vehicle_188 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_188 // Add MP0_ or MP1_ // Vehicle_188 licence plate part 0
<!-- Vehicle_189-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_189 // Add MP0_ or MP1_ // Vehicle_189 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_189 // Add MP0_ or MP1_ // Vehicle_189 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_189 // Add MP0_ or MP1_ // Vehicle_189 premium paid by destroyer of vehicle
(int)MPSV_MODEL_189 // Add MP0_ or MP1_ // Vehicle_189 model enum of vehicle
(int)MPSV_FLAGS_189 // Add MP0_ or MP1_ // Vehicle_189 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_189 // Add MP0_ or MP1_ // Vehicle_189 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_189 // Add MP0_ or MP1_ // Vehicle_189 licence plate part 0
<!-- Vehicle_190-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_190 // Add MP0_ or MP1_ // Vehicle_190 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_190 // Add MP0_ or MP1_ // Vehicle_190 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_190 // Add MP0_ or MP1_ // Vehicle_190 premium paid by destroyer of vehicle
(int)MPSV_MODEL_190 // Add MP0_ or MP1_ // Vehicle_190 model enum of vehicle
(int)MPSV_FLAGS_190 // Add MP0_ or MP1_ // Vehicle_190 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_190 // Add MP0_ or MP1_ // Vehicle_190 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_190 // Add MP0_ or MP1_ // Vehicle_190 licence plate part 0
<!-- Vehicle_193-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_191 // Add MP0_ or MP1_ // Vehicle_191 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_191 // Add MP0_ or MP1_ // Vehicle_191 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_191 // Add MP0_ or MP1_ // Vehicle_191 premium paid by destroyer of vehicle
(int)MPSV_MODEL_191 // Add MP0_ or MP1_ // Vehicle_191 model enum of vehicle
(int)MPSV_FLAGS_191 // Add MP0_ or MP1_ // Vehicle_191 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_191 // Add MP0_ or MP1_ // Vehicle_191 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_191 // Add MP0_ or MP1_ // Vehicle_191 licence plate part 0
<!-- Vehicle_192-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_192 // Add MP0_ or MP1_ // Vehicle_192 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_192 // Add MP0_ or MP1_ // Vehicle_192 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_192 // Add MP0_ or MP1_ // Vehicle_192 premium paid by destroyer of vehicle
(int)MPSV_MODEL_192 // Add MP0_ or MP1_ // Vehicle_192 model enum of vehicle
(int)MPSV_FLAGS_192 // Add MP0_ or MP1_ // Vehicle_192 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_192 // Add MP0_ or MP1_ // Vehicle_192 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_192 // Add MP0_ or MP1_ // Vehicle_192 licence plate part 0
<!-- Vehicle_193-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_193 // Add MP0_ or MP1_ // Vehicle_193 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_193 // Add MP0_ or MP1_ // Vehicle_193 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_193 // Add MP0_ or MP1_ // Vehicle_193 premium paid by destroyer of vehicle
(int)MPSV_MODEL_193 // Add MP0_ or MP1_ // Vehicle_193 model enum of vehicle
(int)MPSV_FLAGS_193 // Add MP0_ or MP1_ // Vehicle_193 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_193 // Add MP0_ or MP1_ // Vehicle_193 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_193 // Add MP0_ or MP1_ // Vehicle_193 licence plate part 0

(packed)GANGOPSPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.

(packed)GANGOPSPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT105 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)GANGOPSPSTAT_INT106 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers

(int)PROP_FAC_SLOT0 // Add MP0_ or MP1_ // Stores property paid for biker factory property sloy 0
(int)PROP_FAC_SLOT1 // Add MP0_ or MP1_ // Stores property paid for biker factory property sloy 1
(int)PROP_FAC_SLOT2 // Add MP0_ or MP1_ // Stores property paid for biker factory property sloy 2
(int)PROP_FAC_SLOT3 // Add MP0_ or MP1_ // Stores property paid for biker factory property sloy 3
(int)PROP_FAC_SLOT4 // Add MP0_ or MP1_ // Stores property paid for biker factory property sloy 4
(int)PROP_FAC_SLOT5 // Add MP0_ or MP1_ // Stores property paid for biker factory property sloy 5

(int)PROP_WHOUSE_SLOT0 // Add MP0_ or MP1_ // Stores property paid for warehouse property sloy 0
(int)PROP_WHOUSE_SLOT1 // Add MP0_ or MP1_ // Stores property paid for warehouse property sloy 1
(int)PROP_WHOUSE_SLOT2 // Add MP0_ or MP1_ // Stores property paid for warehouse property sloy 2
(int)PROP_WHOUSE_SLOT3 // Add MP0_ or MP1_ // Stores property paid for warehouse property sloy 3
(int)PROP_WHOUSE_SLOT4 // Add MP0_ or MP1_ // Stores property paid for warehouse property sloy 4

(int)PROP_FAC_SLOT0_VAL // Add MP0_ or MP1_ // Stores value of biker factory property sloy 0
(int)PROP_FAC_SLOT1_VAL // Add MP0_ or MP1_ // Stores value of biker factory property sloy 1
(int)PROP_FAC_SLOT2_VAL // Add MP0_ or MP1_ // Stores value of biker factory property sloy 2
(int)PROP_FAC_SLOT3_VAL // Add MP0_ or MP1_ // Stores value of biker factory property sloy 3
(int)PROP_FAC_SLOT4_VAL // Add MP0_ or MP1_ // Stores value of biker factory property sloy 4
(int)PROP_FAC_SLOT5_VAL // Add MP0_ or MP1_ // Stores value of biker factory property sloy 5

(int)PROP_WHOUSE_SL0_VAL // Add MP0_ or MP1_ // Stores value of warehouse property sloy 0
(int)PROP_WHOUSE_SL1_VAL // Add MP0_ or MP1_ // Stores value of warehouse property sloy 1
(int)PROP_WHOUSE_SL2_VAL // Add MP0_ or MP1_ // Stores value of warehouse property sloy 2
(int)PROP_WHOUSE_SL3_VAL // Add MP0_ or MP1_ // Stores value of warehouse property sloy 3
(int)PROP_WHOUSE_SL4_VAL // Add MP0_ or MP1_ // Stores value of warehouse property sloy 4
(int)CHAR_FM_WEAP_ADDON_15_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH15 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_15_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_15_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6

(int)CR_GANGOP_MORGUE // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_DELUXO // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_SERVERFARM // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_IAABASE_FIN // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_STEALOSPREY // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_FOUNDRY // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_RIOTVAN // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_SUBMARINECAR // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_SUBMARINE_FIN // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_PREDATOR // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_BMLAUNCHER // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_BCCUSTOM // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_STEALTHTANKS // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_SPYPLANE // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_FINALE // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_FINALE_P2 // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)CR_GANGOP_FINALE_P3 // Add MP0_ or MP1_ // Counter for new Gang op missions
(int)DBASE_LOUNGE // Add MP0_ or MP1_ // GangOps defunct base customisation
(int)DBASE_PRIVACY_GLASS // Add MP0_ or MP1_ // GangOps defunct base customisation

(int)PROP_IE_WAREHOUSE_VER // Add MP0_ or MP1_ // the verification stat for IE garage ownership
(int)PROP_HANGAR_VALUE_VALID // Add MP0_ or MP1_ // Stores value of the hanagar property slot

(int)SHOTGARMORPIERCINGCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SHOTGEXPLOSIVECURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SHOTGHOLLOWPOINTCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SHOTGINCENDIARYCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)BULLRIFARMORPIERCINGCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)BULLRIFFMJCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)BULLRIFINCENDIARYCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)BULLRIFTRACERCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)MARKSNIPARMORPIERCCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)MARKSNIPFMJCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)MARKSNIPINCENDIARYCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)MARKSNIPTRACERCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)REVOLVEFMJCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)REVOLVEHOLLOWPOINTCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)REVOLVEINCENDIARYCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)REVOLVETRACERCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SNSPISFMJCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SNSPISHOLLOWPOINTCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SNSPISINCENDIARYCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SNSPISTRACERCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SPCARBIARMORPIERCINGCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SPCARBIFMJCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SPCARBIINCENDIARYCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers
(int)SPCARBITRACERCURRENT // Add MP0_ or MP1_ // MK2 Special Ammo trackers

(int)STARTER_OUT1 // Add MP0_ or MP1_ // PE PURCHASED
(int)STARTER_TAT1 // Add MP0_ or MP1_ // PE PURCHASED
(int)STARTER_TAT2 // Add MP0_ or MP1_ // PE PURCHASED


(int)MPPLY_GANGOPS_ALLINORDER // track new awards
(int)MPPLY_GANGOPS_LOYALTY // track new awards
(int)MPPLY_GANGOPS_CRIMMASMD // track new awards
(bool)MPPLY_AWD_GANGOPS_IAA // track new awards
(bool)MPPLY_AWD_GANGOPS_SUBMARINE // track new awards
(bool)MPPLY_AWD_GANGOPS_ALLINORDER // track new awards
(bool)MPPLY_AWD_GANGOPS_LOYALTY // track new awards
(bool)MPPLY_AWD_GANGOPS_CRIMMASMD // track new awards
(bool)MPPLY_AWD_GANGOPS_MISSILE // track new awards

(int)MPPLY_GANGOPS_LOYALTY2 // track new awards
(int)MPPLY_GANGOPS_LOYALTY3 // track new awards
(int)MPPLY_GANGOPS_CRIMMASMD2 // track new awards
(int)MPPLY_GANGOPS_CRIMMASMD3 // track new awards
(int)MPPLY_GANGOPS_SUPPORT // track new awards
(bool)MPPLY_AWD_GANGOPS_LOYALTY2 // track new awards
(bool)MPPLY_AWD_GANGOPS_LOYALTY3 // track new awards
(bool)MPPLY_AWD_GANGOPS_CRIMMASMD2 // track new awards
(bool)MPPLY_AWD_GANGOPS_CRIMMASMD3 // track new awards
(bool)MPPLY_AWD_GANGOPS_SUPPORT // track new awards


(int)AVENGER_ACCESS // Add MP0_ or MP1_ // AVENGER_ access
(int)AVENGER_DEFENCE_SETTING // Add MP0_ or MP1_ // AVENGER_ defense exclusion setting
(int)GANGOPS_HEIST_STATUS // Add MP0_ or MP1_ // i.e. flow process
(int)CE_SP_FLOW_NOTIFICATIONS // Add MP0_ or MP1_ // Email count
(int)ORBITAL_CANNON_COOLDOWN // Add MP0_ or MP1_ // Orbital Cannon cooldown
(int)ORBITAL_CANNON_KILLS // Add MP0_ or MP1_ // Orbital Cannon - Players killed

(int)TATTOO_FM_UNLOCKS_30 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_30 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_30 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_31 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_31 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_31 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16

(int)STROM_ASSIST_HELP // Add MP0_ or MP1_ // count number of times stromberg help has been displayed

(int)DLC_APPAREL_ACQUIRED_139 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_140 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_141 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_142 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_143 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_144 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_145 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_146 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_147 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_148 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_149 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_150 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_151 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_152 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_153 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_139 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_140 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_141 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_142 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_143 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_144 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_145 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_146 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_147 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_148 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_149 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_150 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_151 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_152 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_153 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)CHAR_KIT_34_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_34_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_34_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE34 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_35_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_35_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_35_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE35 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_36_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_36_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_36_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE36 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_37_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_37_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_37_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE37 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_38_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_38_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_38_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE38 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_39_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_39_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_39_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE39 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_KIT_40_FM_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_40_FM_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Player Kit equipped bitset 13
(int)CHAR_KIT_40_FM_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Player Kit Unlocked bitset 13
(int)CHAR_KIT_FM_PURCHASE40 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)CHAR_FM_WEAP_ADDON_16_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH16 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_16_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_16_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6



(int)HEISTCOOLDOWNTIMER0 // Add MP0_ or MP1_ // HEIST COOLDOWN TIMERS
(int)HEISTCOOLDOWNTIMER1 // Add MP0_ or MP1_ // HEIST COOLDOWN TIMERS
(int)HEISTCOOLDOWNTIMER2 // Add MP0_ or MP1_ // HEIST COOLDOWN TIMERS
(int)MPPLY_XMASLIVERIES0 // xmas liveries awards
(int)MPPLY_XMASLIVERIES1 // xmas liveries awards
(int)MPPLY_XMASLIVERIES2 // xmas liveries awards
(int)MPPLY_XMASLIVERIES3 // xmas liveries awards
(int)MPPLY_XMASLIVERIES4 // xmas liveries awards
(int)MPPLY_XMASLIVERIES5 // xmas liveries awards
(int)MPPLY_XMASLIVERIES6 // xmas liveries awards

(int)MPPLY_XMASLIVERIES7 // xmas liveries awards
(int)MPPLY_XMASLIVERIES8 // xmas liveries awards
(int)MPPLY_XMASLIVERIES9 // xmas liveries awards
(int)MPPLY_XMASLIVERIES10 // xmas liveries awards
(int)MPPLY_XMASLIVERIES11 // xmas liveries awards
(int)MPPLY_XMASLIVERIES12 // xmas liveries awards
(int)MPPLY_XMASLIVERIES13 // xmas liveries awards
(int)MPPLY_XMASLIVERIES14 // xmas liveries awards
(int)MPPLY_XMASLIVERIES15 // xmas liveries awards
(int)MPPLY_XMASLIVERIES16 // xmas liveries awards

(int)GANGOPS_FLOW_PASSED_BITSET // Add MP0_ or MP1_ // times each new heist strand has been completed
(bool)MPPLY_SIGN_SC_NEWSLET // track new awards


(int)CHAR_HAIR_VIEWED15 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_UNLCK15 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 1
(int)CHAR_HAIR_VIEWED16 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 2
(int)CHAR_HAIR_UNLCK16 // Add MP0_ or MP1_ // MP Char 0 - hair unlocked bitset 1
(int)CR_BEAMHACK // Add MP0_ or MP1_ // keep track of how many times a player has completed the beamhack minigame
(u64)GANGOPS_LAUNCH_TIME // Add MP0_ or MP1_ // GANGOPS_LAUNCH_TIME

(int)STARTER_PACK_PROP_BS // Add MP0_ or MP1_ // STARTER_PACK_PROP_BS
(int)STARTER_PACK_VEH_BS // Add MP0_ or MP1_ // STARTER_PACK_VEH_BS
(int)STARTER_PACK_WEAPON_BS // Add MP0_ or MP1_ // STARTER_PACK_WEAPON_BS
(int)STARTER_PACK_TATTOO_1_BS // Add MP0_ or MP1_ // STARTER_PACK_TATTOO_1_BS
(int)STARTER_PACK_TATTOO_2_BS // Add MP0_ or MP1_ // STARTER_PACK_TATTOO_2_BS
(int)STARTER_PACK_CLOTHING_1_BS // Add MP0_ or MP1_ // STARTER_PACK_CLOTHING_1_BS
(bool)STARTER_PACK_METRIC_SENT // Add MP0_ or MP1_ // STARTER_PACK_METRIC_SENT

(int)CHAR_FM_WEAP_ADDON_17_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH17 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_17_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_17_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6

(int)GANGOPS_PREP_SKIP // Add MP0_ or MP1_ // MP Char 0 - Gang ops trip skips
(int)GANGOPS_FM_MISSION_SKIP // Add MP0_ or MP1_ // MP Char 0 - Gang ops trip skips

(int)CHAR_FM_WEAP_ADDON_18_UNLCK // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)WEAP_FM_ADDON_PURCH18 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)CHAR_WEAP_ADDON_18_VIEWED // Add MP0_ or MP1_ // MP Char 0 - Addons unlocked bitset 6
(int)CHAR_FM_WEAP_ADDON_18_EQUIP // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6

(bool)HAS_PLAYED_HOTWIRE_HACK // Add MP0_ or MP1_ // HAS_PLAYED_HOTWIRE_HACK
(bool)DISABLE_FACILITY_EMBLEM // Add MP0_ or MP1_ // TOGGLE_FACILITY_EMBLEM

(bool)DISABLE_FACILITY_BOARD // Add MP0_ or MP1_ // TOGGLE_FACILITY_BOARD
(int)FINALE_VEHICLE_CHOICE // Add MP0_ or MP1_ // MP Char 0 - Equipped addons bitset 6
(int)SC_SET_HEIST2_PROGRESS // Add MP0_ or MP1_ // MP Char 0 - allow players to have thier heist progression set
(int)DELUXO_ASSIST_HELP // Add MP0_ or MP1_ // count number of times stromberg help has been displayed
(int)HEIST2_SESSION_ID_MACADDR // Add MP0_ or MP1_ // Heist help text
(int)HEIST2_SESSION_ID_POSTIME // Add MP0_ or MP1_ // Heist help text
(int)CSP_HELP_COUNTER // Add MP0_ or MP1_ // CSP help text
(int)MPPLY_DEATHS_PLAYER_SUICIDE // Number of deaths caused by other players, despite player trying to commits suicide 
(bool)MSG_ELLIE // Add MP0_ or MP1_ // Displays vehicle unlock messages
(bool)MSG_TEZERACT // Add MP0_ or MP1_ // Displays vehicle unlock messages
(bool)MSG_FLASHGT // Add MP0_ or MP1_ // Displays vehicle unlock messages
(bool)MSG_ISSI3 // Add MP0_ or MP1_ // Displays vehicle unlock messages
(bool)MSG_SEASPARROW // Add MP0_ or MP1_ // Displays vehicle unlock messages
(bool)MSG_CHEBUREK // Add MP0_ or MP1_ // Displays vehicle unlock messages
(bool)MSG_DOMINATOR3 // Add MP0_ or MP1_ // Displays vehicle unlock messages
(bool)MSG_TYRANT // Add MP0_ or MP1_ // Displays vehicle unlock messages
(bool)MSG_MICHELLI // Add MP0_ or MP1_ // Displays vehicle unlock messages
(bool)MSG_JESTER3 // Add MP0_ or MP1_ // Displays vehicle unlock messages
(int)COUNT_HOTRING_RACE // Add MP0_ or MP1_ // Counts number of hotring races

(short)MONEY_EARN_CLUB_INCOME // Add MP0_ or MP1_ // Money earn for cash collected from Safe for daily Nightclub income.
(int)FMBB_PCM_PROGRESS // Add MP0_ or MP1_ // MP Char 0 - allow players to have thier heist progression set
(int)PROP_BUSINESSHUB_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_BUSINESSHUB // Add MP0_ or MP1_ // Stores what other property player has purchased
(int)PROP_BUSINESSHUB_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased
(int)BUSINESSHUB_OWNED // Add MP0_ or MP1_ // BusinessBattles business hub owned
(int)BUSINESSHUB_CONT_TOTAL // Add MP0_ or MP1_ // BusinessBattles business hub contraband units owned
(int)BUSINESSHUB_CONT_MISSION // Add MP0_ or MP1_ // BusinessBattles business hub contraband mission
(int)BUSINESSHUB_MOD_1 // Add MP0_ or MP1_ // BusinessBattles business hub customisation
(int)BUSINESSHUB_MOD_2 // Add MP0_ or MP1_ // BusinessBattles business hub customisation
(int)BUSINESSHUB_MOD_3 // Add MP0_ or MP1_ // BusinessBattles business hub customisation
(int)BUSINESSHUB_MOD_4 // Add MP0_ or MP1_ // BusinessBattles business hub customisation
(int)BUSINESSHUB_MOD_5 // Add MP0_ or MP1_ // BusinessBattles business hub customisation
(int)BUSINESSHUB_MOD_6 // Add MP0_ or MP1_ // BusinessBattles business hub customisation
(int)BUSINESSHUB_MOD_7 // Add MP0_ or MP1_ // BusinessBattles business hub customisation

(int)PROP_NIGHTCLUB_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_NIGHTCLUB // Add MP0_ or MP1_ // Stores what other property player has purchased
(int)PROP_NIGHTCLUB_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased
(int)NIGHTCLUB_OWNED // Add MP0_ or MP1_ // BusinessBattles nightclub owned
(int)NIGHTCLUB_CONT_TOTAL // Add MP0_ or MP1_ // BusinessBattles nightclub contraband units owned
(int)NIGHTCLUB_CONT_MISSION // Add MP0_ or MP1_ // BusinessBattles nightclub contraband mission
(int)NIGHTCLUB_STYLE // Add MP0_ or MP1_ // BusinessBattles nightclub customisation
(int)NIGHTCLUB_LIGHTING // Add MP0_ or MP1_ // BusinessBattles nightclub customisation
(int)NIGHTCLUB_DJCHOICE // Add MP0_ or MP1_ // BusinessBattles nightclub customisation
(int)NIGHTCLUB_MOD_4 // Add MP0_ or MP1_ // BusinessBattles nightclub customisation
(int)NIGHTCLUB_MOD_5 // Add MP0_ or MP1_ // BusinessBattles nightclub customisation
(int)NIGHTCLUB_MOD_6 // Add MP0_ or MP1_ // BusinessBattles nightclub customisation
(int)NIGHTCLUB_MOD_7 // Add MP0_ or MP1_ // BusinessBattles nightclub customisation

(int)PROP_MEGAWARE_GAR1_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_MEGAWARE_GAR1 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_MEGAWARE_GAR1_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5
(int)PROP_MEGAWARE_GAR2_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_MEGAWARE_GAR2 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_MEGAWARE_GAR2_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5
(int)PROP_MEGAWARE_GAR3_VAR // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(int)PROP_MEGAWARE_GAR3 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_MEGAWARE_GAR3_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5

<!-- Business Battle vehicle stats -->
<!-- Vehicle_194-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_194 // Add MP0_ or MP1_ // Vehicle_194 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_194 // Add MP0_ or MP1_ // Vehicle_194 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_194 // Add MP0_ or MP1_ // Vehicle_194 premium paid by destroyer of vehicle
(int)MPSV_MODEL_194 // Add MP0_ or MP1_ // Vehicle_194 model enum of vehicle
(int)MPSV_FLAGS_194 // Add MP0_ or MP1_ // Vehicle_194 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_194 // Add MP0_ or MP1_ // Vehicle_194 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_194 // Add MP0_ or MP1_ // Vehicle_194 licence plate part 0
<!-- Vehicle_195-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_195 // Add MP0_ or MP1_ // Vehicle_195 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_195 // Add MP0_ or MP1_ // Vehicle_195 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_195 // Add MP0_ or MP1_ // Vehicle_195 premium paid by destroyer of vehicle
(int)MPSV_MODEL_195 // Add MP0_ or MP1_ // Vehicle_195 model enum of vehicle
(int)MPSV_FLAGS_195 // Add MP0_ or MP1_ // Vehicle_195 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_195 // Add MP0_ or MP1_ // Vehicle_195 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_195 // Add MP0_ or MP1_ // Vehicle_195 licence plate part 0
<!-- Vehicle_196-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_196 // Add MP0_ or MP1_ // Vehicle_196 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_196 // Add MP0_ or MP1_ // Vehicle_196 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_196 // Add MP0_ or MP1_ // Vehicle_196 premium paid by destroyer of vehicle
(int)MPSV_MODEL_196 // Add MP0_ or MP1_ // Vehicle_196 model enum of vehicle
(int)MPSV_FLAGS_196 // Add MP0_ or MP1_ // Vehicle_196 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_196 // Add MP0_ or MP1_ // Vehicle_196 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_196 // Add MP0_ or MP1_ // Vehicle_196 licence plate part 0
<!-- Vehicle_197-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_197 // Add MP0_ or MP1_ // Vehicle_197 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_197 // Add MP0_ or MP1_ // Vehicle_197 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_197 // Add MP0_ or MP1_ // Vehicle_197 premium paid by destroyer of vehicle
(int)MPSV_MODEL_197 // Add MP0_ or MP1_ // Vehicle_197 model enum of vehicle
(int)MPSV_FLAGS_197 // Add MP0_ or MP1_ // Vehicle_197 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_197 // Add MP0_ or MP1_ // Vehicle_197 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_197 // Add MP0_ or MP1_ // Vehicle_197 licence plate part 0
<!-- Vehicle_198-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_198 // Add MP0_ or MP1_ // Vehicle_198 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_198 // Add MP0_ or MP1_ // Vehicle_198 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_198 // Add MP0_ or MP1_ // Vehicle_198 premium paid by destroyer of vehicle
(int)MPSV_MODEL_198 // Add MP0_ or MP1_ // Vehicle_198 model enum of vehicle
(int)MPSV_FLAGS_198 // Add MP0_ or MP1_ // Vehicle_198 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_198 // Add MP0_ or MP1_ // Vehicle_198 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_198 // Add MP0_ or MP1_ // Vehicle_198 licence plate part 0
<!-- Vehicle_199-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_199 // Add MP0_ or MP1_ // Vehicle_199 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_199 // Add MP0_ or MP1_ // Vehicle_199 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_199 // Add MP0_ or MP1_ // Vehicle_199 premium paid by destroyer of vehicle
(int)MPSV_MODEL_199 // Add MP0_ or MP1_ // Vehicle_199 model enum of vehicle
(int)MPSV_FLAGS_199 // Add MP0_ or MP1_ // Vehicle_199 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_199 // Add MP0_ or MP1_ // Vehicle_199 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_199 // Add MP0_ or MP1_ // Vehicle_199 licence plate part 0
<!-- Vehicle_200-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_200 // Add MP0_ or MP1_ // Vehicle_200 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_200 // Add MP0_ or MP1_ // Vehicle_200 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_200 // Add MP0_ or MP1_ // Vehicle_200 premium paid by destroyer of vehicle
(int)MPSV_MODEL_200 // Add MP0_ or MP1_ // Vehicle_200 model enum of vehicle
(int)MPSV_FLAGS_200 // Add MP0_ or MP1_ // Vehicle_200 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_200 // Add MP0_ or MP1_ // Vehicle_200 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_200 // Add MP0_ or MP1_ // Vehicle_200 licence plate part 0
<!-- Vehicle_201-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_201 // Add MP0_ or MP1_ // Vehicle_201 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_201 // Add MP0_ or MP1_ // Vehicle_201 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_201 // Add MP0_ or MP1_ // Vehicle_201 premium paid by destroyer of vehicle
(int)MPSV_MODEL_201 // Add MP0_ or MP1_ // Vehicle_201 model enum of vehicle
(int)MPSV_FLAGS_201 // Add MP0_ or MP1_ // Vehicle_201 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_201 // Add MP0_ or MP1_ // Vehicle_201 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_201 // Add MP0_ or MP1_ // Vehicle_201 licence plate part 0
<!-- Vehicle_202-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_202 // Add MP0_ or MP1_ // Vehicle_202 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_202 // Add MP0_ or MP1_ // Vehicle_202 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_202 // Add MP0_ or MP1_ // Vehicle_202 premium paid by destroyer of vehicle
(int)MPSV_MODEL_202 // Add MP0_ or MP1_ // Vehicle_202 model enum of vehicle
(int)MPSV_FLAGS_202 // Add MP0_ or MP1_ // Vehicle_202 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_202 // Add MP0_ or MP1_ // Vehicle_202 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_202 // Add MP0_ or MP1_ // Vehicle_202 licence plate part 0
<!-- Vehicle_203-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_203 // Add MP0_ or MP1_ // Vehicle_203 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_203 // Add MP0_ or MP1_ // Vehicle_203 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_203 // Add MP0_ or MP1_ // Vehicle_203 premium paid by destroyer of vehicle
(int)MPSV_MODEL_203 // Add MP0_ or MP1_ // Vehicle_203 model enum of vehicle
(int)MPSV_FLAGS_203 // Add MP0_ or MP1_ // Vehicle_203 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_203 // Add MP0_ or MP1_ // Vehicle_203 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_203 // Add MP0_ or MP1_ // Vehicle_203 licence plate part 0
<!-- Vehicle_204-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_204 // Add MP0_ or MP1_ // Vehicle_204 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_204 // Add MP0_ or MP1_ // Vehicle_204 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_204 // Add MP0_ or MP1_ // Vehicle_204 premium paid by destroyer of vehicle
(int)MPSV_MODEL_204 // Add MP0_ or MP1_ // Vehicle_204 model enum of vehicle
(int)MPSV_FLAGS_204 // Add MP0_ or MP1_ // Vehicle_204 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_204 // Add MP0_ or MP1_ // Vehicle_204 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_204 // Add MP0_ or MP1_ // Vehicle_204 licence plate part 0
<!-- Vehicle_205-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_205 // Add MP0_ or MP1_ // Vehicle_205 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_205 // Add MP0_ or MP1_ // Vehicle_205 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_205 // Add MP0_ or MP1_ // Vehicle_205 premium paid by destroyer of vehicle
(int)MPSV_MODEL_205 // Add MP0_ or MP1_ // Vehicle_205 model enum of vehicle
(int)MPSV_FLAGS_205 // Add MP0_ or MP1_ // Vehicle_205 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_205 // Add MP0_ or MP1_ // Vehicle_205 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_205 // Add MP0_ or MP1_ // Vehicle_205 licence plate part 0
<!-- Vehicle_206-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_206 // Add MP0_ or MP1_ // Vehicle_206 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_206 // Add MP0_ or MP1_ // Vehicle_206 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_206 // Add MP0_ or MP1_ // Vehicle_206 premium paid by destroyer of vehicle
(int)MPSV_MODEL_206 // Add MP0_ or MP1_ // Vehicle_206 model enum of vehicle
(int)MPSV_FLAGS_206 // Add MP0_ or MP1_ // Vehicle_206 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_206 // Add MP0_ or MP1_ // Vehicle_206 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_206 // Add MP0_ or MP1_ // Vehicle_206 licence plate part 0
<!-- Vehicle_207-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_207 // Add MP0_ or MP1_ // Vehicle_207 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_207 // Add MP0_ or MP1_ // Vehicle_207 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_207 // Add MP0_ or MP1_ // Vehicle_207 premium paid by destroyer of vehicle
(int)MPSV_MODEL_207 // Add MP0_ or MP1_ // Vehicle_207 model enum of vehicle
(int)MPSV_FLAGS_207 // Add MP0_ or MP1_ // Vehicle_207 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_207 // Add MP0_ or MP1_ // Vehicle_207 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_207 // Add MP0_ or MP1_ // Vehicle_207 licence plate part 0
<!-- Vehicle_208-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_208 // Add MP0_ or MP1_ // Vehicle_208 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_208 // Add MP0_ or MP1_ // Vehicle_208 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_208 // Add MP0_ or MP1_ // Vehicle_208 premium paid by destroyer of vehicle
(int)MPSV_MODEL_208 // Add MP0_ or MP1_ // Vehicle_208 model enum of vehicle
(int)MPSV_FLAGS_208 // Add MP0_ or MP1_ // Vehicle_208 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_208 // Add MP0_ or MP1_ // Vehicle_208 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_208 // Add MP0_ or MP1_ // Vehicle_208 licence plate part 0
<!-- Vehicle_209-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_209 // Add MP0_ or MP1_ // Vehicle_209 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_209 // Add MP0_ or MP1_ // Vehicle_209 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_209 // Add MP0_ or MP1_ // Vehicle_209 premium paid by destroyer of vehicle
(int)MPSV_MODEL_209 // Add MP0_ or MP1_ // Vehicle_209 model enum of vehicle
(int)MPSV_FLAGS_209 // Add MP0_ or MP1_ // Vehicle_209 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_209 // Add MP0_ or MP1_ // Vehicle_209 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_209 // Add MP0_ or MP1_ // Vehicle_209 licence plate part 0
<!-- Vehicle_210-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_210 // Add MP0_ or MP1_ // Vehicle_210 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_210 // Add MP0_ or MP1_ // Vehicle_210 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_210 // Add MP0_ or MP1_ // Vehicle_210 premium paid by destroyer of vehicle
(int)MPSV_MODEL_210 // Add MP0_ or MP1_ // Vehicle_210 model enum of vehicle
(int)MPSV_FLAGS_210 // Add MP0_ or MP1_ // Vehicle_210 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_210 // Add MP0_ or MP1_ // Vehicle_210 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_210 // Add MP0_ or MP1_ // Vehicle_210 licence plate part 0
<!-- Vehicle_211-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_211 // Add MP0_ or MP1_ // Vehicle_211 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_211 // Add MP0_ or MP1_ // Vehicle_211 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_211 // Add MP0_ or MP1_ // Vehicle_211 premium paid by destroyer of vehicle
(int)MPSV_MODEL_211 // Add MP0_ or MP1_ // Vehicle_211 model enum of vehicle
(int)MPSV_FLAGS_211 // Add MP0_ or MP1_ // Vehicle_211 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_211 // Add MP0_ or MP1_ // Vehicle_211 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_211 // Add MP0_ or MP1_ // Vehicle_211 licence plate part 0
<!-- Vehicle_212-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_212 // Add MP0_ or MP1_ // Vehicle_212 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_212 // Add MP0_ or MP1_ // Vehicle_212 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_212 // Add MP0_ or MP1_ // Vehicle_212 premium paid by destroyer of vehicle
(int)MPSV_MODEL_212 // Add MP0_ or MP1_ // Vehicle_212 model enum of vehicle
(int)MPSV_FLAGS_212 // Add MP0_ or MP1_ // Vehicle_212 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_212 // Add MP0_ or MP1_ // Vehicle_212 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_212 // Add MP0_ or MP1_ // Vehicle_212 licence plate part 0
<!-- Vehicle_213-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_213 // Add MP0_ or MP1_ // Vehicle_213 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_213 // Add MP0_ or MP1_ // Vehicle_213 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_213 // Add MP0_ or MP1_ // Vehicle_213 premium paid by destroyer of vehicle
(int)MPSV_MODEL_213 // Add MP0_ or MP1_ // Vehicle_213 model enum of vehicle
(int)MPSV_FLAGS_213 // Add MP0_ or MP1_ // Vehicle_213 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_213 // Add MP0_ or MP1_ // Vehicle_213 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_213 // Add MP0_ or MP1_ // Vehicle_213 licence plate part 0
<!-- Vehicle_214-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_214 // Add MP0_ or MP1_ // Vehicle_214 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_214 // Add MP0_ or MP1_ // Vehicle_214 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_214 // Add MP0_ or MP1_ // Vehicle_214 premium paid by destroyer of vehicle
(int)MPSV_MODEL_214 // Add MP0_ or MP1_ // Vehicle_214 model enum of vehicle
(int)MPSV_FLAGS_214 // Add MP0_ or MP1_ // Vehicle_214 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_214 // Add MP0_ or MP1_ // Vehicle_214 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_214 // Add MP0_ or MP1_ // Vehicle_214 licence plate part 0
<!-- Vehicle_215-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_215 // Add MP0_ or MP1_ // Vehicle_215 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_215 // Add MP0_ or MP1_ // Vehicle_215 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_215 // Add MP0_ or MP1_ // Vehicle_215 premium paid by destroyer of vehicle
(int)MPSV_MODEL_215 // Add MP0_ or MP1_ // Vehicle_215 model enum of vehicle
(int)MPSV_FLAGS_215 // Add MP0_ or MP1_ // Vehicle_215 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_215 // Add MP0_ or MP1_ // Vehicle_215 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_215 // Add MP0_ or MP1_ // Vehicle_215 licence plate part 0
<!-- Vehicle_216-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_216 // Add MP0_ or MP1_ // Vehicle_216 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_216 // Add MP0_ or MP1_ // Vehicle_216 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_216 // Add MP0_ or MP1_ // Vehicle_216 premium paid by destroyer of vehicle
(int)MPSV_MODEL_216 // Add MP0_ or MP1_ // Vehicle_216 model enum of vehicle
(int)MPSV_FLAGS_216 // Add MP0_ or MP1_ // Vehicle_216 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_216 // Add MP0_ or MP1_ // Vehicle_216 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_216 // Add MP0_ or MP1_ // Vehicle_216 licence plate part 0
<!-- Vehicle_217-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_217 // Add MP0_ or MP1_ // Vehicle_217 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_217 // Add MP0_ or MP1_ // Vehicle_217 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_217 // Add MP0_ or MP1_ // Vehicle_217 premium paid by destroyer of vehicle
(int)MPSV_MODEL_217 // Add MP0_ or MP1_ // Vehicle_217 model enum of vehicle
(int)MPSV_FLAGS_217 // Add MP0_ or MP1_ // Vehicle_217 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_217 // Add MP0_ or MP1_ // Vehicle_217 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_217 // Add MP0_ or MP1_ // Vehicle_217 licence plate part 0
<!-- Vehicle_218-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_218 // Add MP0_ or MP1_ // Vehicle_218 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_218 // Add MP0_ or MP1_ // Vehicle_218 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_218 // Add MP0_ or MP1_ // Vehicle_218 premium paid by destroyer of vehicle
(int)MPSV_MODEL_218 // Add MP0_ or MP1_ // Vehicle_218 model enum of vehicle
(int)MPSV_FLAGS_218 // Add MP0_ or MP1_ // Vehicle_218 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_218 // Add MP0_ or MP1_ // Vehicle_218 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_218 // Add MP0_ or MP1_ // Vehicle_218 licence plate part 0
<!-- Vehicle_219-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_219 // Add MP0_ or MP1_ // Vehicle_219 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_219 // Add MP0_ or MP1_ // Vehicle_219 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_219 // Add MP0_ or MP1_ // Vehicle_219 premium paid by destroyer of vehicle
(int)MPSV_MODEL_219 // Add MP0_ or MP1_ // Vehicle_219 model enum of vehicle
(int)MPSV_FLAGS_219 // Add MP0_ or MP1_ // Vehicle_219 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_219 // Add MP0_ or MP1_ // Vehicle_219 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_219 // Add MP0_ or MP1_ // Vehicle_219 licence plate part 0
<!-- Vehicle_220-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_220 // Add MP0_ or MP1_ // Vehicle_220 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_220 // Add MP0_ or MP1_ // Vehicle_220 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_220 // Add MP0_ or MP1_ // Vehicle_220 premium paid by destroyer of vehicle
(int)MPSV_MODEL_220 // Add MP0_ or MP1_ // Vehicle_220 model enum of vehicle
(int)MPSV_FLAGS_220 // Add MP0_ or MP1_ // Vehicle_220 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_220 // Add MP0_ or MP1_ // Vehicle_220 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_220 // Add MP0_ or MP1_ // Vehicle_220 licence plate part 0
<!-- Vehicle_221-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_221 // Add MP0_ or MP1_ // Vehicle_221 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_221 // Add MP0_ or MP1_ // Vehicle_221 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_221 // Add MP0_ or MP1_ // Vehicle_221 premium paid by destroyer of vehicle
(int)MPSV_MODEL_221 // Add MP0_ or MP1_ // Vehicle_221 model enum of vehicle
(int)MPSV_FLAGS_221 // Add MP0_ or MP1_ // Vehicle_221 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_221 // Add MP0_ or MP1_ // Vehicle_221 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_221 // Add MP0_ or MP1_ // Vehicle_221 licence plate part 0
<!-- Vehicle_222-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_222 // Add MP0_ or MP1_ // Vehicle_222 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_222 // Add MP0_ or MP1_ // Vehicle_222 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_222 // Add MP0_ or MP1_ // Vehicle_222 premium paid by destroyer of vehicle
(int)MPSV_MODEL_222 // Add MP0_ or MP1_ // Vehicle_222 model enum of vehicle
(int)MPSV_FLAGS_222 // Add MP0_ or MP1_ // Vehicle_222 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_222 // Add MP0_ or MP1_ // Vehicle_222 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_222 // Add MP0_ or MP1_ // Vehicle_222 licence plate part 0
<!-- Vehicle_223-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_223 // Add MP0_ or MP1_ // Vehicle_223 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_223 // Add MP0_ or MP1_ // Vehicle_223 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_223 // Add MP0_ or MP1_ // Vehicle_223 premium paid by destroyer of vehicle
(int)MPSV_MODEL_223 // Add MP0_ or MP1_ // Vehicle_223 model enum of vehicle
(int)MPSV_FLAGS_223 // Add MP0_ or MP1_ // Vehicle_223 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_223 // Add MP0_ or MP1_ // Vehicle_223 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_223 // Add MP0_ or MP1_ // Vehicle_223 licence plate part 0
<!-- Vehicle_224-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_224 // Add MP0_ or MP1_ // Vehicle_224 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_224 // Add MP0_ or MP1_ // Vehicle_224 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_224 // Add MP0_ or MP1_ // Vehicle_224 premium paid by destroyer of vehicle
(int)MPSV_MODEL_224 // Add MP0_ or MP1_ // Vehicle_224 model enum of vehicle
(int)MPSV_FLAGS_224 // Add MP0_ or MP1_ // Vehicle_224 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_224 // Add MP0_ or MP1_ // Vehicle_224 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_224 // Add MP0_ or MP1_ // Vehicle_224 licence plate part 0
<!-- Vehicle_225-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_225 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_225 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_225 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_225 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_225 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_225 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_225 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_226-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_226 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_226 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_226 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_226 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_226 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_226 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_226 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_227-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_227 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_227 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_227 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_227 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_227 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_227 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_227 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_228-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_228 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_228 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_228 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_228 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_228 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_228 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_228 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_229-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_229 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_229 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_229 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_229 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_229 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_229 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_229 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_230-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_230 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_230 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_230 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_230 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_230 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_230 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_230 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0




(packed)BUSINESSBATPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT105 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT106 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT107 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT108 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT109 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT110 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT111 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT112 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT113 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT114 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT115 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT116 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT117 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT118 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT119 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT120 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT121 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT122 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT123 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT124 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT125 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT126 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT127 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT128 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT129 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT130 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT131 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT132 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT133 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT134 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT135 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT136 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT137 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT138 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT139 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT140 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT141 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT142 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT143 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT144 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT145 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT146 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT147 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT148 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT149 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT150 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT151 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT152 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT153 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT154 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT155 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT156 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT157 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT158 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT159 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT160 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT161 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT162 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT163 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT164 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT165 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT166 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT167 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT168 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT169 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT170 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT171 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT172 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT173 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT174 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT175 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT176 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT177 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT178 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT179 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT180 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT181 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT182 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT183 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT184 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT185 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT186 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT187 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT188 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT189 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT190 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT191 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT192 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT193 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT194 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT195 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT196 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT197 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT198 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT199 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT200 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT201 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT202 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT203 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT204 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT205 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT206 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT207 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT208 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT209 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT210 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT211 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT212 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT213 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT214 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT215 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT216 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT217 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT218 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT219 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT220 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT221 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT222 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT223 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT224 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT225 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT226 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT227 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT228 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT229 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT230 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT231 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT232 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT233 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT234 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT235 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT236 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT237 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT238 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT239 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT240 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT241 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT242 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT243 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT244 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT245 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT246 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT247 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT248 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT249 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT250 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT251 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT252 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT253 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT254 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT255 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT256 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT257 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT258 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT259 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT260 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT261 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT262 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT263 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT264 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT265 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT266 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT267 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT268 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT269 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT270 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT271 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT272 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT273 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT274 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT275 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT276 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT277 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT278 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT279 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT280 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT281 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT282 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT283 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT284 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT285 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT286 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT287 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT288 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT289 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT290 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT291 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT292 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT293 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT294 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT295 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT296 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT297 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT298 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT299 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT300 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT301 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT302 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT303 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT304 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT305 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT306 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT307 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT308 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT309 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT310 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT311 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT312 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT313 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT314 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT315 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT316 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT317 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT318 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT319 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT320 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT321 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT322 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT323 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT324 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT325 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT326 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT327 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT328 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT329 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT330 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT331 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT332 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT333 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT334 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT335 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT336 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT337 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT338 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT339 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT340 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT341 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT342 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT343 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT344 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT345 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT346 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT347 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT348 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT349 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT350 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT351 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT352 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT353 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT354 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT355 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT356 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT357 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT358 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT359 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT360 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT361 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT362 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT363 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT364 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT365 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT366 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT367 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT368 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT369 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT370 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT371 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT372 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT373 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT374 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT375 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT376 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT377 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT378 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT379 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)BUSINESSBATPSTAT_INT380 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers

(int)INV_HACKERTRUCK_MODEL_0 // Add MP0_ or MP1_ // SA Stat for hacker truck model
(int)CLUB_PAY_TIME_LEFT // Add MP0_ or MP1_ // Time left until next payout, periodically updated
(int)CLUB_SAFE_CASH_VALUE // Add MP0_ or MP1_ // Ammount of cash stored in club safe
(int)CLUB_POPULARITY // Add MP0_ or MP1_ // Popularity of player's club
(int)CLUB_CONTRABAND_MISSION // Add MP0_ or MP1_ // Inventory slot to validate transactions

(int)PROP_NIGHTCLUB_NAME_ID // Add MP0_ or MP1_ // the apartment interior variations in the apartments pack
(string)NIGHTCLUB_NAME // Add MP0_ or MP1_ // Nightclub Name
(string)NIGHTCLUB_NAME2 // Add MP0_ or MP1_ // Nightclub Name
(int)NIGHTCLUBACCESSSETTING // Add MP0_ or MP1_ // Setting for PI menu Nightclub access

(packed)BUSINESSBATPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(int)DJBOOTHACCESSSETTING // Add MP0_ or MP1_ // Setting for PI menu Nightclub access
(int)VIPCLUBACCESSSETTING // Add MP0_ or MP1_ // Setting for PI menu Nightclub access
(int)CLUBOFFACCESSSETTING // Add MP0_ or MP1_ // Setting for PI menu Nightclub access
(int)BBT_PHCALL_TIMER_NCLUB // Add MP0_ or MP1_ // phone call mission timer for the nightclub
(bool)MPPLY_MELEECHLENGECOMPLETED // Stat to track if melee challenge is complete to unlock weapon in bob

(int)HUB_PROD_TOTAL_0 // Add MP0_ or MP1_ // Product total for business type 0 (HUB)
(int)HUB_PROD_TOTAL_1 // Add MP0_ or MP1_ // Product total for business type 1 (HUB)
(int)HUB_PROD_TOTAL_2 // Add MP0_ or MP1_ // Product total for business type 2 (HUB)
(int)HUB_PROD_TOTAL_3 // Add MP0_ or MP1_ // Product total for business type 3 (HUB)
(int)HUB_PROD_TOTAL_4 // Add MP0_ or MP1_ // Product total for business type 4 (HUB)
(int)HUB_PROD_TOTAL_5 // Add MP0_ or MP1_ // Product total for business type 5 (HUB)
(int)HUB_PROD_TOTAL_6 // Add MP0_ or MP1_ // Product total for business type 6 (HUB)

(int)FMBB_FLOW_NOTIFICATIONS // Add MP0_ or MP1_ // Business battle Email count

(int)NIGHTCLUB_VIP_APPEAR // Add MP0_ or MP1_ // Lifetime VIP appearances in the nightclub
(int)NIGHTCLUB_JOBS_DONE // Add MP0_ or MP1_ // Lifetime nightclub jobs done counter
(int)NIGHTCLUB_EARNINGS // Add MP0_ or MP1_ // Lifetime nightclub earnings
(int)HUB_SALES_COMPLETED // Add MP0_ or MP1_ // Lifetime business hub jobs done counter
(int)HUB_EARNINGS // Add MP0_ or MP1_ // Lifetime business hub earnings

(int)SHOPFM_PERS_GUN_HTRUCK // Add MP0_ or MP1_ // Shop stat for Hacker Truck Armory
(int)FM_CUT_DONE_2 // Add MP0_ or MP1_ // Track which cutscenes have beend done

(int)DANCE_COMBO_DURATION_MINS // Add MP0_ or MP1_ // Lifetime beat matching combo duration (mins)
(int)NIGHTCLUB_PLAYER_APPEAR // Add MP0_ or MP1_ // Lifetime count of players who have paid for entry to our club
(int)LIFETIME_HUB_GOODS_SOLD // Add MP0_ or MP1_ // Lifetime count hub goods sold
(int)LIFETIME_HUB_GOODS_MADE // Add MP0_ or MP1_ // Lifetime count hub goods accrued over time
(int)FAVORITE_VEH_TYPE_CURRENT // Add MP0_ or MP1_ // Track players fave vehicle
(int)FAVORITE_VEH_TIME_CURRENT // Add MP0_ or MP1_ // Track players fave vehicle
(int)FAVORITE_VEH_TYPE_ALLTIME // Add MP0_ or MP1_ // Track players fave vehicle
(int)FAVORITE_VEH_TIME_ALLTIME // Add MP0_ or MP1_ // Track players fave vehicle

(int)BOUNTY_TARGET1 // Add MP0_ or MP1_ // Track players bounty targets
(int)BOUNTY_TARGET2 // Add MP0_ or MP1_ // Track players bounty targets
(int)BOUNTY_TARGET3 // Add MP0_ or MP1_ // Track players bounty targets
(int)BOUNTY_TARGET4 // Add MP0_ or MP1_ // Track players bounty targets
(int)NIGHTCLUBDANCSSETTING // Add MP0_ or MP1_ // Setting for PI menu Nightclub access
(int)NIGHTCLUBCROWDSETTING // Add MP0_ or MP1_ // Setting for PI menu Nightclub access
(int)HUB_CONTRABAND_MISSION // Add MP0_ or MP1_ // Inventory slot to validate transactions

(int)DANCEPERFECTOWNCLUB // Add MP0_ or MP1_ // Get all the services
(int)NUMUNIQUEPLYSINCLUB // Add MP0_ or MP1_ // Get all the services
(int)DANCETODIFFDJS // Add MP0_ or MP1_ // Get all the services
(int)TATTOO_FM_UNLOCKS_32 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_32 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_32 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_33 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_33 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_33 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_UNLOCKS_34 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 16
(int)TATTOO_FM_CURRENT_34 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)TATTOO_FM_VIEWED_34 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 16
(int)MPPLY_WITHOUTPSPLUS // player 0 - Current Tattoos 16
(int)SOLCOUNTER // Add MP0_ or MP1_ // TU2 Embedded Content Help Text: LSUR and DJ Mixes
(int)TOSCOUNTER // Add MP0_ or MP1_ // TU2 Embedded Content Help Text: LSUR and DJ Mixes
(int)DIXCOUNTER // Add MP0_ or MP1_ // TU2 Embedded Content Help Text: LSUR and DJ Mixes
(int)BMCOUNTER // Add MP0_ or MP1_ // TU2 Embedded Content Help Text: LSUR and DJ Mixes

(packed)BUSINESSBATPSTAT_BOOL1 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.

(int)DLC_APPAREL_ACQUIRED_154 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_155 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_156 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_157 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_158 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_159 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_160 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_154 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_155 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_156 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_157 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_158 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_159 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_160 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)NIGHTCLUB_HOTSPOT_TIME_MS // Add MP0_ or MP1_ // Stat to track nightclub hotspot time in mins
(int)LASTHACKERMISTIMER // Add MP0_ or MP1_ // HACKER COOLDOWN TIMERS
(int)FMBB_FLOW_NOTIFICATIONS2 // Add MP0_ or MP1_ // Business battle Email count

(int)PROP_ARENAWARS_GAR1 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_ARENAWARS_GAR1_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5
(int)PROP_ARENAWARS_GAR2 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_ARENAWARS_GAR2_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5
(int)PROP_ARENAWARS_GAR3 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_ARENAWARS_GAR3_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5


<!-- Vehicle_231-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_231 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_231 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_231 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_231 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_231 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_231 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_231 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_232-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_232 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_232 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_232 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_232 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_232 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_232 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_232 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_233-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_233 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_233 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_233 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_233 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_233 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_233 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_233 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_234-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_234 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_234 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_234 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_234 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_234 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_234 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_234 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_235-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_235 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_235 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_235 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_235 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_235 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_235 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_235 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_236-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_236 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_236 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_236 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_236 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_236 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_236 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_236 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_237-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_237 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_237 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_237 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_237 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_237 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_237 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_237 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_238-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_238 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_238 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_238 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_238 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_238 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_238 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_238 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_239-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_239 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_239 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_239 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_239 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_239 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_239 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_239 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_240-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_240 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_240 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_240 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_240 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_240 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_240 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_240 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_241-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_241 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_241 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_241 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_241 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_241 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_241 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_241 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_242-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_242 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_242 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_242 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_242 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_242 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_242 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_242 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_243-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_243 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_243 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_243 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_243 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_243 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_243 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_243 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_244-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_244 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_244 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_244 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_244 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_244 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_244 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_244 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_245-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_245 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_245 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_245 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_245 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_245 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_245 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_245 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_246-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_246 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_246 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_246 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_246 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_246 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_246 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_246 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_247-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_247 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_247 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_247 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_247 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_247 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_247 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_247 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_248-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_248 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_248 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_248 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_248 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_248 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_248 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_248 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_249-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_249 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_249 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_249 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_249 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_249 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_249 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_249 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_250-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_250 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_250 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_250 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_250 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_250 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_250 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_250 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_251-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_251 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_251 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_251 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_251 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_251 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_251 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_251 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_252-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_252 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_252 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_252 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_252 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_252 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_252 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_252 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_253-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_253 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_253 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_253 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_253 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_253 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_253 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_253 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_254-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_254 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_254 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_254 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_254 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_254 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_254 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_254 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_255-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_255 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_255 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_255 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_255 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_255 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_255 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_255 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_256-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_256 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_256 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_256 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_256 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_256 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_256 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_256 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_257-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_257 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_257 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_257 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_257 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_257 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_257 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_257 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_258-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_258 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_258 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_258 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_258 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_258 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_258 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_258 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_259-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_259 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_259 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_259 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_259 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_259 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_259 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_259 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_260-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_260 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_260 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_260 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_260 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_260 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_260 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_260 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0

(packed)ARENAWARSPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT105 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT106 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT107 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT108 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT109 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT110 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT111 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT112 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT113 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT114 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT115 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT116 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT117 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT118 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT119 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT120 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT121 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT122 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT123 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT124 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT125 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT126 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT127 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT128 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT129 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT130 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT131 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT132 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT133 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT134 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT135 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT136 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT137 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT138 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT139 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT140 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT141 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT142 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT143 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT144 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT145 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT146 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT147 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT148 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT149 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT150 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT151 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT152 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT153 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT154 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT155 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT156 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT157 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT158 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT159 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT160 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT161 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT162 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT163 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT164 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT165 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT166 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT167 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT168 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT169 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT170 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT171 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT172 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT173 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT174 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT175 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT176 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT177 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT178 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT179 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT180 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT181 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT182 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT183 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT184 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT185 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT186 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT187 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT188 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT189 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT190 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT191 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT192 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT193 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT194 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT195 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT196 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT197 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT198 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT199 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT200 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT201 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT202 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT203 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT204 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT205 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT206 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT207 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT208 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT209 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT210 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT211 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT212 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT213 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT214 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT215 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT216 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT217 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT218 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT219 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT220 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT221 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT222 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT223 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT224 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT225 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT226 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT227 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT228 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT229 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT230 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT231 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT232 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT233 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT234 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT235 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT236 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT237 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT238 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT239 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT240 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT241 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT242 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT243 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT244 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT245 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT246 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT247 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT248 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT249 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT250 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT251 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT252 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT253 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT254 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT255 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT256 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT257 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT258 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT259 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT260 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT261 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT262 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT263 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT264 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT265 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT266 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT267 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT268 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT269 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT270 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT271 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT272 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT273 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT274 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT275 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT276 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT277 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT278 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT279 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT280 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT281 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT282 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT283 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT284 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT285 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT286 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT287 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT288 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT289 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT290 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT291 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT292 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT293 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT294 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT295 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT296 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT297 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT298 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT299 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT300 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT301 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT302 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT303 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT304 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT305 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT306 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT307 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT308 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT309 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT310 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT311 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT312 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT313 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT314 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT315 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT316 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT317 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT318 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT319 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT320 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT321 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT322 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT323 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT324 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT325 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT326 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT327 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT328 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT329 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT330 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT331 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT332 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT333 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT334 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT335 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT336 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT337 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT338 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT339 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT340 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT341 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT342 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT343 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT344 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)ARENAWARSPSTAT_INT345 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers

(int)ARENAWARS_SP // Add MP0_ or MP1_ // Arena wars - Skill points
(int)ARENAWARS_SKILL_LEVEL // Add MP0_ or MP1_ // Arena wars - Player skill level
(int)ARENAWARS_SP_LIFETIME // Add MP0_ or MP1_ // Arena wars - Skill points earned lifetime
(int)ARENAWARS_AP // Add MP0_ or MP1_ // Arena wars - Arena points earned
(int)ARENAWARS_AP_TIER // Add MP0_ or MP1_ // Arena wars - Arena points tier
(int)ARENAWARS_AP_LIFETIME // Add MP0_ or MP1_ // Arena wars - Arena points earned lifetime
(int)ARENAWARS_CARRER_UNLK // Add MP0_ or MP1_ // Arena wars - Last 5 unlocks Tracker BS

(int)ARENAGARAGE_OWNED // Add MP0_ or MP1_ // Arena wars - arena garage owned
(int)ARENAGARAGE_MOD_INTERIORA // Add MP0_ or MP1_ // Arena wars - arena garage customisation
(int)ARENAGARAGE_MOD_INTERIORB // Add MP0_ or MP1_ // Arena wars - arena garage customisation
(int)ARENAGARAGE_MOD_INTERIORC // Add MP0_ or MP1_ // Arena wars - arena garage customisation
(int)ARENAGARAGE_MOD_FLOOR_B1 // Add MP0_ or MP1_ // Arena wars - arena garage customisation
(int)ARENAGARAGE_MOD_FLOOR_B2 // Add MP0_ or MP1_ // Arena wars - arena garage customisation
(int)ARENAGARAGE_MOD_BENNYMECH // Add MP0_ or MP1_ // Arena wars - arena garage customisation
(int)ARENAGARAGE_MOD_WEAPONMECH // Add MP0_ or MP1_ // Arena wars - arena garage customisation
(int)ARENAGARAGE_MOD_PERSQUART // Add MP0_ or MP1_ // Arena wars - arena garage customisation

(int)ARENAWARS_CARRER_WINS // Add MP0_ or MP1_ // Arena wars - Career wins
(int)ARENAWARS_CARRER_WINT // Add MP0_ or MP1_ // Arena wars - Career wins - Team
(int)MPPLY_LAST_ARENAPREM_WON //  time of when the player last won a professional race. 

(int)ARENAWARS_FREE_SPINS // Add MP0_ or MP1_ // Arena wars - Wheel spin mini-game free spins
(int)ARENAWARS_MATCHES_PLYD // Add MP0_ or MP1_ // Arena wars - Number of solo matches played
(int)ARENAWARS_MATCHES_PLYDT // Add MP0_ or MP1_ // Arena wars - Number of team matches played
(int)BACK_MARK // Add MP0_ or MP1_ //  BACK_MARK

(int)NUMBER_OF_CHAMP_BOUGHT // Add MP0_ or MP1_ // Champagne bought for inventory.

(packed)ARENAWARSPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)ARENAWARSPSTAT_BOOL1 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)ARENAWARSPSTAT_BOOL2 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)ARENAWARSPSTAT_BOOL3 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)ARENAWARSPSTAT_BOOL4 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)ARENAWARSPSTAT_BOOL5 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)ARENAWARSPSTAT_BOOL6 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)ARENAWARSPSTAT_BOOL7 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)ARENAWARSPSTAT_BOOL8 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.

(bool)AWD_BEGINNER // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_FIELD_FILLER // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_ARMCHAIR_RACER // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_LEARNER // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_SUNDAY_DRIVER // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_THE_ROOKIE // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_BUMP_AND_RUN // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_GEAR_HEAD // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_DOOR_SLAMMER // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_HOT_LAP // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_ARENA_AMATEUR // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_PAINT_TRADER // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_SHUNTER // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_JOCK // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_WARRIOR // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_T_BONE // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_MAYHEM // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_WRECKER // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_CRASH_COURSE // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_ARENA_LEGEND // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_PEGASUS // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_WATCH_YOUR_STEP // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_TOWER_OFFENSE // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_CONTACT_SPORT // Add MP0_ or MP1_ // Award for Arena 
(bool)AWD_UNSTOPPABLE // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_READY_FOR_WAR // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_THROUGH_A_LENS // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_SPINNER // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_YOUMEANBOOBYTRAPS // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_MASTER_BANDITO // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_SITTING_DUCK // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_CROWDPARTICIPATION // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_KILL_OR_BE_KILLED // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_MASSIVE_SHUNT // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_YOURE_OUTTA_HERE // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_WEVE_GOT_ONE // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_ARENA_WAGEWORKER // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_TIME_SERVED // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_TOP_SCORE // Add MP0_ or MP1_ // Award for Arena 
(int)AWD_CAREER_WINNER // Add MP0_ or MP1_ // Award for Arena 

(bool)MPPLY_AW_JOINSPEC // Shop ped apparel save data
(int)ARENA_NOTIFICATIONS // Add MP0_ or MP1_ // Arena notifications count
(int)SHOPFM_PERS_GUN_ARENA // Add MP0_ or MP1_ // Shop stat for Arena Garage Armory


(int)DLC_APPAREL_ACQUIRED_161 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_162 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_163 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_164 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_165 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_166 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_167 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_168 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_169 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_170 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_171 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_172 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_173 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_174 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_175 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_161 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_162 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_163 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_164 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_165 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_166 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_167 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_168 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_169 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_170 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_171 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_172 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_173 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_174 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_175 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)ARN_W_PASS_THE_BOMB // Add MP0_ or MP1_ // Win count on event type: (arena) PASS_THE_BOMB
(int)ARN_W_DETONATION // Add MP0_ or MP1_ // Win count on event type: (arena) DETONATION
(int)ARN_W_ARCADE_RACE // Add MP0_ or MP1_ // Win count on event type: (arena) ARCADE_RACE
(int)ARN_W_CTF // Add MP0_ or MP1_ // Win count on event type: (arena) CTF
(int)ARN_W_TAG_TEAM // Add MP0_ or MP1_ // Win count on event type: (arena) TAG_TEAM
(int)ARN_W_DESTR_DERBY // Add MP0_ or MP1_ // Win count on event type: (arena) DESTRUCTION_DERBY
(int)ARN_W_CARNAGE // Add MP0_ or MP1_ // Win count on event type: (arena) CARNAGE
(int)ARN_W_MONSTER_JAM // Add MP0_ or MP1_ // Win count on event type: (arena) MONSTER_JAM
(int)ARN_W_GAMES_MASTERS // Add MP0_ or MP1_ // Win count on event type: (arena) GAMES_MASTERS

(int)ARN_L_PASS_THE_BOMB // Add MP0_ or MP1_ // Loss count on event type: (arena) PASS_THE_BOMB
(int)ARN_L_DETONATION // Add MP0_ or MP1_ // Loss count on event type: (arena) DETONATION
(int)ARN_L_ARCADE_RACE // Add MP0_ or MP1_ // Loss count on event type: (arena) ARCADE_RACE
(int)ARN_L_CTF // Add MP0_ or MP1_ // Loss count on event type: (arena) CTF
(int)ARN_L_TAG_TEAM // Add MP0_ or MP1_ // Loss count on event type: (arena) TAG_TEAM
(int)ARN_L_DESTR_DERBY // Add MP0_ or MP1_ // Loss count on event type: (arena) DESTRUCTION_DERBY
(int)ARN_L_CARNAGE // Add MP0_ or MP1_ // Loss count on event type: (arena) CARNAGE
(int)ARN_L_MONSTER_JAM // Add MP0_ or MP1_ // Loss count on event type: (arena) MONSTER_JAM
(int)ARN_L_GAMES_MASTERS // Add MP0_ or MP1_ // Loss count on event type: (arena) GAMES_MASTERS

(int)ARN_VEH_MONSTER3 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_MONSTER4 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_MONSTER5 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_CERBERUS // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_CERBERUS2 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_CERBERUS3 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_BRUISER // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_BRUISER2 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_BRUISER3 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_SLAMVAN4 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_SLAMVAN5 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_SLAMVAN6 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_BRUTUS // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_BRUTUS2 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_BRUTUS3 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_SCARAB // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_SCARAB2 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_SCARAB3 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_DOMINATOR4 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_DOMINATOR5 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_DOMINATOR6 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_IMPALER2 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_IMPALER3 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_IMPALER4 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_ISSI4 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_ISSI5 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_ISSI6 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_IMPERATOR // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_IMPERATOR2 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_IMPERATOR3 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_ZR380 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_ZR3802 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_ZR3803 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_DEATHBIKE // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_DEATHBIKE2 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_VEH_DEATHBIKE3 // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event

(int)ARN_SPECTATOR_KILLS // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_LIFETIME_KILLS // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event
(int)ARN_LIFETIME_DEATHS // Add MP0_ or MP1_ // Number of times this vehicles was used in a completed Arena War event

(int)WORKSHOP_REMINDER_CT // Add MP0_ or MP1_ // Number of times remind player to get a workshop
(int)TATTOO_FM_UNLOCKS_35 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 35
(int)TATTOO_FM_CURRENT_35 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 35
(int)TATTOO_FM_VIEWED_35 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 35
(int)TATTOO_FM_UNLOCKS_36 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 36
(int)TATTOO_FM_CURRENT_36 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 36
(int)TATTOO_FM_VIEWED_36 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 36
(int)TATTOO_FM_UNLOCKS_37 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 37
(int)TATTOO_FM_CURRENT_37 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 37
(int)TATTOO_FM_VIEWED_37 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 37
(int)TATTOO_FM_UNLOCKS_38 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 38
(int)TATTOO_FM_CURRENT_38 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 38
(int)TATTOO_FM_VIEWED_38 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 38

(int)ARN_W_THEME_SCIFI // Add MP0_ or MP1_ // Win count on Arena scifi maps
(int)ARN_W_THEME_APOC // Add MP0_ or MP1_ // Win count on Arena apoc maps
(int)ARN_W_THEME_CONS // Add MP0_ or MP1_ // Win count on Arena consumer maps
(int)ARN_SPECTATOR_DRONE // Add MP0_ or MP1_ // Number of times player has smoked in spectator box
(int)ARN_SPECTATOR_CAMS // Add MP0_ or MP1_ // Number of times player has smoked in spectator box
(int)ARN_SMOKE // Add MP0_ or MP1_ // Number of times player has smoked in spectator box
(int)ARN_DRINK // Add MP0_ or MP1_ // Number of times player has had a drink in spectator box
(int)ARN_SPEC_BOX_TIME_MS // Add MP0_ or MP1_ // Time (ms) player has spent in the Arena spectator box

(int)ARN_BS_TRINKET_TICKERS // Add MP0_ or MP1_ // Bitset showing which Arena Career Wall trinkets have had tickers shown
(int)ARN_BS_TRINKET_SAVED // Add MP0_ or MP1_ // Bitset showing which Arena Career Wall trinkets have been earned

(int)ARN_BS_UNLCK_ITM_VIEW_1 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_2 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_3 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_4 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_5 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_6 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_7 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_8 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_9 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_10 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_11 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_12 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_13 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_14 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_15 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_16 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_17 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_18 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_19 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_20 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed
(int)ARN_BS_UNLCK_ITM_VIEW_21 // Add MP0_ or MP1_ // Bitset showing which Arena Career unlock items have been viewed

<!-- Casino Pack -->
(int)PROP_CASINO_GAR1 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_CASINO_GAR1_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5

<!-- Vehicle_261-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_261 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_261 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_261 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_261 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_261 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_261 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_261 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_262-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_262 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_262 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_262 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_262 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_262 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_262 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_262 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_263-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_263 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_263 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_263 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_263 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_263 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_263 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_263 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_264-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_264 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_264 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_264 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_264 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_264 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_264 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_264 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_265-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_265 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_265 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_265 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_265 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_265 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_265 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_265 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_266-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_266 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_266 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_266 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_266 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_266 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_266 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_266 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_267-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_267 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_267 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_267 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_267 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_267 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_267 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_267 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_268-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_268 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_268 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_268 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_268 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_268 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_268 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_268 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_269-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_269 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_269 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_269 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_269 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_269 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_269 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_269 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_270-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_270 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_270 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_270 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_270 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_270 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_270 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_270 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0


(packed)CASINOPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT105 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT106 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT107 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT108 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT109 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT110 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT111 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT112 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT113 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT114 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT115 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT116 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT117 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT118 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT119 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT120 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT121 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT122 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT123 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT124 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT125 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT126 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT127 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT128 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT129 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT130 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT131 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT132 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT133 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT134 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT135 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT136 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT137 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT138 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT139 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT140 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT141 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT142 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT143 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT144 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT145 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT146 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT147 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT148 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT149 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT150 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT151 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT152 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT153 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT154 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT155 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT156 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT157 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOPSTAT_INT158 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers

(packed)CASINOPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)CASINOPSTAT_BOOL1 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)CASINOPSTAT_BOOL2 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)CASINOPSTAT_BOOL3 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)CASINOPSTAT_BOOL4 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)CASINOPSTAT_BOOL5 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)CASINOPSTAT_BOOL6 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.

(int)MPPLY_RCTTBESTTIME // RC Time Trials
(int)MPPLY_RCTTCOMPLETEDWEEK // RC Time Trials
(bool)MPPLY_RCTTDONESTATINIT // RC Time Trials


(int)CASINO_CHIPS // Add MP0_ or MP1_ // Casino chips the player owns 1 chip = 1 GTA $
(int)MPPLY_CASINO_CHIPS_PUR_GD // Casino chips the player has purchased from the house shop this past gameday
(int)MPPLY_CASINO_CHIPS_PURTIM // Time of purchase for casino chips from the house
(int)MPPLY_CASINO_CHIPS_WON_GD // Casino chips the player has won by betting this past gameday
(int)MPPLY_CASINO_CHIPS_WONTIM // Time of winning a bet against the house

(int)CASINOAPT_OWNED // Add MP0_ or MP1_ // Casino - Casino apartment owned
(int)CASINOAPT_MOD_INTERIORA // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)CASINOAPT_MOD_INTERIORB // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)CASINOAPT_MOD_C // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)CASINOAPT_MOD_D // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)CASINOAPT_MOD_E // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)CASINOAPT_MOD_F // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)CASINOAPT_MOD_G // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)CASINOAPT_MOD_H // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)CASINOAPT_MOD_I // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)CASINOAPT_MOD_J // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)CASINOAPT_MOD_K // Add MP0_ or MP1_ // Casino - Casino apartment customisation
(int)KINGOFHILLWINS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Record of most King Of The Hill wins in one arm wrestling sesson
(int)KINGOFHILLLOSS // Add MP0_ or MP1_ // MP Char 0 - PERSONAL  -Record of most King Of The Hill losses in one arm wrestling sesson
(int)COLLECTACTIONFIGHELPCOUNT // Add MP0_ or MP1_ // times displayed action figure help
(int)CASINO_NOTIFICATIONS // Add MP0_ or MP1_ // Casino notifications count
(int)SHOPFM_HAIRDO_CASINO_APT // Add MP0_ or MP1_ // Shop stat for Casino Apt Hairdo Shop
(int)COLLECTACTIONCARDHELPCONT // Add MP0_ or MP1_ // times displayed playing help

<stat Name="AWD_FIRST_TIME1"Type="bool"SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete Casino - Rescue for the first time   "/>  
<stat Name="AWD_FIRST_TIME2"Type="bool"SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete Casino - Brawl for the first time "/>
<stat Name="AWD_FIRST_TIME3"Type="bool"SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete Casino - Meeting for the first time   "/>
<stat Name="AWD_FIRST_TIME4"Type="bool"SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete Casino - Oil Demolition for the first time"/>
<stat Name="AWD_FIRST_TIME5"Type="bool"SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete Casino - Defend for the first time"/>
<stat Name="AWD_FIRST_TIME6"Type="bool"SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete Casino - Finale for the first time"/>
<stat Name="AWD_ALL_IN_ORDER"   Type="bool"SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete all Casino Story Missions in order"/>
<stat Name="AWD_SUPPORTING_ROLE"Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete all missions as a Crew Member "/>
<stat Name="AWD_LEADER" Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete all missions as Leader"/>
<stat Name="AWD_ODD_JOBS"   Type="int" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete X freemode missions for the Casino Manager and earn $X"/> 
<stat Name="AWD_SURVIVALIST"Type="bool"SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "Complete a Casino Story Mission without losing a life  "/> 
(bool)HAS_TAKEN_PEYOTE_BEFORE // Add MP0_ or MP1_ // Has the player taken peyote before

(int)SHOPFM_CLOTHES_CASINO // Add MP0_ or MP1_ // Shop stat for casino clothes shop
(int)LUXSUITETABLESETTING // Add MP0_ or MP1_ // Setting for PI menu Lux Suite dealer table
(int)MPPLY_CASINO_MEM_BONUS // Count of time we have awarded the player bonus chips for purchasing the membership

(int)DISCOUNT_PLANE_SITE // Add MP0_ or MP1_ // Posix time for Lucky 7 vehicle purchase discount
(int)DISCOUNT_BOAT_SITE // Add MP0_ or MP1_ // Posix time for Lucky 7 vehicle purchase discount
(int)DISCOUNT_CAR_SITE // Add MP0_ or MP1_ // Posix time for Lucky 7 vehicle purchase discount
(int)DISCOUNT_CAR_SITE2 // Add MP0_ or MP1_ // Posix time for Lucky 7 vehicle purchase discount
(int)DISCOUNT_MIL_SITE // Add MP0_ or MP1_ // Posix time for Lucky 7 vehicle purchase discount
(int)DISCOUNT_BIKE_SITE // Add MP0_ or MP1_ // Posix time for Lucky 7 vehicle purchase discount

(int)INSIDETRACK_BET_HORSEID // Add MP0_ or MP1_ // Inside Track Bet - horseID
(int)INSIDETRACK_BET_CHIPS // Add MP0_ or MP1_ // Inside Track Bet - chips
(int)INSIDETRACK_BET_RESULT // Add MP0_ or MP1_ // Inside Track Bet - result
(int)INSIDETRACK_BET_FINISHTIME // Add MP0_ or MP1_ // Inside Track Bet - finish time
(int)INSIDETRACK_BET_GAMESEED // Add MP0_ or MP1_ // Inside Track Bet - game seed
(int)VCM_FLOW_PROGRESS // Add MP0_ or MP1_ // i.e. flow process
(int)CASINO_MISSION_CDTIMER // Add MP0_ or MP1_ // HEIST COOLDOWN TIMERS

(int)CASINO_APT_DECORATION_1 // Add MP0_ or MP1_ //  store casino decoration items1 
(int)CASINO_APT_DECORATION_2 // Add MP0_ or MP1_ //  store casino decoration items2 
(int)CASINO_APT_DECORATION_3 // Add MP0_ or MP1_ //  store casino decoration items3 
(int)CASINO_APT_DECORATION_4 // Add MP0_ or MP1_ //  store casino decoration items4 
(int)CASINO_APT_DECORATION_5 // Add MP0_ or MP1_ //  store casino decoration items5 
(int)CASINO_APT_DECORATION_6 // Add MP0_ or MP1_ //  store casino decoration items6 
(int)CASINO_APT_DECORATION_7 // Add MP0_ or MP1_ //  store casino decoration items7 
(int)CASINO_APT_DECORATION_8 // Add MP0_ or MP1_ //  store casino decoration items8 
(int)CASINO_APT_DECORATION_9 // Add MP0_ or MP1_ //  store casino decoration items9 
(int)CASINO_APT_DECORATION_10 // Add MP0_ or MP1_ //  store casino decoration items10 
(int)CASINO_APT_DECORATION_11 // Add MP0_ or MP1_ //  store casino decoration items11 
(int)CASINO_APT_DECORATION_12 // Add MP0_ or MP1_ //  store casino decoration items12 
(int)CASINO_APT_DECORATION_13 // Add MP0_ or MP1_ //  store casino decoration items13 

(int)VCM_STORY_PROGRESS // Add MP0_ or MP1_ // i.e. flow process

(int)MPPLY_CAS_TIME_GMBLNG_0 // Casino time spent gambling stat 0
(int)MPPLY_CAS_TIME_GMBLNG_1 // Casino time spent gambling stat 1
(int)MPPLY_CAS_TIME_GMBLNG_2 // Casino time spent gambling stat 2
(int)MPPLY_CAS_TIME_GMBLNG_3 // Casino time spent gambling stat 3
(int)MPPLY_CAS_TIME_GMBLNG_4 // Casino time spent gambling stat 4
(int)MPPLY_CAS_TIME_GMBLNG_5 // Casino time spent gambling stat 5
(int)MPPLY_CAS_TIME_GMBLNG_6 // Casino time spent gambling stat 6
(int)MPPLY_CAS_TIME_GMBLNG_7 // Casino time spent gambling stat 7
(int)MPPLY_CAS_TIME_GMBLNG_8 // Casino time spent gambling stat 8
(int)MPPLY_CAS_TIME_GMBLNG_9 // Casino time spent gambling stat 9

(int)MPPLY_CAS_TIME_PLYING_0 // Casino time spent playing GTAO stat 0
(int)MPPLY_CAS_TIME_PLYING_1 // Casino time spent playing GTAO stat 1
(int)MPPLY_CAS_TIME_PLYING_2 // Casino time spent playing GTAO stat 2
(int)MPPLY_CAS_TIME_PLYING_3 // Casino time spent playing GTAO stat 3
(int)MPPLY_CAS_TIME_PLYING_4 // Casino time spent playing GTAO stat 4
(int)MPPLY_CAS_TIME_PLYING_5 // Casino time spent playing GTAO stat 5
(int)MPPLY_CAS_TIME_PLYING_6 // Casino time spent playing GTAO stat 6
(int)MPPLY_CAS_TIME_PLYING_7 // Casino time spent playing GTAO stat 7
(int)MPPLY_CAS_TIME_PLYING_8 // Casino time spent playing GTAO stat 8
(int)MPPLY_CAS_TIME_PLYING_9 // Casino time spent playing GTAO stat 9

(int)MPPLY_CASINO_BAN_TIME // Casino posix time the player was banned from gambling
(int)MPPLY_CASINO_GMBLNG_GD // The POSIX time for the day on which the player gambling tracking started
(int)MPPLY_CAS_CUR_GMBLNG_GD // The current gameday for which we are tracking gambling play time
(int)MPPLY_CAS_CUR_GMBLNG_PX // The POSIX time for the time at which gambling stats were last updated

(int)MPPLY_CAS_GMBLNG_L24_PX // The POSIX time for the time at which we started tracking the last 24 hours of gambling time
(int)MPPLY_CAS_GMBLNG_L24 // Casino time spent gambling in the last 24 hours stat
(int)MPPLY_CAS_GMBLNG_TRHSLD // Counter for the number of times we've gambled for at least 10 hours in a 24 hour period
(int)MPPLY_CAS_GMBLNG_L24_1 // Casino time spent gambling in the last 24 hours stat - Moving track
(int)MPPLY_CAS_GMBLNG_L24_2 // Casino time spent gambling in the last 24 hours stat - Moving track
(int)MPPLY_CAS_GMBLNG_L24_3 // Casino time spent gambling in the last 24 hours stat - Moving track
(int)MPPLY_CAS_GMBLNG_L24_4 // Casino time spent gambling in the last 24 hours stat - Moving track
(int)MPPLY_CAS_GMBLNG_L24_5 // Casino time spent gambling in the last 24 hours stat - Moving track
(int)MPPLY_CAS_GMBLNG_L24_6 // Casino time spent gambling in the last 24 hours stat - Moving track
(int)MPPLY_CAS_GMBLNG_L24_7 // Casino time spent gambling in the last 24 hours stat - Moving track
(int)MPPLY_CAS_GMBLNG_L24_8 // Casino time spent gambling in the last 24 hours stat - Moving track
(int)MPPLY_CAS_CUR_GMBLNG_HR // The current hour for which we are tracking gambling play time - 24hr track

(int)ACTION_FIG_COLLECTED // Add MP0_ or MP1_ // Collectables 
(int)PLAYING_CARD_COLLECTED // Add MP0_ or MP1_ // Collectables 
(int)PEYOTE_COLLECTED // Add MP0_ or MP1_ // Collectables 

(bool)CAS_VEHICLE_REWARD // Add MP0_ or MP1_ // Vehicle reward done

(int)MPPLY_CAS_24H_GMBLNG_PX // The POSIX time for the time at which 24hr gambling tracking stats were last updated


(int)DLC_APPAREL_ACQUIRED_176 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_177 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_178 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_179 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_180 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_181 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_182 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_183 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_184 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_185 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_186 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_187 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_188 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_189 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_190 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_191 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_192 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_193 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_194 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_195 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_196 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_197 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_198 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_199 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_200 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_176 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_177 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_178 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_179 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_180 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_181 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_182 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_183 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_184 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_185 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_186 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_187 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_188 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_189 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_190 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_191 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_192 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_193 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_194 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_195 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_196 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_197 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_198 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_199 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_200 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)LUCKY_WHEEL_USAGE // Add MP0_ or MP1_ // Character stat posix time for Lucky Wheel usage
(int)LW_PODIUM_VEH_WON // Add MP0_ or MP1_ // Character stat posix time for Lucky Wheel podium vehicle
(int)MPPLY_LW_PODIUM_VEH_MODEL // player stat or Lucky Wheel podium vehicle model
(int)MPPLY_LUCKY_WHEEL_USAGE // player stat posix time for Lucky Wheel usage
(int)MPPLY_LW_PODIUM_VEH_WON // player stat posix time for Lucky Wheel podium vehicle
(bool)DISPLAY_VC_VEH_HELP // Add MP0_ or MP1_ // Casino Vehicles 
(int)CASINO_CLOTHES_TIME // Add MP0_ or MP1_ // Posix time for casino clothes shop time

(bool)HELPKRIEGER // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPLOCUST // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPNOVAK // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPZORRUSSO // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPGAUNTLET3 // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPZION3 // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPNEBULA // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPHELLION // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPRROCKET // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPPEYOTE2 // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPGAUNTLET4 // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPJUGULAR // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPS80 // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPEMERUS // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPNEO // Add MP0_ or MP1_ // Casino Vehicles 
(bool)HELPDYNASTY // Add MP0_ or MP1_ // Casino Vehicles 

(int)SCGW_NUM_WINS_GANG_0 // Add MP0_ or MP1_ // Arcade Stats 
(int)SCGW_NUM_WINS_GANG_1 // Add MP0_ or MP1_ // Arcade Stats 
(int)SCGW_NUM_WINS_GANG_2 // Add MP0_ or MP1_ // Arcade Stats 
(int)SCGW_NUM_WINS_GANG_3 // Add MP0_ or MP1_ // Arcade Stats 
(int)IAP_MAX_MOON_DIST // Add MP0_ or MP1_ // Arcade Stats 
(bool)SCGW_WON_NO_DEATHS // Add MP0_ or MP1_ // Arcade Stats 
(bool)IAP_CHALLENGE_0 // Add MP0_ or MP1_ // Arcade Stats 
(bool)IAP_CHALLENGE_1 // Add MP0_ or MP1_ // Arcade Stats 
(bool)IAP_CHALLENGE_2 // Add MP0_ or MP1_ // Arcade Stats 
(bool)IAP_CHALLENGE_3 // Add MP0_ or MP1_ // Arcade Stats 
(bool)IAP_CHALLENGE_4 // Add MP0_ or MP1_ // Arcade Stats 
(bool)IAP_GOLD_TANK // Add MP0_ or MP1_ // Arcade Stats 
(bool)VCM_FLOW_CS_RSC_SEEN // Add MP0_ or MP1_ // Intro Cutscenes
(bool)VCM_FLOW_CS_BWL_SEEN // Add MP0_ or MP1_ // Intro Cutscenes
(bool)VCM_FLOW_CS_MTG_SEEN // Add MP0_ or MP1_ // Intro Cutscenes
(bool)VCM_FLOW_CS_OIL_SEEN // Add MP0_ or MP1_ // Intro Cutscenes
(bool)VCM_FLOW_CS_DEF_SEEN // Add MP0_ or MP1_ // Intro Cutscenes
(bool)VCM_FLOW_CS_FIN_SEEN // Add MP0_ or MP1_ // Intro Cutscenes
(int)LAST_ANIMAL // Add MP0_ or MP1_ // last animal

(int)IAP_INITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_INITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_INITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_INITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_INITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_INITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_INITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_INITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_INITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_INITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_SCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_SCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_SCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_SCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_SCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_SCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_SCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_SCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_SCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)IAP_SCORE_9 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_INITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_INITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_INITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_INITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_INITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_INITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_INITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_INITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_INITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_INITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_SCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_SCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_SCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_SCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_SCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_SCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_SCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_SCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_SCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)SCGW_SCORE_9 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_INITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_INITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_INITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_INITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_INITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_INITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_INITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_INITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_INITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_INITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_SCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_SCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_SCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_SCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_SCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_SCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_SCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_SCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_SCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_DEFENDER_SCORE_9 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_INITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_INITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_INITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_INITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_INITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_INITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_INITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_INITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_INITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_INITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_SCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_SCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_SCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_SCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_SCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_SCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_SCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_SCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_SCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_MONKEY_SCORE_9 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_INITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_INITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_INITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_INITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_INITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_INITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_INITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_INITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_INITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_INITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_SCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_SCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_SCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_SCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_SCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_SCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_SCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_SCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_SCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)DG_PENETRATOR_SCORE_9 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_INITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_INITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_INITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_INITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_INITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_INITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_INITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_INITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_INITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_INITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_SCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_SCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_SCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_SCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_SCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_SCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_SCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_SCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_SCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)GGSM_SCORE_9 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_INITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_INITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_INITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_INITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_INITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_INITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_INITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_INITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_INITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_INITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_SCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_SCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_SCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_SCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_SCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_SCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_SCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_SCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_SCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)TWR_SCORE_9 // Add MP0_ or MP1_ // Arcade Games 
(int)TATTOO_FM_UNLOCKS_39 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 35
(int)TATTOO_FM_CURRENT_39 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 35
(int)TATTOO_FM_VIEWED_39 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 35
(int)TATTOO_FM_UNLOCKS_40 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 36
(int)TATTOO_FM_CURRENT_40 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 36
(int)TATTOO_FM_VIEWED_40 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 36
(int)TATTOO_FM_UNLOCKS_41 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 37
(int)TATTOO_FM_CURRENT_41 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 37
(int)TATTOO_FM_VIEWED_41 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 37
(int)TATTOO_FM_UNLOCKS_42 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 38
(int)TATTOO_FM_CURRENT_42 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 38
(int)TATTOO_FM_VIEWED_42 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 38

(bool)MPPLY_CROSSPLATCARD // Stat to track if headshot challenge is complete to unlock weapon in bob
(bool)MPPLY_CROSSPLATCARD2 // Stat to track if headshot challenge is complete to unlock weapon in bob

(int)MPPLY_CHIPS_COL_TIME // Casino chips the player collected for free - Time this was last collected
(int)ADMIN_CLOTHES_RM_BS_27 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_27 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_28 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_28 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN

(int)ADMIN_DECORATION_GV_BS_1 // Add MP0_ or MP1_ // Give decoration items from SCAdmin
(u64)ADMIN_DECORATION_GV_POSIX // Add MP0_ or MP1_ // Posix of when the last give/remove decoration through SCADMIN was applied.

(int)LW_NEW_POD_VEH_ANNOUNCE // Add MP0_ or MP1_ // store lucky wheel new podium vehicle model



(int)H3OPT_DISRUPTSHIP // Add MP0_ or MP1_ // Disrupt shipments (determines guard weapons / health / armour)
(int)H3OPT_BODYARMORLVL // Add MP0_ or MP1_ // Players purchase Body Armour with different levels (Direct approach only)
(int)H3OPT_CREWWEAP // Add MP0_ or MP1_ // Crew Weapons > weapons (depending on the crew member selected gives the player choice of loadout)
(int)H3OPT_CREWDRIVER // Add MP0_ or MP1_ // Crew Drivers > Entrance Vehicle (helicopter if roof entrance is selected) and escape vehicle (gives player choice of car depending on the crew member, players can mod these in the underground base)
(int)H3OPT_CREWHACKER // Add MP0_ or MP1_ // Crew Hacker > Hacking time in the vault (how long before the gas starts in vault depends on hacker expertise)
(int)H3OPT_KEYLEVELS // Add MP0_ or MP1_ // Inside man gets you keycards that have access to different levels (Levels 1, 2 and 3)
(int)H3OPT_MODVEH // Add MP0_ or MP1_ // MOD vehicle
(int)H3OPT_MASKS // Add MP0_ or MP1_ // Masks

(int)H3OPT_WEAPS // Add MP0_ or MP1_ // Weawpons
(int)H3OPT_VEHS // Add MP0_ or MP1_ // Vehicles
(int)H3OPT_APPROACH // Add MP0_ or MP1_ // Approach
(int)H3OPT_BITSET0 // Add MP0_ or MP1_ // Bitset0
(int)H3OPT_ACCESSPOINTS // Add MP0_ or MP1_ // Bitset0
(int)H3OPT_TARGET // Add MP0_ or MP1_ // Bitset0
(int)H3OPT_POI // Add MP0_ or MP1_ // Bitset0
(int)H3OPT_BITSET1 // Add MP0_ or MP1_ // Bitset0
(int)H3_PARTIALPASS // Add MP0_ or MP1_ // Bitset0

<!-- Casino HEIST Pack -->
(int)PROP_ARCADE_GAR1 // Add MP0_ or MP1_ // Stores what other property player has purchased +_5
(int)PROP_ARCADE_GAR1_VALUE // Add MP0_ or MP1_ // Stores value other property player has purchased +_5

<!-- Vehicle_271-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_271 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_271 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_271 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_271 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_271 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_271 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_271 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_272-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_272 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_272 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_272 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_272 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_272 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_272 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_272 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_273-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_273 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_273 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_273 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_273 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_273 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_273 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_273 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_274-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_274 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_274 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_274 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_274 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_274 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_274 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_274 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_275-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_275 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_275 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_275 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_275 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_275 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_275 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_275 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_276-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_276 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_276 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_276 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_276 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_276 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_276 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_276 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_277-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_277 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_277 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_277 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_277 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_277 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_277 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_277 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_278-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_278 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_278 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_278 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_278 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_278 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_278 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_278 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_279-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_279 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_279 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_279 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_279 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_279 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_279 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_279 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0
<!-- Vehicle_280-->
<!-- Non Packed -->
(int)MPSV_VEHICLE_BS_280 // Add MP0_ or MP1_ // Vehicle_225 bitset of various control flags for vehicle
(int)MPSV_IMPOUND_TIME_280 // Add MP0_ or MP1_ // Vehicle_225 time vehicle was impounded
(int)MPSV_PREMIUM_PAID_280 // Add MP0_ or MP1_ // Vehicle_225 premium paid by destroyer of vehicle
(int)MPSV_MODEL_280 // Add MP0_ or MP1_ // Vehicle_225 model enum of vehicle
(int)MPSV_FLAGS_280 // Add MP0_ or MP1_ // Vehicle_225 bitset of vehicle flags associated with mods
(int)MPSV_PRICE_PAID_280 // Add MP0_ or MP1_ // Vehicle_225 cost of vehicle when purchased
<!-- 1 stat per License Plate -->
(u64)MPSV_LP0_280 // Add MP0_ or MP1_ // Vehicle_225 licence plate part 0


(packed)CASINOHSTPSTAT_INT0 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT1 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT2 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT3 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT4 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT5 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT6 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT7 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT8 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT9 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT10 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT11 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT12 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT13 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT14 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT15 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT16 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT17 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT18 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT19 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT20 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT21 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT22 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT23 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT24 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT25 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT26 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT27 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT28 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT29 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT30 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT31 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT32 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT33 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT34 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT35 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT36 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT37 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT38 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT39 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT40 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT41 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT42 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT43 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT44 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT45 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT46 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT47 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT48 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT49 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT50 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT51 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT52 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT53 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT54 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT55 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT56 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT57 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT58 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT59 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT60 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT61 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT62 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT63 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT64 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT65 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT66 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT67 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT68 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT69 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT70 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT71 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT72 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT73 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT74 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT75 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT76 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT77 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT78 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT79 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT80 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT81 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT82 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT83 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT84 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT85 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT86 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT87 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT88 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT89 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT90 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT91 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT92 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT93 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT94 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT95 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT96 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT97 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT98 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT99 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT100 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT101 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT102 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT103 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers
(packed)CASINOHSTPSTAT_INT104 // Add MP0_ or MP1_ // Character Stat with Packed integers index 32. Takes up to 8 integers

(packed)CASINOHSTPSTAT_BOOL0 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)CASINOHSTPSTAT_BOOL1 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.

(int)PROP_ARCADE_VALUE // Add MP0_ or MP1_ // Stores value of arcade property player has purchased
(int)ARCADE_OWNED // Add MP0_ or MP1_ // Arcade owned
(int)ARCADE_FLOOR // Add MP0_ or MP1_ // Arcade floor customisation
(int)ARCADE_CEILING // Add MP0_ or MP1_ // Arcade ceiling customisation
(int)ARCADE_WALL // Add MP0_ or MP1_ // Arcade wall customisation
(int)ARCADE_PERSONAL_QUARTERS // Add MP0_ or MP1_ // Arcade personal quarters customisation
(int)ARCADE_GARAGE // Add MP0_ or MP1_ // Arcade garage customisation
(int)ARCADE_NEON_LIGHTS // Add MP0_ or MP1_ // Arcade neon lights customisation
(int)ARCADE_SCREENS // Add MP0_ or MP1_ // Arcade screens customisation
(int)CAS_HEIST_NOTS // Add MP0_ or MP1_ //  casino heist notifications and flow
(int)CAS_HEIST_FLOW // Add MP0_ or MP1_ //  casino heist notifications and flow
(int)SIGNAL_JAMMERS_COLLECTED // Add MP0_ or MP1_ // Collectables 

<stat Name="AWD_SCOPEOUT"   Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_PREPARATION"Type="int" SaveCategory="1"   online="true"  profile="true"   ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_CREWEDUP"   Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_MOVINGON"   Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_PROMOCAMP"  Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_GUNMAN" Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_SMASHNGRAB" Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_INPLAINSI"  Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_UNDETECTED" Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_ALLROUND"   Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_ELITETHEIF" Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_PRO"Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_SUPPORTACT" Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_SHAFTED"Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_ASLEEPONJOB"Type="int" SaveCategory="1"   online="true"  profile="true"   ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_DAICASHCRAB"Type="int" SaveCategory="1"   online="true"  profile="true"   ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_BIGBRO" Type="int" SaveCategory="1"   online="true"  profile="true"   ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_COLLECTOR"  Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_DEADEYE"Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_PISTOLSATDAWN"  Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_SHARPSHOOTER"   Type="int" SaveCategory="1"   online="true"  profile="true"   ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_RACECHAMP"  Type="int" SaveCategory="1"   online="true"  profile="true"   ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_TRAFFICAVOI"Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_CANTCATCHBRA"   Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_WIZHARD"Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_BATSWORD"   Type="int" SaveCategory="1"   online="true"  profile="true"   ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_COINPURSE"  Type="int" SaveCategory="1"   online="true"  profile="true"   ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_APEESCAPE"  Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_MONKEYKIND" Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_ASTROCHIMP" Type="int" SaveCategory="1"   online="true"  profile="true"   ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_AQUAAPE"Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_KEEPFAITH"  Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_MASTERFUL"  Type="int" SaveCategory="1"   online="true"  profile="true"   ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_TRUELOVE"   Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_NEMESIS"Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
<stat Name="AWD_FRIENDZONED"Type="bool" SaveCategory="1"   online="true"  profile="true"  ServerAuthoritative="false" FlushPriority="10"   Owner="script" characterStat="true"  Comment= "New Casino Heist awards"/>
(int)BRONZE_BOOLCHAR_3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)BRONZE_INTCHAR_4 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_BOOLCHAR_3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)SILVER_INTCHAR_4 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)GOLD_BOOLCHAR_3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)GOLD_INTCHAR_4 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)PLATINUM_BOOLCHAR_3 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)PLATINUM_INTCHAR_4 // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset

(int)ARCADE_BUS_HUB // Add MP0_ or MP1_ // Arcade business hub
(int)ARCADE_DRON_ST // Add MP0_ or MP1_ // Arcade drone station

(int)ARCADE_MAC_0 // Add MP0_ or MP1_ // Arcade machine 0 ownership
(int)ARCADE_MAC_1 // Add MP0_ or MP1_ // Arcade machine 1 ownership
(int)ARCADE_MAC_2 // Add MP0_ or MP1_ // Arcade machine 2 ownership
(int)ARCADE_MAC_3 // Add MP0_ or MP1_ // Arcade machine 3 ownership
(int)ARCADE_MAC_4 // Add MP0_ or MP1_ // Arcade machine 4 ownership
(int)ARCADE_MAC_5 // Add MP0_ or MP1_ // Arcade machine 5 ownership
(int)ARCADE_MAC_6 // Add MP0_ or MP1_ // Arcade machine 6 ownership
(int)ARCADE_MAC_7 // Add MP0_ or MP1_ // Arcade machine 7 ownership
(int)ARCADE_MAC_8 // Add MP0_ or MP1_ // Arcade machine 8 ownership
(int)ARCADE_MAC_9 // Add MP0_ or MP1_ // Arcade machine 9 ownership
(int)ARCADE_MAC_10 // Add MP0_ or MP1_ // Arcade machine 10 ownership
(int)ARCADE_MAC_11 // Add MP0_ or MP1_ // Arcade machine 11 ownership

(int)CH_ARC_CAB_DISPLAY_SLOT1 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT2 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT3 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT4 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT5 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT6 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT7 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT8 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT9 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT10 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT11 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT12 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT13 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT14 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT15 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT16 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT17 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT18 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT19 // Add MP0_ or MP1_ // display slot to save arcade property's aracade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT20 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT21 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT22 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT23 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT24 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT25 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT26 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT27 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT28 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT29 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT30 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT31 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT32 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT33 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT34 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT35 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT36 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT37 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT38 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet
(int)CH_ARC_CAB_DISPLAY_SLOT39 // Add MP0_ or MP1_ // display slot to save arcade property's arcade cabinet

(int)CH_ARC_LOVE_LEVEL0 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL1 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL2 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL3 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL4 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL5 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL6 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL7 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL8 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL9 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL10 // Add MP0_ or MP1_ // Track love meter player score
(int)CH_ARC_LOVE_LEVEL11 // Add MP0_ or MP1_ // Track love meter player score


(int)ARCADE_MAC_12 // Add MP0_ or MP1_ // Arcade machine 12 ownership
(bool)MPPLY_NAVYREVOLVERCOMPLETED // Stat to track if NAvy Revolver challenge is complete to unlock weapon in bob

(int)H3_LAST_APPROACH // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)H3_HARD_APPROACH // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)H3_SKIPCOUNT // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset
(int)H3_MISSIONSKIPPED // Add MP0_ or MP1_ // MP Char 0 - Player Int Char Awards Platinum Level bitset


(int)BADLAND_INITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_INITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_INITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_INITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_INITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_INITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_INITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_INITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_INITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_INITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_SCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_SCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_SCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_SCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_SCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_SCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_SCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_SCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_SCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)BADLAND_SCORE_9 // Add MP0_ or MP1_ // Arcade Games 

(int)JUKEBOXPLAYLISTTIME4 // Add MP0_ or MP1_ // Playlist 4 time
(int)JUKEBOXPLAYLISTTIME5 // Add MP0_ or MP1_ // Playlist 5 time
(int)JUKEBOXPLAYLISTTIME6 // Add MP0_ or MP1_ // Playlist 6 time
(int)JUKEBOXPLAYLISTTIME7 // Add MP0_ or MP1_ // Playlist 7 time
(int)JUKEBOXPLAYLISTTIME8 // Add MP0_ or MP1_ // Playlist 8 time

(int)H3_BOARD_DIALOGUE0 // Add MP0_ or MP1_ // planning board dialogue
(int)H3_BOARD_DIALOGUE1 // Add MP0_ or MP1_ // planning board dialogue
(int)H3_BOARD_DIALOGUE2 // Add MP0_ or MP1_ // planning board dialogue
(int)ARCADE_PAY_TIME_LEFT // Add MP0_ or MP1_ //  arcade money earning
(int)ARCADE_SAFE_CASH_VALUE // Add MP0_ or MP1_ //  arcade money earning
(int)H3_VEHICLESUSED // Add MP0_ or MP1_ // planning board dialogue
(int)MPPLY_H3_COOLDOWN // Casino Heist cooldown
(int)H3_COMPLETEDPOSIX // Add MP0_ or MP1_ // set up cooldown

(int)STREETLEGINITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGINITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGINITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGINITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGINITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGINITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGINITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGINITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGINITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGINITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGSCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGSCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGSCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGSCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGSCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGSCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGSCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGSCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGSCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)STREETLEGSCORE_9 // Add MP0_ or MP1_ // Arcade Games 

(int)CROTCHINITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHINITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHINITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHINITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHINITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHINITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHINITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHINITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHINITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHINITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHSCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHSCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHSCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHSCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHSCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHSCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHSCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHSCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHSCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)CROTCHSCORE_9 // Add MP0_ or MP1_ // Arcade Games 


(int)GETTRUCKINITIALS_0 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKINITIALS_1 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKINITIALS_2 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKINITIALS_3 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKINITIALS_4 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKINITIALS_5 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKINITIALS_6 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKINITIALS_7 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKINITIALS_8 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKINITIALS_9 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKSCORE_0 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKSCORE_1 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKSCORE_2 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKSCORE_3 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKSCORE_4 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKSCORE_5 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKSCORE_6 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKSCORE_7 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKSCORE_8 // Add MP0_ or MP1_ // Arcade Games 
(int)GETTRUCKSCORE_9 // Add MP0_ or MP1_ // Arcade Games 

(int)CH_ARC_CAB_CLAW_TROPHY // Add MP0_ or MP1_ // claw crane trophy
(int)CH_ARC_CAB_LOVE_TROPHY // Add MP0_ or MP1_ // love meter trophy
(int)ARCADE_CONTRABAND_MISSION // Add MP0_ or MP1_ // Inventory slot to validate transactions
(int)ARCADE_HELP_BITSET // Add MP0_ or MP1_ // Arcade Games 
(int)ARCADE_HELP_BITSETTWO // Add MP0_ or MP1_ // Arcade Games 

(int)CASINO_APT_DECORATION_14 // Add MP0_ or MP1_ //  store casino decoration items14

(int)TATTOO_FM_UNLOCKS_43 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 38
(int)TATTOO_FM_CURRENT_43 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 38
(int)TATTOO_FM_VIEWED_43 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 38
(int)TATTOO_FM_UNLOCKS_44 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 38
(int)TATTOO_FM_CURRENT_44 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 38
(int)TATTOO_FM_VIEWED_44 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 38
(int)TATTOO_FM_UNLOCKS_45 // Add MP0_ or MP1_ // MP Char 0 - Tattoos Unlocks 38
(int)TATTOO_FM_CURRENT_45 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 38
(int)TATTOO_FM_VIEWED_45 // Add MP0_ or MP1_ // MP Char 0 - Current Tattoos 38

(int)HEIST3_SESSION_ID_MACADDR // Add MP0_ or MP1_ // Heist help text
(int)HEIST3_SESSION_ID_POSTIME // Add MP0_ or MP1_ // Heist help text

(int)SHOPFM_PERS_GUN_ARCADE // Add MP0_ or MP1_ // Shop stat for Arcade Armory
(bool)HELP_FURIA // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_MINITANK // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_YOSEMITE2 // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_ZHABA // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_IMORGEN // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_SULTAN2 // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_VAGRANT // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_VSTR // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_STRYDER // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_SUGOI // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_KANJO // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_FORMULA // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_FORMULA2 // Add MP0_ or MP1_ // help text for veh unlocks
(bool)HELP_JB7002 // Add MP0_ or MP1_ // help text for veh unlocks

(int)H3_CR_STEALTH_1A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_STEALTH_2B_RAPP // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_STEALTH_2C_SIDE // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_STEALTH_3A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_STEALTH_4A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_STEALTH_5A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_SUBTERFUGE_1A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_SUBTERFUGE_2A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_SUBTERFUGE_2B // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_SUBTERFUGE_3A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_SUBTERFUGE_3B // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_SUBTERFUGE_4A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_SUBTERFUGE_5A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_DIRECT_1A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_DIRECT_2A1 // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_DIRECT_2A2 // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_DIRECT_2BP // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_DIRECT_2C // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_DIRECT_3A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_DIRECT_4A // Add MP0_ or MP1_ // mission completion counter
(int)H3_CR_DIRECT_5A // Add MP0_ or MP1_ // mission completion counter

(int)CR_ORDER // Add MP0_ or MP1_ // keep track of how many times a player has completed the beamhack minigame
(int)CR_FINGERPRINT // Add MP0_ or MP1_ // keep track of how many times a player has completed the beamhack minigame
(bool)RACECHASESTARTEDCAR // Add MP0_ or MP1_ // check to see if started race chase
(bool)RACECHASESTARTEDBIKE // Add MP0_ or MP1_ // check to see if started race chase
(bool)RACECHASESTARTEDTRUCK // Add MP0_ or MP1_ // check to see if started race chase

(bool)DISPLAY_CASHEIS_VEH_HELP // Add MP0_ or MP1_ // Casino Vehicles 

(int)DLC_APPAREL_ACQUIRED_201 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_202 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_203 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_204 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_ACQUIRED_205 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)DLC_APPAREL_USED_201 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_202 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_203 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_204 // Add MP0_ or MP1_ // Shop ped apparel save data
(int)DLC_APPAREL_USED_205 // Add MP0_ or MP1_ // Shop ped apparel save data

(int)CH_GETAWAY_MOD_LIV1 // Add MP0_ or MP1_ // Heist getaway veh1 upgrade
(int)CH_GETAWAY_MOD_LIV2 // Add MP0_ or MP1_ // Heist getaway veh2 upgrade
(int)CH_GETAWAY_MOD_LIV3 // Add MP0_ or MP1_ // Heist getaway veh3 upgrade
(int)CH_GETAWAY_MOD_LIV4 // Add MP0_ or MP1_ // Heist getaway veh4 upgrade

(int)CH_GETAWAY_MOD_UP1 // Add MP0_ or MP1_ // Heist getaway veh1 upgrade
(int)CH_GETAWAY_MOD_UP2 // Add MP0_ or MP1_ // Heist getaway veh2 upgrade
(int)CH_GETAWAY_MOD_UP3 // Add MP0_ or MP1_ // Heist getaway veh3 upgrade
(int)CH_GETAWAY_MOD_UP4 // Add MP0_ or MP1_ // Heist getaway veh4 upgrade

(int)CH_GETAWAY_MOD_C1 // Add MP0_ or MP1_ // Heist getaway veh1 colour
(int)CH_GETAWAY_MOD_C2 // Add MP0_ or MP1_ // Heist getaway veh2 colour
(int)CH_GETAWAY_MOD_C3 // Add MP0_ or MP1_ // Heist getaway veh3 colour
(int)CH_GETAWAY_MOD_C4 // Add MP0_ or MP1_ // Heist getaway veh4 colour
(packed)CASINOHSTPSTAT_BOOL2 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)CASINOHSTPSTAT_BOOL3 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)CASINOHSTPSTAT_BOOL4 // Add MP0_ or MP1_ // Character Stat with Packed booleans index 0. Takes up to 64 booleans.

<!-- Casino Heist Tattoo Purchase  stats -->
(packed)HEIST3TATTOOSTAT_BOOL0 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.
(packed)HEIST3TATTOOSTAT_BOOL1 // Add MP0_ or MP1_ // Stat with Packed booleans index 0. Takes up to 64 booleans.

(int)ARC_PROPERTY_EARNINGS // Add MP0_ or MP1_ // Arcade property earnings

(int)ADMIN_CLOTHES_RM_BS_29 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_29 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_30 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_30 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_RM_BS_31 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
(int)ADMIN_CLOTHES_GV_BS_31 // Add MP0_ or MP1_ // REMOVE THE TANK BY THE SCADMIN
